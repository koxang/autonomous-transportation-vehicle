ARM GAS  /tmp/cccGHnrd.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"BLDC_controller.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/BLDC_controller.c"
  18              		.section	.text.plook_u8s16_evencka,"ax",%progbits
  19              		.align	1
  20              		.global	plook_u8s16_evencka
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	plook_u8s16_evencka:
  26              	.LVL0:
  27              	.LFB0:
   1:Src/BLDC_controller.c **** /*
   2:Src/BLDC_controller.c ****  * File: BLDC_controller.c
   3:Src/BLDC_controller.c ****  *
   4:Src/BLDC_controller.c ****  * Code generated for Simulink model 'BLDC_controller'.
   5:Src/BLDC_controller.c ****  *
   6:Src/BLDC_controller.c ****  * Model version                  : 1.1297
   7:Src/BLDC_controller.c ****  * Simulink Coder version         : 8.13 (R2017b) 24-Jul-2017
   8:Src/BLDC_controller.c ****  * C/C++ source code generated on : Sun Mar  6 11:02:11 2022
   9:Src/BLDC_controller.c ****  *
  10:Src/BLDC_controller.c ****  * Target selection: ert.tlc
  11:Src/BLDC_controller.c ****  * Embedded hardware selection: ARM Compatible->ARM Cortex
  12:Src/BLDC_controller.c ****  * Emulation hardware selection:
  13:Src/BLDC_controller.c ****  *    Differs from embedded hardware (MATLAB Host)
  14:Src/BLDC_controller.c ****  * Code generation objectives:
  15:Src/BLDC_controller.c ****  *    1. Execution efficiency
  16:Src/BLDC_controller.c ****  *    2. RAM efficiency
  17:Src/BLDC_controller.c ****  * Validation result: Not run
  18:Src/BLDC_controller.c ****  */
  19:Src/BLDC_controller.c **** 
  20:Src/BLDC_controller.c **** #include "BLDC_controller.h"
  21:Src/BLDC_controller.c **** 
  22:Src/BLDC_controller.c **** /* Named constants for Chart: '<S5>/F03_02_Control_Mode_Manager' */
  23:Src/BLDC_controller.c **** #define IN_ACTIVE                      ((uint8_T)1U)
  24:Src/BLDC_controller.c **** #define IN_NO_ACTIVE_CHILD             ((uint8_T)0U)
  25:Src/BLDC_controller.c **** #define IN_OPEN                        ((uint8_T)2U)
  26:Src/BLDC_controller.c **** #define IN_SPEED_MODE                  ((uint8_T)1U)
  27:Src/BLDC_controller.c **** #define IN_TORQUE_MODE                 ((uint8_T)2U)
  28:Src/BLDC_controller.c **** #define IN_VOLTAGE_MODE                ((uint8_T)3U)
  29:Src/BLDC_controller.c **** #define OPEN_MODE                      ((uint8_T)0U)
  30:Src/BLDC_controller.c **** #define SPD_MODE                       ((uint8_T)2U)
  31:Src/BLDC_controller.c **** #define TRQ_MODE                       ((uint8_T)3U)
ARM GAS  /tmp/cccGHnrd.s 			page 2


  32:Src/BLDC_controller.c **** #define VLT_MODE                       ((uint8_T)1U)
  33:Src/BLDC_controller.c **** #ifndef UCHAR_MAX
  34:Src/BLDC_controller.c **** #include <limits.h>
  35:Src/BLDC_controller.c **** #endif
  36:Src/BLDC_controller.c **** 
  37:Src/BLDC_controller.c **** #if ( UCHAR_MAX != (0xFFU) ) || ( SCHAR_MAX != (0x7F) )
  38:Src/BLDC_controller.c **** #error Code was generated for compiler with different sized uchar/char. \
  39:Src/BLDC_controller.c **** Consider adjusting Test hardware word size settings on the \
  40:Src/BLDC_controller.c **** Hardware Implementation pane to match your compiler word sizes as \
  41:Src/BLDC_controller.c **** defined in limits.h of the compiler. Alternatively, you can \
  42:Src/BLDC_controller.c **** select the Test hardware is the same as production hardware option and \
  43:Src/BLDC_controller.c **** select the Enable portable word sizes option on the Code Generation > \
  44:Src/BLDC_controller.c **** Verification pane for ERT based targets, which will disable the \
  45:Src/BLDC_controller.c **** preprocessor word size checks.
  46:Src/BLDC_controller.c **** #endif
  47:Src/BLDC_controller.c **** 
  48:Src/BLDC_controller.c **** #if ( USHRT_MAX != (0xFFFFU) ) || ( SHRT_MAX != (0x7FFF) )
  49:Src/BLDC_controller.c **** #error Code was generated for compiler with different sized ushort/short. \
  50:Src/BLDC_controller.c **** Consider adjusting Test hardware word size settings on the \
  51:Src/BLDC_controller.c **** Hardware Implementation pane to match your compiler word sizes as \
  52:Src/BLDC_controller.c **** defined in limits.h of the compiler. Alternatively, you can \
  53:Src/BLDC_controller.c **** select the Test hardware is the same as production hardware option and \
  54:Src/BLDC_controller.c **** select the Enable portable word sizes option on the Code Generation > \
  55:Src/BLDC_controller.c **** Verification pane for ERT based targets, which will disable the \
  56:Src/BLDC_controller.c **** preprocessor word size checks.
  57:Src/BLDC_controller.c **** #endif
  58:Src/BLDC_controller.c **** 
  59:Src/BLDC_controller.c **** #if ( UINT_MAX != (0xFFFFFFFFU) ) || ( INT_MAX != (0x7FFFFFFF) )
  60:Src/BLDC_controller.c **** #error Code was generated for compiler with different sized uint/int. \
  61:Src/BLDC_controller.c **** Consider adjusting Test hardware word size settings on the \
  62:Src/BLDC_controller.c **** Hardware Implementation pane to match your compiler word sizes as \
  63:Src/BLDC_controller.c **** defined in limits.h of the compiler. Alternatively, you can \
  64:Src/BLDC_controller.c **** select the Test hardware is the same as production hardware option and \
  65:Src/BLDC_controller.c **** select the Enable portable word sizes option on the Code Generation > \
  66:Src/BLDC_controller.c **** Verification pane for ERT based targets, which will disable the \
  67:Src/BLDC_controller.c **** preprocessor word size checks.
  68:Src/BLDC_controller.c **** #endif
  69:Src/BLDC_controller.c **** 
  70:Src/BLDC_controller.c **** #if ( ULONG_MAX != (0xFFFFFFFFU) ) || ( LONG_MAX != (0x7FFFFFFF) )
  71:Src/BLDC_controller.c **** #error Code was generated for compiler with different sized ulong/long. \
  72:Src/BLDC_controller.c **** Consider adjusting Test hardware word size settings on the \
  73:Src/BLDC_controller.c **** Hardware Implementation pane to match your compiler word sizes as \
  74:Src/BLDC_controller.c **** defined in limits.h of the compiler. Alternatively, you can \
  75:Src/BLDC_controller.c **** select the Test hardware is the same as production hardware option and \
  76:Src/BLDC_controller.c **** select the Enable portable word sizes option on the Code Generation > \
  77:Src/BLDC_controller.c **** Verification pane for ERT based targets, which will disable the \
  78:Src/BLDC_controller.c **** preprocessor word size checks.
  79:Src/BLDC_controller.c **** #endif
  80:Src/BLDC_controller.c **** 
  81:Src/BLDC_controller.c **** #if 0
  82:Src/BLDC_controller.c **** 
  83:Src/BLDC_controller.c **** /* Skip this size verification because of preprocessor limitation */
  84:Src/BLDC_controller.c **** #if ( ULLONG_MAX != (0xFFFFFFFFFFFFFFFFULL) ) || ( LLONG_MAX != (0x7FFFFFFFFFFFFFFFLL) )
  85:Src/BLDC_controller.c **** #error Code was generated for compiler with different sized ulong_long/long_long. \
  86:Src/BLDC_controller.c **** Consider adjusting Test hardware word size settings on the \
  87:Src/BLDC_controller.c **** Hardware Implementation pane to match your compiler word sizes as \
  88:Src/BLDC_controller.c **** defined in limits.h of the compiler. Alternatively, you can \
ARM GAS  /tmp/cccGHnrd.s 			page 3


  89:Src/BLDC_controller.c **** select the Test hardware is the same as production hardware option and \
  90:Src/BLDC_controller.c **** select the Enable portable word sizes option on the Code Generation > \
  91:Src/BLDC_controller.c **** Verification pane for ERT based targets, which will disable the \
  92:Src/BLDC_controller.c **** preprocessor word size checks.
  93:Src/BLDC_controller.c **** #endif
  94:Src/BLDC_controller.c **** #endif
  95:Src/BLDC_controller.c **** 
  96:Src/BLDC_controller.c **** uint8_T plook_u8s16_evencka(int16_T u, int16_T bp0, uint16_T bpSpace, uint32_T
  97:Src/BLDC_controller.c ****   maxIndex);
  98:Src/BLDC_controller.c **** uint8_T plook_u8u16_evencka(uint16_T u, uint16_T bp0, uint16_T bpSpace, uint32_T
  99:Src/BLDC_controller.c ****   maxIndex);
 100:Src/BLDC_controller.c **** int32_T div_nde_s32_floor(int32_T numerator, int32_T denominator);
 101:Src/BLDC_controller.c **** extern void Counter_Init(DW_Counter *localDW, int16_T rtp_z_cntInit);
 102:Src/BLDC_controller.c **** extern int16_T Counter(int16_T rtu_inc, int16_T rtu_max, boolean_T rtu_rst,
 103:Src/BLDC_controller.c ****   DW_Counter *localDW);
 104:Src/BLDC_controller.c **** extern void Low_Pass_Filter_Reset(DW_Low_Pass_Filter *localDW);
 105:Src/BLDC_controller.c **** extern void Low_Pass_Filter(const int16_T rtu_u[2], uint16_T rtu_coef, int16_T
 106:Src/BLDC_controller.c ****   rty_y[2], DW_Low_Pass_Filter *localDW);
 107:Src/BLDC_controller.c **** extern void Counter_b_Init(DW_Counter_b *localDW, uint16_T rtp_z_cntInit);
 108:Src/BLDC_controller.c **** extern void Counter_n(uint16_T rtu_inc, uint16_T rtu_max, boolean_T rtu_rst,
 109:Src/BLDC_controller.c ****                       uint16_T *rty_cnt, DW_Counter_b *localDW);
 110:Src/BLDC_controller.c **** extern void either_edge(boolean_T rtu_u, boolean_T *rty_y, DW_either_edge
 111:Src/BLDC_controller.c ****   *localDW);
 112:Src/BLDC_controller.c **** extern void Debounce_Filter_Init(DW_Debounce_Filter *localDW);
 113:Src/BLDC_controller.c **** extern void Debounce_Filter(boolean_T rtu_u, uint16_T rtu_tAcv, uint16_T
 114:Src/BLDC_controller.c ****   rtu_tDeacv, boolean_T *rty_y, DW_Debounce_Filter *localDW);
 115:Src/BLDC_controller.c **** extern void I_backCalc_fixdt_Init(DW_I_backCalc_fixdt *localDW, int32_T
 116:Src/BLDC_controller.c ****   rtp_yInit);
 117:Src/BLDC_controller.c **** extern void I_backCalc_fixdt_Reset(DW_I_backCalc_fixdt *localDW, int32_T
 118:Src/BLDC_controller.c ****   rtp_yInit);
 119:Src/BLDC_controller.c **** extern void I_backCalc_fixdt(int16_T rtu_err, uint16_T rtu_I, uint16_T rtu_Kb,
 120:Src/BLDC_controller.c ****   int16_T rtu_satMax, int16_T rtu_satMin, int16_T *rty_out, DW_I_backCalc_fixdt *
 121:Src/BLDC_controller.c ****   localDW);
 122:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_Init(DW_PI_clamp_fixdt *localDW);
 123:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_Reset(DW_PI_clamp_fixdt *localDW);
 124:Src/BLDC_controller.c **** extern void PI_clamp_fixdt(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I,
 125:Src/BLDC_controller.c ****   int32_T rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 126:Src/BLDC_controller.c ****   rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt *localDW);
 127:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_d_Init(DW_PI_clamp_fixdt_m *localDW);
 128:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_b_Reset(DW_PI_clamp_fixdt_m *localDW);
 129:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_l(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I,
 130:Src/BLDC_controller.c ****   int16_T rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 131:Src/BLDC_controller.c ****   rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt_m *localDW);
 132:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_f_Init(DW_PI_clamp_fixdt_g *localDW);
 133:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_g_Reset(DW_PI_clamp_fixdt_g *localDW);
 134:Src/BLDC_controller.c **** extern void PI_clamp_fixdt_k(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I,
 135:Src/BLDC_controller.c ****   int16_T rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 136:Src/BLDC_controller.c ****   rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt_g *localDW);
 137:Src/BLDC_controller.c **** uint8_T plook_u8s16_evencka(int16_T u, int16_T bp0, uint16_T bpSpace, uint32_T
 138:Src/BLDC_controller.c ****   maxIndex)
 139:Src/BLDC_controller.c **** {
  28              		.loc 1 139 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 140:Src/BLDC_controller.c ****   uint8_T bpIndex;
ARM GAS  /tmp/cccGHnrd.s 			page 4


  33              		.loc 1 140 3 view .LVU1
 141:Src/BLDC_controller.c ****   uint16_T fbpIndex;
  34              		.loc 1 141 3 view .LVU2
 142:Src/BLDC_controller.c **** 
 143:Src/BLDC_controller.c ****   /* Prelookup - Index only
 144:Src/BLDC_controller.c ****      Index Search method: 'even'
 145:Src/BLDC_controller.c ****      Extrapolation method: 'Clip'
 146:Src/BLDC_controller.c ****      Use previous index: 'off'
 147:Src/BLDC_controller.c ****      Use last breakpoint for index at or above upper limit: 'on'
 148:Src/BLDC_controller.c ****      Remove protection against out-of-range input in generated code: 'off'
 149:Src/BLDC_controller.c ****    */
 150:Src/BLDC_controller.c ****   if (u <= bp0) {
  35              		.loc 1 150 3 view .LVU3
  36              		.loc 1 150 6 is_stmt 0 view .LVU4
  37 0000 8842     		cmp	r0, r1
  38 0002 09DD     		ble	.L4
 151:Src/BLDC_controller.c ****     bpIndex = 0U;
 152:Src/BLDC_controller.c ****   } else {
 153:Src/BLDC_controller.c ****     fbpIndex = (uint16_T)((uint32_T)(uint16_T)(u - bp0) / bpSpace);
  39              		.loc 1 153 5 is_stmt 1 view .LVU5
  40              		.loc 1 153 37 is_stmt 0 view .LVU6
  41 0004 401A     		subs	r0, r0, r1
  42              	.LVL1:
  43              		.loc 1 153 37 view .LVU7
  44 0006 80B2     		uxth	r0, r0
  45              		.loc 1 153 14 view .LVU8
  46 0008 B0FBF2F2 		udiv	r2, r0, r2
  47              	.LVL2:
 154:Src/BLDC_controller.c ****     if (fbpIndex < maxIndex) {
  48              		.loc 1 154 5 is_stmt 1 view .LVU9
  49              		.loc 1 154 8 is_stmt 0 view .LVU10
  50 000c 9A42     		cmp	r2, r3
  51 000e 01D2     		bcs	.L3
 155:Src/BLDC_controller.c ****       bpIndex = (uint8_T)fbpIndex;
  52              		.loc 1 155 7 is_stmt 1 view .LVU11
  53              		.loc 1 155 15 is_stmt 0 view .LVU12
  54 0010 D0B2     		uxtb	r0, r2
  55              	.LVL3:
  56              		.loc 1 155 15 view .LVU13
  57 0012 7047     		bx	lr
  58              	.LVL4:
  59              	.L3:
 156:Src/BLDC_controller.c ****     } else {
 157:Src/BLDC_controller.c ****       bpIndex = (uint8_T)maxIndex;
  60              		.loc 1 157 7 is_stmt 1 view .LVU14
  61              		.loc 1 157 15 is_stmt 0 view .LVU15
  62 0014 D8B2     		uxtb	r0, r3
  63              	.LVL5:
  64              		.loc 1 157 15 view .LVU16
  65 0016 7047     		bx	lr
  66              	.LVL6:
  67              	.L4:
 151:Src/BLDC_controller.c ****   } else {
  68              		.loc 1 151 13 view .LVU17
  69 0018 0020     		movs	r0, #0
  70              	.LVL7:
 158:Src/BLDC_controller.c ****     }
ARM GAS  /tmp/cccGHnrd.s 			page 5


 159:Src/BLDC_controller.c ****   }
 160:Src/BLDC_controller.c **** 
 161:Src/BLDC_controller.c ****   return bpIndex;
  71              		.loc 1 161 3 is_stmt 1 view .LVU18
 162:Src/BLDC_controller.c **** }
  72              		.loc 1 162 1 is_stmt 0 view .LVU19
  73 001a 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE0:
  77              		.section	.text.plook_u8u16_evencka,"ax",%progbits
  78              		.align	1
  79              		.global	plook_u8u16_evencka
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  84              	plook_u8u16_evencka:
  85              	.LVL8:
  86              	.LFB1:
 163:Src/BLDC_controller.c **** 
 164:Src/BLDC_controller.c **** uint8_T plook_u8u16_evencka(uint16_T u, uint16_T bp0, uint16_T bpSpace, uint32_T
 165:Src/BLDC_controller.c ****   maxIndex)
 166:Src/BLDC_controller.c **** {
  87              		.loc 1 166 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 167:Src/BLDC_controller.c ****   uint8_T bpIndex;
  92              		.loc 1 167 3 view .LVU21
 168:Src/BLDC_controller.c ****   uint16_T fbpIndex;
  93              		.loc 1 168 3 view .LVU22
 169:Src/BLDC_controller.c **** 
 170:Src/BLDC_controller.c ****   /* Prelookup - Index only
 171:Src/BLDC_controller.c ****      Index Search method: 'even'
 172:Src/BLDC_controller.c ****      Extrapolation method: 'Clip'
 173:Src/BLDC_controller.c ****      Use previous index: 'off'
 174:Src/BLDC_controller.c ****      Use last breakpoint for index at or above upper limit: 'on'
 175:Src/BLDC_controller.c ****      Remove protection against out-of-range input in generated code: 'off'
 176:Src/BLDC_controller.c ****    */
 177:Src/BLDC_controller.c ****   if (u <= bp0) {
  94              		.loc 1 177 3 view .LVU23
  95              		.loc 1 177 6 is_stmt 0 view .LVU24
  96 0000 8842     		cmp	r0, r1
  97 0002 09D9     		bls	.L8
 178:Src/BLDC_controller.c ****     bpIndex = 0U;
 179:Src/BLDC_controller.c ****   } else {
 180:Src/BLDC_controller.c ****     fbpIndex = (uint16_T)((uint32_T)(uint16_T)((uint32_T)u - bp0) / bpSpace);
  98              		.loc 1 180 5 is_stmt 1 view .LVU25
  99              		.loc 1 180 37 is_stmt 0 view .LVU26
 100 0004 401A     		subs	r0, r0, r1
 101              	.LVL9:
 102              		.loc 1 180 37 view .LVU27
 103 0006 80B2     		uxth	r0, r0
 104              		.loc 1 180 14 view .LVU28
 105 0008 B0FBF2F2 		udiv	r2, r0, r2
 106              	.LVL10:
 181:Src/BLDC_controller.c ****     if (fbpIndex < maxIndex) {
ARM GAS  /tmp/cccGHnrd.s 			page 6


 107              		.loc 1 181 5 is_stmt 1 view .LVU29
 108              		.loc 1 181 8 is_stmt 0 view .LVU30
 109 000c 9A42     		cmp	r2, r3
 110 000e 01D2     		bcs	.L7
 182:Src/BLDC_controller.c ****       bpIndex = (uint8_T)fbpIndex;
 111              		.loc 1 182 7 is_stmt 1 view .LVU31
 112              		.loc 1 182 15 is_stmt 0 view .LVU32
 113 0010 D0B2     		uxtb	r0, r2
 114              	.LVL11:
 115              		.loc 1 182 15 view .LVU33
 116 0012 7047     		bx	lr
 117              	.LVL12:
 118              	.L7:
 183:Src/BLDC_controller.c ****     } else {
 184:Src/BLDC_controller.c ****       bpIndex = (uint8_T)maxIndex;
 119              		.loc 1 184 7 is_stmt 1 view .LVU34
 120              		.loc 1 184 15 is_stmt 0 view .LVU35
 121 0014 D8B2     		uxtb	r0, r3
 122              	.LVL13:
 123              		.loc 1 184 15 view .LVU36
 124 0016 7047     		bx	lr
 125              	.LVL14:
 126              	.L8:
 178:Src/BLDC_controller.c ****   } else {
 127              		.loc 1 178 13 view .LVU37
 128 0018 0020     		movs	r0, #0
 129              	.LVL15:
 185:Src/BLDC_controller.c ****     }
 186:Src/BLDC_controller.c ****   }
 187:Src/BLDC_controller.c **** 
 188:Src/BLDC_controller.c ****   return bpIndex;
 130              		.loc 1 188 3 is_stmt 1 view .LVU38
 189:Src/BLDC_controller.c **** }
 131              		.loc 1 189 1 is_stmt 0 view .LVU39
 132 001a 7047     		bx	lr
 133              		.cfi_endproc
 134              	.LFE1:
 136              		.section	.text.div_nde_s32_floor,"ax",%progbits
 137              		.align	1
 138              		.global	div_nde_s32_floor
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	div_nde_s32_floor:
 144              	.LVL16:
 145              	.LFB2:
 190:Src/BLDC_controller.c **** 
 191:Src/BLDC_controller.c **** int32_T div_nde_s32_floor(int32_T numerator, int32_T denominator)
 192:Src/BLDC_controller.c **** {
 146              		.loc 1 192 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 193:Src/BLDC_controller.c ****   return (((numerator < 0) != (denominator < 0)) && (numerator % denominator !=
 151              		.loc 1 193 3 view .LVU41
 194:Src/BLDC_controller.c ****            0) ? -1 : 0) + numerator / denominator;
ARM GAS  /tmp/cccGHnrd.s 			page 7


 152              		.loc 1 194 20 is_stmt 0 view .LVU42
 153 0000 90EA010F 		teq	r0, r1
 154 0004 04D4     		bmi	.L13
 155              		.loc 1 194 20 discriminator 1 view .LVU43
 156 0006 0023     		movs	r3, #0
 157              	.L10:
 158              		.loc 1 194 37 discriminator 3 view .LVU44
 159 0008 90FBF1F0 		sdiv	r0, r0, r1
 160              	.LVL17:
 195:Src/BLDC_controller.c **** }
 161              		.loc 1 195 1 view .LVU45
 162 000c 1844     		add	r0, r0, r3
 163 000e 7047     		bx	lr
 164              	.LVL18:
 165              	.L13:
 193:Src/BLDC_controller.c ****   return (((numerator < 0) != (denominator < 0)) && (numerator % denominator !=
 166              		.loc 1 193 64 view .LVU46
 167 0010 90FBF1F3 		sdiv	r3, r0, r1
 168 0014 01FB1303 		mls	r3, r1, r3, r0
 193:Src/BLDC_controller.c ****   return (((numerator < 0) != (denominator < 0)) && (numerator % denominator !=
 169              		.loc 1 193 50 view .LVU47
 170 0018 002B     		cmp	r3, #0
 171 001a F5D0     		beq	.L10
 194:Src/BLDC_controller.c ****            0) ? -1 : 0) + numerator / denominator;
 172              		.loc 1 194 20 view .LVU48
 173 001c 4FF0FF33 		mov	r3, #-1
 174 0020 F2E7     		b	.L10
 175              		.cfi_endproc
 176              	.LFE2:
 178              		.section	.text.Counter_Init,"ax",%progbits
 179              		.align	1
 180              		.global	Counter_Init
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 185              	Counter_Init:
 186              	.LVL19:
 187              	.LFB3:
 196:Src/BLDC_controller.c **** 
 197:Src/BLDC_controller.c **** /* System initialize for atomic system: '<S13>/Counter' */
 198:Src/BLDC_controller.c **** void Counter_Init(DW_Counter *localDW, int16_T rtp_z_cntInit)
 199:Src/BLDC_controller.c **** {
 188              		.loc 1 199 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 200:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S18>/UnitDelay' */
 201:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = rtp_z_cntInit;
 193              		.loc 1 201 3 view .LVU50
 194              		.loc 1 201 29 is_stmt 0 view .LVU51
 195 0000 0180     		strh	r1, [r0]	@ movhi
 202:Src/BLDC_controller.c **** }
 196              		.loc 1 202 1 view .LVU52
 197 0002 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE3:
ARM GAS  /tmp/cccGHnrd.s 			page 8


 201              		.section	.text.Counter,"ax",%progbits
 202              		.align	1
 203              		.global	Counter
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 208              	Counter:
 209              	.LVL20:
 210              	.LFB4:
 203:Src/BLDC_controller.c **** 
 204:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S13>/Counter' */
 205:Src/BLDC_controller.c **** int16_T Counter(int16_T rtu_inc, int16_T rtu_max, boolean_T rtu_rst, DW_Counter *
 206:Src/BLDC_controller.c ****                 localDW)
 207:Src/BLDC_controller.c **** {
 211              		.loc 1 207 1 is_stmt 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 208:Src/BLDC_controller.c ****   int16_T rtu_rst_0;
 216              		.loc 1 208 3 view .LVU54
 209:Src/BLDC_controller.c ****   int16_T rty_cnt_0;
 217              		.loc 1 209 3 view .LVU55
 210:Src/BLDC_controller.c **** 
 211:Src/BLDC_controller.c ****   /* Switch: '<S18>/Switch1' incorporates:
 212:Src/BLDC_controller.c ****    *  Constant: '<S18>/Constant23'
 213:Src/BLDC_controller.c ****    *  UnitDelay: '<S18>/UnitDelay'
 214:Src/BLDC_controller.c ****    */
 215:Src/BLDC_controller.c ****   if (rtu_rst) {
 218              		.loc 1 215 3 view .LVU56
 219              		.loc 1 215 6 is_stmt 0 view .LVU57
 220 0000 3AB9     		cbnz	r2, .L19
 216:Src/BLDC_controller.c ****     rtu_rst_0 = 0;
 217:Src/BLDC_controller.c ****   } else {
 218:Src/BLDC_controller.c ****     rtu_rst_0 = localDW->UnitDelay_DSTATE;
 221              		.loc 1 218 5 is_stmt 1 view .LVU58
 222              		.loc 1 218 15 is_stmt 0 view .LVU59
 223 0002 B3F90020 		ldrsh	r2, [r3]
 224              	.LVL21:
 225              	.L16:
 219:Src/BLDC_controller.c ****   }
 220:Src/BLDC_controller.c **** 
 221:Src/BLDC_controller.c ****   /* End of Switch: '<S18>/Switch1' */
 222:Src/BLDC_controller.c **** 
 223:Src/BLDC_controller.c ****   /* Sum: '<S16>/Sum1' */
 224:Src/BLDC_controller.c ****   rty_cnt_0 = (int16_T)(rtu_inc + rtu_rst_0);
 226              		.loc 1 224 3 is_stmt 1 view .LVU60
 227              		.loc 1 224 33 is_stmt 0 view .LVU61
 228 0006 1044     		add	r0, r0, r2
 229              	.LVL22:
 230              		.loc 1 224 13 view .LVU62
 231 0008 00B2     		sxth	r0, r0
 232              	.LVL23:
 225:Src/BLDC_controller.c **** 
 226:Src/BLDC_controller.c ****   /* MinMax: '<S16>/MinMax' */
 227:Src/BLDC_controller.c ****   if (rty_cnt_0 < rtu_max) {
 233              		.loc 1 227 3 is_stmt 1 view .LVU63
ARM GAS  /tmp/cccGHnrd.s 			page 9


 234              		.loc 1 227 6 is_stmt 0 view .LVU64
 235 000a 8842     		cmp	r0, r1
 236 000c 03DA     		bge	.L17
 228:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S18>/UnitDelay' */
 229:Src/BLDC_controller.c ****     localDW->UnitDelay_DSTATE = rty_cnt_0;
 237              		.loc 1 229 5 is_stmt 1 view .LVU65
 238              		.loc 1 229 31 is_stmt 0 view .LVU66
 239 000e 1880     		strh	r0, [r3]	@ movhi
 240 0010 7047     		bx	lr
 241              	.LVL24:
 242              	.L19:
 216:Src/BLDC_controller.c ****   } else {
 243              		.loc 1 216 15 view .LVU67
 244 0012 0022     		movs	r2, #0
 245              	.LVL25:
 216:Src/BLDC_controller.c ****   } else {
 246              		.loc 1 216 15 view .LVU68
 247 0014 F7E7     		b	.L16
 248              	.LVL26:
 249              	.L17:
 230:Src/BLDC_controller.c ****   } else {
 231:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S18>/UnitDelay' */
 232:Src/BLDC_controller.c ****     localDW->UnitDelay_DSTATE = rtu_max;
 250              		.loc 1 232 5 is_stmt 1 view .LVU69
 251              		.loc 1 232 31 is_stmt 0 view .LVU70
 252 0016 1980     		strh	r1, [r3]	@ movhi
 233:Src/BLDC_controller.c ****   }
 234:Src/BLDC_controller.c **** 
 235:Src/BLDC_controller.c ****   /* End of MinMax: '<S16>/MinMax' */
 236:Src/BLDC_controller.c ****   return rty_cnt_0;
 253              		.loc 1 236 3 is_stmt 1 view .LVU71
 237:Src/BLDC_controller.c **** }
 254              		.loc 1 237 1 is_stmt 0 view .LVU72
 255 0018 7047     		bx	lr
 256              		.cfi_endproc
 257              	.LFE4:
 259              		.section	.text.Low_Pass_Filter_Reset,"ax",%progbits
 260              		.align	1
 261              		.global	Low_Pass_Filter_Reset
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 266              	Low_Pass_Filter_Reset:
 267              	.LVL27:
 268              	.LFB5:
 238:Src/BLDC_controller.c **** 
 239:Src/BLDC_controller.c **** /* System reset for atomic system: '<S50>/Low_Pass_Filter' */
 240:Src/BLDC_controller.c **** void Low_Pass_Filter_Reset(DW_Low_Pass_Filter *localDW)
 241:Src/BLDC_controller.c **** {
 269              		.loc 1 241 1 is_stmt 1 view -0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 242:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S56>/UnitDelay1' */
 243:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE[0] = 0;
 274              		.loc 1 243 3 view .LVU74
ARM GAS  /tmp/cccGHnrd.s 			page 10


 275              		.loc 1 243 33 is_stmt 0 view .LVU75
 276 0000 0023     		movs	r3, #0
 277 0002 0360     		str	r3, [r0]
 244:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE[1] = 0;
 278              		.loc 1 244 3 is_stmt 1 view .LVU76
 279              		.loc 1 244 33 is_stmt 0 view .LVU77
 280 0004 4360     		str	r3, [r0, #4]
 245:Src/BLDC_controller.c **** }
 281              		.loc 1 245 1 view .LVU78
 282 0006 7047     		bx	lr
 283              		.cfi_endproc
 284              	.LFE5:
 286              		.section	.text.Low_Pass_Filter,"ax",%progbits
 287              		.align	1
 288              		.global	Low_Pass_Filter
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 293              	Low_Pass_Filter:
 294              	.LVL28:
 295              	.LFB6:
 246:Src/BLDC_controller.c **** 
 247:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S50>/Low_Pass_Filter' */
 248:Src/BLDC_controller.c **** void Low_Pass_Filter(const int16_T rtu_u[2], uint16_T rtu_coef, int16_T rty_y[2],
 249:Src/BLDC_controller.c ****                      DW_Low_Pass_Filter *localDW)
 250:Src/BLDC_controller.c **** {
 296              		.loc 1 250 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301              		.loc 1 250 1 is_stmt 0 view .LVU80
 302 0000 30B4     		push	{r4, r5}
 303              	.LCFI0:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 5, -4
 251:Src/BLDC_controller.c ****   int32_T rtb_Sum3_g;
 307              		.loc 1 251 3 is_stmt 1 view .LVU81
 252:Src/BLDC_controller.c **** 
 253:Src/BLDC_controller.c ****   /* Sum: '<S56>/Sum2' incorporates:
 254:Src/BLDC_controller.c ****    *  UnitDelay: '<S56>/UnitDelay1'
 255:Src/BLDC_controller.c ****    */
 256:Src/BLDC_controller.c ****   rtb_Sum3_g = rtu_u[0] - (localDW->UnitDelay1_DSTATE[0] >> 16);
 308              		.loc 1 256 3 view .LVU82
 309              		.loc 1 256 21 is_stmt 0 view .LVU83
 310 0002 B0F90040 		ldrsh	r4, [r0]
 311              		.loc 1 256 54 view .LVU84
 312 0006 1D68     		ldr	r5, [r3]
 313              		.loc 1 256 14 view .LVU85
 314 0008 A4EB2544 		sub	r4, r4, r5, asr #16
 315              	.LVL29:
 257:Src/BLDC_controller.c ****   if (rtb_Sum3_g > 32767) {
 316              		.loc 1 257 3 is_stmt 1 view .LVU86
 317              		.loc 1 257 6 is_stmt 0 view .LVU87
 318 000c B4F5004F 		cmp	r4, #32768
 319 0010 04DA     		bge	.L24
ARM GAS  /tmp/cccGHnrd.s 			page 11


 258:Src/BLDC_controller.c ****     rtb_Sum3_g = 32767;
 259:Src/BLDC_controller.c ****   } else {
 260:Src/BLDC_controller.c ****     if (rtb_Sum3_g < -32768) {
 320              		.loc 1 260 5 is_stmt 1 view .LVU88
 321              		.loc 1 260 8 is_stmt 0 view .LVU89
 322 0012 14F5004F 		cmn	r4, #32768
 323 0016 03DA     		bge	.L22
 261:Src/BLDC_controller.c ****       rtb_Sum3_g = -32768;
 324              		.loc 1 261 18 view .LVU90
 325 0018 0F4C     		ldr	r4, .L29
 326              	.LVL30:
 327              		.loc 1 261 18 view .LVU91
 328 001a 01E0     		b	.L22
 329              	.LVL31:
 330              	.L24:
 258:Src/BLDC_controller.c ****     rtb_Sum3_g = 32767;
 331              		.loc 1 258 16 view .LVU92
 332 001c 47F6FF74 		movw	r4, #32767
 333              	.LVL32:
 334              	.L22:
 262:Src/BLDC_controller.c ****     }
 263:Src/BLDC_controller.c ****   }
 264:Src/BLDC_controller.c **** 
 265:Src/BLDC_controller.c ****   /* Sum: '<S56>/Sum3' incorporates:
 266:Src/BLDC_controller.c ****    *  Product: '<S56>/Divide3'
 267:Src/BLDC_controller.c ****    *  Sum: '<S56>/Sum2'
 268:Src/BLDC_controller.c ****    *  UnitDelay: '<S56>/UnitDelay1'
 269:Src/BLDC_controller.c ****    */
 270:Src/BLDC_controller.c ****   rtb_Sum3_g = rtu_coef * rtb_Sum3_g + localDW->UnitDelay1_DSTATE[0];
 335              		.loc 1 270 3 is_stmt 1 view .LVU93
 336              		.loc 1 270 14 is_stmt 0 view .LVU94
 337 0020 04FB0154 		mla	r4, r4, r1, r5
 338              	.LVL33:
 271:Src/BLDC_controller.c **** 
 272:Src/BLDC_controller.c ****   /* DataTypeConversion: '<S56>/Data Type Conversion' */
 273:Src/BLDC_controller.c ****   rty_y[0] = (int16_T)(rtb_Sum3_g >> 16);
 339              		.loc 1 273 3 is_stmt 1 view .LVU95
 340              		.loc 1 273 14 is_stmt 0 view .LVU96
 341 0024 2514     		asrs	r5, r4, #16
 342              		.loc 1 273 12 view .LVU97
 343 0026 1580     		strh	r5, [r2]	@ movhi
 274:Src/BLDC_controller.c **** 
 275:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S56>/UnitDelay1' */
 276:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE[0] = rtb_Sum3_g;
 344              		.loc 1 276 3 is_stmt 1 view .LVU98
 345              		.loc 1 276 33 is_stmt 0 view .LVU99
 346 0028 1C60     		str	r4, [r3]
 277:Src/BLDC_controller.c **** 
 278:Src/BLDC_controller.c ****   /* Sum: '<S56>/Sum2' incorporates:
 279:Src/BLDC_controller.c ****    *  UnitDelay: '<S56>/UnitDelay1'
 280:Src/BLDC_controller.c ****    */
 281:Src/BLDC_controller.c ****   rtb_Sum3_g = rtu_u[1] - (localDW->UnitDelay1_DSTATE[1] >> 16);
 347              		.loc 1 281 3 is_stmt 1 view .LVU100
 348              		.loc 1 281 21 is_stmt 0 view .LVU101
 349 002a B0F90200 		ldrsh	r0, [r0, #2]
 350              	.LVL34:
 351              		.loc 1 281 54 view .LVU102
ARM GAS  /tmp/cccGHnrd.s 			page 12


 352 002e 5C68     		ldr	r4, [r3, #4]
 353              	.LVL35:
 354              		.loc 1 281 14 view .LVU103
 355 0030 A0EB2440 		sub	r0, r0, r4, asr #16
 356              	.LVL36:
 282:Src/BLDC_controller.c ****   if (rtb_Sum3_g > 32767) {
 357              		.loc 1 282 3 is_stmt 1 view .LVU104
 358              		.loc 1 282 6 is_stmt 0 view .LVU105
 359 0034 B0F5004F 		cmp	r0, #32768
 360 0038 04DA     		bge	.L26
 283:Src/BLDC_controller.c ****     rtb_Sum3_g = 32767;
 284:Src/BLDC_controller.c ****   } else {
 285:Src/BLDC_controller.c ****     if (rtb_Sum3_g < -32768) {
 361              		.loc 1 285 5 is_stmt 1 view .LVU106
 362              		.loc 1 285 8 is_stmt 0 view .LVU107
 363 003a 10F5004F 		cmn	r0, #32768
 364 003e 03DA     		bge	.L23
 286:Src/BLDC_controller.c ****       rtb_Sum3_g = -32768;
 365              		.loc 1 286 18 view .LVU108
 366 0040 0548     		ldr	r0, .L29
 367              	.LVL37:
 368              		.loc 1 286 18 view .LVU109
 369 0042 01E0     		b	.L23
 370              	.LVL38:
 371              	.L26:
 283:Src/BLDC_controller.c ****     rtb_Sum3_g = 32767;
 372              		.loc 1 283 16 view .LVU110
 373 0044 47F6FF70 		movw	r0, #32767
 374              	.LVL39:
 375              	.L23:
 287:Src/BLDC_controller.c ****     }
 288:Src/BLDC_controller.c ****   }
 289:Src/BLDC_controller.c **** 
 290:Src/BLDC_controller.c ****   /* Sum: '<S56>/Sum3' incorporates:
 291:Src/BLDC_controller.c ****    *  Product: '<S56>/Divide3'
 292:Src/BLDC_controller.c ****    *  Sum: '<S56>/Sum2'
 293:Src/BLDC_controller.c ****    *  UnitDelay: '<S56>/UnitDelay1'
 294:Src/BLDC_controller.c ****    */
 295:Src/BLDC_controller.c ****   rtb_Sum3_g = rtu_coef * rtb_Sum3_g + localDW->UnitDelay1_DSTATE[1];
 376              		.loc 1 295 3 is_stmt 1 view .LVU111
 377              		.loc 1 295 14 is_stmt 0 view .LVU112
 378 0048 00FB0141 		mla	r1, r0, r1, r4
 379              	.LVL40:
 296:Src/BLDC_controller.c **** 
 297:Src/BLDC_controller.c ****   /* DataTypeConversion: '<S56>/Data Type Conversion' */
 298:Src/BLDC_controller.c ****   rty_y[1] = (int16_T)(rtb_Sum3_g >> 16);
 380              		.loc 1 298 3 is_stmt 1 view .LVU113
 381              		.loc 1 298 14 is_stmt 0 view .LVU114
 382 004c 0814     		asrs	r0, r1, #16
 383              		.loc 1 298 12 view .LVU115
 384 004e 5080     		strh	r0, [r2, #2]	@ movhi
 299:Src/BLDC_controller.c **** 
 300:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S56>/UnitDelay1' */
 301:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE[1] = rtb_Sum3_g;
 385              		.loc 1 301 3 is_stmt 1 view .LVU116
 386              		.loc 1 301 33 is_stmt 0 view .LVU117
 387 0050 5960     		str	r1, [r3, #4]
ARM GAS  /tmp/cccGHnrd.s 			page 13


 302:Src/BLDC_controller.c **** }
 388              		.loc 1 302 1 view .LVU118
 389 0052 30BC     		pop	{r4, r5}
 390              	.LCFI1:
 391              		.cfi_restore 5
 392              		.cfi_restore 4
 393              		.cfi_def_cfa_offset 0
 394 0054 7047     		bx	lr
 395              	.L30:
 396 0056 00BF     		.align	2
 397              	.L29:
 398 0058 0080FFFF 		.word	-32768
 399              		.cfi_endproc
 400              	.LFE6:
 402              		.section	.text.Counter_b_Init,"ax",%progbits
 403              		.align	1
 404              		.global	Counter_b_Init
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	Counter_b_Init:
 410              	.LVL41:
 411              	.LFB7:
 303:Src/BLDC_controller.c **** 
 304:Src/BLDC_controller.c **** /*
 305:Src/BLDC_controller.c ****  * System initialize for atomic system:
 306:Src/BLDC_controller.c ****  *    '<S25>/Counter'
 307:Src/BLDC_controller.c ****  *    '<S24>/Counter'
 308:Src/BLDC_controller.c ****  */
 309:Src/BLDC_controller.c **** void Counter_b_Init(DW_Counter_b *localDW, uint16_T rtp_z_cntInit)
 310:Src/BLDC_controller.c **** {
 412              		.loc 1 310 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 311:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S30>/UnitDelay' */
 312:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = rtp_z_cntInit;
 417              		.loc 1 312 3 view .LVU120
 418              		.loc 1 312 29 is_stmt 0 view .LVU121
 419 0000 0180     		strh	r1, [r0]	@ movhi
 313:Src/BLDC_controller.c **** }
 420              		.loc 1 313 1 view .LVU122
 421 0002 7047     		bx	lr
 422              		.cfi_endproc
 423              	.LFE7:
 425              		.section	.text.Counter_n,"ax",%progbits
 426              		.align	1
 427              		.global	Counter_n
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 432              	Counter_n:
 433              	.LVL42:
 434              	.LFB8:
 314:Src/BLDC_controller.c **** 
 315:Src/BLDC_controller.c **** /*
ARM GAS  /tmp/cccGHnrd.s 			page 14


 316:Src/BLDC_controller.c ****  * Output and update for atomic system:
 317:Src/BLDC_controller.c ****  *    '<S25>/Counter'
 318:Src/BLDC_controller.c ****  *    '<S24>/Counter'
 319:Src/BLDC_controller.c ****  */
 320:Src/BLDC_controller.c **** void Counter_n(uint16_T rtu_inc, uint16_T rtu_max, boolean_T rtu_rst, uint16_T
 321:Src/BLDC_controller.c ****                *rty_cnt, DW_Counter_b *localDW)
 322:Src/BLDC_controller.c **** {
 435              		.loc 1 322 1 is_stmt 1 view -0
 436              		.cfi_startproc
 437              		@ args = 4, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 440              		.loc 1 322 1 is_stmt 0 view .LVU124
 441 0000 10B4     		push	{r4}
 442              	.LCFI2:
 443              		.cfi_def_cfa_offset 4
 444              		.cfi_offset 4, -4
 445 0002 019C     		ldr	r4, [sp, #4]
 323:Src/BLDC_controller.c ****   uint16_T rtu_rst_0;
 446              		.loc 1 323 3 is_stmt 1 view .LVU125
 324:Src/BLDC_controller.c **** 
 325:Src/BLDC_controller.c ****   /* Switch: '<S30>/Switch1' incorporates:
 326:Src/BLDC_controller.c ****    *  Constant: '<S30>/Constant23'
 327:Src/BLDC_controller.c ****    *  UnitDelay: '<S30>/UnitDelay'
 328:Src/BLDC_controller.c ****    */
 329:Src/BLDC_controller.c ****   if (rtu_rst) {
 447              		.loc 1 329 3 view .LVU126
 448              		.loc 1 329 6 is_stmt 0 view .LVU127
 449 0004 42B9     		cbnz	r2, .L36
 330:Src/BLDC_controller.c ****     rtu_rst_0 = 0U;
 331:Src/BLDC_controller.c ****   } else {
 332:Src/BLDC_controller.c ****     rtu_rst_0 = localDW->UnitDelay_DSTATE;
 450              		.loc 1 332 5 is_stmt 1 view .LVU128
 451              		.loc 1 332 15 is_stmt 0 view .LVU129
 452 0006 2288     		ldrh	r2, [r4]
 453              	.LVL43:
 454              	.L33:
 333:Src/BLDC_controller.c ****   }
 334:Src/BLDC_controller.c **** 
 335:Src/BLDC_controller.c ****   /* End of Switch: '<S30>/Switch1' */
 336:Src/BLDC_controller.c **** 
 337:Src/BLDC_controller.c ****   /* Sum: '<S29>/Sum1' */
 338:Src/BLDC_controller.c ****   *rty_cnt = (uint16_T)((uint32_T)rtu_inc + rtu_rst_0);
 455              		.loc 1 338 3 is_stmt 1 view .LVU130
 456              		.loc 1 338 14 is_stmt 0 view .LVU131
 457 0008 1044     		add	r0, r0, r2
 458              	.LVL44:
 459              		.loc 1 338 14 view .LVU132
 460 000a 80B2     		uxth	r0, r0
 461              		.loc 1 338 12 view .LVU133
 462 000c 1880     		strh	r0, [r3]	@ movhi
 339:Src/BLDC_controller.c **** 
 340:Src/BLDC_controller.c ****   /* MinMax: '<S29>/MinMax' */
 341:Src/BLDC_controller.c ****   if (*rty_cnt < rtu_max) {
 463              		.loc 1 341 3 is_stmt 1 view .LVU134
 464              		.loc 1 341 6 is_stmt 0 view .LVU135
 465 000e 8842     		cmp	r0, r1
ARM GAS  /tmp/cccGHnrd.s 			page 15


 466 0010 04D2     		bcs	.L34
 342:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S30>/UnitDelay' */
 343:Src/BLDC_controller.c ****     localDW->UnitDelay_DSTATE = *rty_cnt;
 467              		.loc 1 343 5 is_stmt 1 view .LVU136
 468              		.loc 1 343 31 is_stmt 0 view .LVU137
 469 0012 2080     		strh	r0, [r4]	@ movhi
 470              	.L32:
 344:Src/BLDC_controller.c ****   } else {
 345:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S30>/UnitDelay' */
 346:Src/BLDC_controller.c ****     localDW->UnitDelay_DSTATE = rtu_max;
 347:Src/BLDC_controller.c ****   }
 348:Src/BLDC_controller.c **** 
 349:Src/BLDC_controller.c ****   /* End of MinMax: '<S29>/MinMax' */
 350:Src/BLDC_controller.c **** }
 471              		.loc 1 350 1 view .LVU138
 472 0014 10BC     		pop	{r4}
 473              	.LCFI3:
 474              		.cfi_remember_state
 475              		.cfi_restore 4
 476              		.cfi_def_cfa_offset 0
 477              	.LVL45:
 478              		.loc 1 350 1 view .LVU139
 479 0016 7047     		bx	lr
 480              	.LVL46:
 481              	.L36:
 482              	.LCFI4:
 483              		.cfi_restore_state
 330:Src/BLDC_controller.c ****   } else {
 484              		.loc 1 330 15 view .LVU140
 485 0018 0022     		movs	r2, #0
 486              	.LVL47:
 330:Src/BLDC_controller.c ****   } else {
 487              		.loc 1 330 15 view .LVU141
 488 001a F5E7     		b	.L33
 489              	.LVL48:
 490              	.L34:
 346:Src/BLDC_controller.c ****   }
 491              		.loc 1 346 5 is_stmt 1 view .LVU142
 346:Src/BLDC_controller.c ****   }
 492              		.loc 1 346 31 is_stmt 0 view .LVU143
 493 001c 2180     		strh	r1, [r4]	@ movhi
 494              		.loc 1 350 1 view .LVU144
 495 001e F9E7     		b	.L32
 496              		.cfi_endproc
 497              	.LFE8:
 499              		.section	.text.either_edge,"ax",%progbits
 500              		.align	1
 501              		.global	either_edge
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 506              	either_edge:
 507              	.LVL49:
 508              	.LFB9:
 351:Src/BLDC_controller.c **** 
 352:Src/BLDC_controller.c **** /*
 353:Src/BLDC_controller.c ****  * Output and update for atomic system:
ARM GAS  /tmp/cccGHnrd.s 			page 16


 354:Src/BLDC_controller.c ****  *    '<S21>/either_edge'
 355:Src/BLDC_controller.c ****  *    '<S20>/either_edge'
 356:Src/BLDC_controller.c ****  */
 357:Src/BLDC_controller.c **** void either_edge(boolean_T rtu_u, boolean_T *rty_y, DW_either_edge *localDW)
 358:Src/BLDC_controller.c **** {
 509              		.loc 1 358 1 is_stmt 1 view -0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 359:Src/BLDC_controller.c ****   /* RelationalOperator: '<S26>/Relational Operator' incorporates:
 360:Src/BLDC_controller.c ****    *  UnitDelay: '<S26>/UnitDelay'
 361:Src/BLDC_controller.c ****    */
 362:Src/BLDC_controller.c ****   *rty_y = (rtu_u != localDW->UnitDelay_DSTATE);
 514              		.loc 1 362 3 view .LVU146
 515              		.loc 1 362 29 is_stmt 0 view .LVU147
 516 0000 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 517              		.loc 1 362 19 view .LVU148
 518 0002 1B1A     		subs	r3, r3, r0
 519 0004 18BF     		it	ne
 520 0006 0123     		movne	r3, #1
 521              		.loc 1 362 10 view .LVU149
 522 0008 0B70     		strb	r3, [r1]
 363:Src/BLDC_controller.c **** 
 364:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S26>/UnitDelay' */
 365:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = rtu_u;
 523              		.loc 1 365 3 is_stmt 1 view .LVU150
 524              		.loc 1 365 29 is_stmt 0 view .LVU151
 525 000a 1070     		strb	r0, [r2]
 366:Src/BLDC_controller.c **** }
 526              		.loc 1 366 1 view .LVU152
 527 000c 7047     		bx	lr
 528              		.cfi_endproc
 529              	.LFE9:
 531              		.section	.text.Debounce_Filter_Init,"ax",%progbits
 532              		.align	1
 533              		.global	Debounce_Filter_Init
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 538              	Debounce_Filter_Init:
 539              	.LVL50:
 540              	.LFB10:
 367:Src/BLDC_controller.c **** 
 368:Src/BLDC_controller.c **** /* System initialize for atomic system: '<S20>/Debounce_Filter' */
 369:Src/BLDC_controller.c **** void Debounce_Filter_Init(DW_Debounce_Filter *localDW)
 370:Src/BLDC_controller.c **** {
 541              		.loc 1 370 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		.loc 1 370 1 is_stmt 0 view .LVU154
 546 0000 10B5     		push	{r4, lr}
 547              	.LCFI5:
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 4, -8
 550              		.cfi_offset 14, -4
ARM GAS  /tmp/cccGHnrd.s 			page 17


 551 0002 0446     		mov	r4, r0
 371:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S21>/Qualification' */
 372:Src/BLDC_controller.c **** 
 373:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S25>/Counter' */
 374:Src/BLDC_controller.c ****   Counter_b_Init(&localDW->Counter_n1, 0U);
 552              		.loc 1 374 3 is_stmt 1 view .LVU155
 553 0004 0021     		movs	r1, #0
 554 0006 0430     		adds	r0, r0, #4
 555              	.LVL51:
 556              		.loc 1 374 3 is_stmt 0 view .LVU156
 557 0008 FFF7FEFF 		bl	Counter_b_Init
 558              	.LVL52:
 375:Src/BLDC_controller.c **** 
 376:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S25>/Counter' */
 377:Src/BLDC_controller.c **** 
 378:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S21>/Qualification' */
 379:Src/BLDC_controller.c **** 
 380:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S21>/Dequalification' */
 381:Src/BLDC_controller.c **** 
 382:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S24>/Counter' */
 383:Src/BLDC_controller.c ****   Counter_b_Init(&localDW->Counter_e, 0U);
 559              		.loc 1 383 3 is_stmt 1 view .LVU157
 560 000c 0021     		movs	r1, #0
 561 000e A01C     		adds	r0, r4, #2
 562 0010 FFF7FEFF 		bl	Counter_b_Init
 563              	.LVL53:
 384:Src/BLDC_controller.c **** 
 385:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S24>/Counter' */
 386:Src/BLDC_controller.c **** 
 387:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S21>/Dequalification' */
 388:Src/BLDC_controller.c **** }
 564              		.loc 1 388 1 is_stmt 0 view .LVU158
 565 0014 10BD     		pop	{r4, pc}
 566              		.loc 1 388 1 view .LVU159
 567              		.cfi_endproc
 568              	.LFE10:
 570              		.section	.text.Debounce_Filter,"ax",%progbits
 571              		.align	1
 572              		.global	Debounce_Filter
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 577              	Debounce_Filter:
 578              	.LVL54:
 579              	.LFB11:
 389:Src/BLDC_controller.c **** 
 390:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S20>/Debounce_Filter' */
 391:Src/BLDC_controller.c **** void Debounce_Filter(boolean_T rtu_u, uint16_T rtu_tAcv, uint16_T rtu_tDeacv,
 392:Src/BLDC_controller.c ****                      boolean_T *rty_y, DW_Debounce_Filter *localDW)
 393:Src/BLDC_controller.c **** {
 580              		.loc 1 393 1 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 4, pretend = 0, frame = 8
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		.loc 1 393 1 is_stmt 0 view .LVU161
 585 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 586              	.LCFI6:
ARM GAS  /tmp/cccGHnrd.s 			page 18


 587              		.cfi_def_cfa_offset 24
 588              		.cfi_offset 4, -24
 589              		.cfi_offset 5, -20
 590              		.cfi_offset 6, -16
 591              		.cfi_offset 7, -12
 592              		.cfi_offset 8, -8
 593              		.cfi_offset 14, -4
 594 0004 84B0     		sub	sp, sp, #16
 595              	.LCFI7:
 596              		.cfi_def_cfa_offset 40
 597 0006 0646     		mov	r6, r0
 598 0008 8846     		mov	r8, r1
 599 000a 1746     		mov	r7, r2
 600 000c 1D46     		mov	r5, r3
 601 000e 0A9C     		ldr	r4, [sp, #40]
 394:Src/BLDC_controller.c ****   uint16_T rtb_Sum1_n;
 602              		.loc 1 394 3 is_stmt 1 view .LVU162
 395:Src/BLDC_controller.c ****   boolean_T rtb_RelationalOperator_g;
 603              		.loc 1 395 3 view .LVU163
 396:Src/BLDC_controller.c **** 
 397:Src/BLDC_controller.c ****   /* Outputs for Atomic SubSystem: '<S21>/either_edge' */
 398:Src/BLDC_controller.c ****   either_edge(rtu_u, &rtb_RelationalOperator_g, &localDW->either_edge_p);
 604              		.loc 1 398 3 view .LVU164
 605 0010 2246     		mov	r2, r4
 606              	.LVL55:
 607              		.loc 1 398 3 is_stmt 0 view .LVU165
 608 0012 0DF10D01 		add	r1, sp, #13
 609              	.LVL56:
 610              		.loc 1 398 3 view .LVU166
 611 0016 FFF7FEFF 		bl	either_edge
 612              	.LVL57:
 399:Src/BLDC_controller.c **** 
 400:Src/BLDC_controller.c ****   /* End of Outputs for SubSystem: '<S21>/either_edge' */
 401:Src/BLDC_controller.c **** 
 402:Src/BLDC_controller.c ****   /* If: '<S21>/If2' incorporates:
 403:Src/BLDC_controller.c ****    *  Constant: '<S24>/Constant6'
 404:Src/BLDC_controller.c ****    *  Constant: '<S25>/Constant6'
 405:Src/BLDC_controller.c ****    *  Inport: '<S23>/yPrev'
 406:Src/BLDC_controller.c ****    *  Logic: '<S21>/Logical Operator1'
 407:Src/BLDC_controller.c ****    *  Logic: '<S21>/Logical Operator2'
 408:Src/BLDC_controller.c ****    *  Logic: '<S21>/Logical Operator3'
 409:Src/BLDC_controller.c ****    *  Logic: '<S21>/Logical Operator4'
 410:Src/BLDC_controller.c ****    *  UnitDelay: '<S21>/UnitDelay'
 411:Src/BLDC_controller.c ****    */
 412:Src/BLDC_controller.c ****   if (rtu_u && (!localDW->UnitDelay_DSTATE)) {
 613              		.loc 1 412 3 is_stmt 1 view .LVU167
 614              		.loc 1 412 6 is_stmt 0 view .LVU168
 615 001a FEB1     		cbz	r6, .L42
 616              		.loc 1 412 25 discriminator 1 view .LVU169
 617 001c A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 618              		.loc 1 412 13 discriminator 1 view .LVU170
 619 001e 33B1     		cbz	r3, .L52
 620              	.L43:
 413:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S21>/Qualification' incorporates:
 414:Src/BLDC_controller.c ****      *  ActionPort: '<S25>/Action Port'
 415:Src/BLDC_controller.c ****      */
 416:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 19


 417:Src/BLDC_controller.c ****     /* Outputs for Atomic SubSystem: '<S25>/Counter' */
 418:Src/BLDC_controller.c ****     Counter_n(1U, rtu_tAcv, rtb_RelationalOperator_g, &rtb_Sum1_n,
 419:Src/BLDC_controller.c ****               &localDW->Counter_n1);
 420:Src/BLDC_controller.c **** 
 421:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S25>/Counter' */
 422:Src/BLDC_controller.c **** 
 423:Src/BLDC_controller.c ****     /* Switch: '<S25>/Switch2' incorporates:
 424:Src/BLDC_controller.c ****      *  Constant: '<S25>/Constant6'
 425:Src/BLDC_controller.c ****      *  RelationalOperator: '<S25>/Relational Operator2'
 426:Src/BLDC_controller.c ****      */
 427:Src/BLDC_controller.c ****     *rty_y = ((rtb_Sum1_n > rtu_tAcv) || localDW->UnitDelay_DSTATE);
 428:Src/BLDC_controller.c **** 
 429:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S21>/Qualification' */
 430:Src/BLDC_controller.c ****   } else if ((!rtu_u) && localDW->UnitDelay_DSTATE) {
 431:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S21>/Dequalification' incorporates:
 432:Src/BLDC_controller.c ****      *  ActionPort: '<S24>/Action Port'
 433:Src/BLDC_controller.c ****      */
 434:Src/BLDC_controller.c **** 
 435:Src/BLDC_controller.c ****     /* Outputs for Atomic SubSystem: '<S24>/Counter' */
 436:Src/BLDC_controller.c ****     Counter_n(1U, rtu_tDeacv, rtb_RelationalOperator_g, &rtb_Sum1_n,
 437:Src/BLDC_controller.c ****               &localDW->Counter_e);
 438:Src/BLDC_controller.c **** 
 439:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S24>/Counter' */
 440:Src/BLDC_controller.c **** 
 441:Src/BLDC_controller.c ****     /* Switch: '<S24>/Switch2' incorporates:
 442:Src/BLDC_controller.c ****      *  Constant: '<S24>/Constant6'
 443:Src/BLDC_controller.c ****      *  RelationalOperator: '<S24>/Relational Operator2'
 444:Src/BLDC_controller.c ****      */
 445:Src/BLDC_controller.c ****     *rty_y = ((!(rtb_Sum1_n > rtu_tDeacv)) && localDW->UnitDelay_DSTATE);
 446:Src/BLDC_controller.c **** 
 447:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S21>/Dequalification' */
 448:Src/BLDC_controller.c ****   } else {
 449:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S21>/Default' incorporates:
 450:Src/BLDC_controller.c ****      *  ActionPort: '<S23>/Action Port'
 451:Src/BLDC_controller.c ****      */
 452:Src/BLDC_controller.c ****     *rty_y = localDW->UnitDelay_DSTATE;
 621              		.loc 1 452 5 is_stmt 1 view .LVU171
 622              		.loc 1 452 21 is_stmt 0 view .LVU172
 623 0020 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 624              		.loc 1 452 12 view .LVU173
 625 0022 2B70     		strb	r3, [r5]
 626              	.L45:
 453:Src/BLDC_controller.c **** 
 454:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S21>/Default' */
 455:Src/BLDC_controller.c ****   }
 456:Src/BLDC_controller.c **** 
 457:Src/BLDC_controller.c ****   /* End of If: '<S21>/If2' */
 458:Src/BLDC_controller.c **** 
 459:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S21>/UnitDelay' */
 460:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = *rty_y;
 627              		.loc 1 460 3 is_stmt 1 view .LVU174
 628              		.loc 1 460 31 is_stmt 0 view .LVU175
 629 0024 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 630              		.loc 1 460 29 view .LVU176
 631 0026 A371     		strb	r3, [r4, #6]
 461:Src/BLDC_controller.c **** }
 632              		.loc 1 461 1 view .LVU177
ARM GAS  /tmp/cccGHnrd.s 			page 20


 633 0028 04B0     		add	sp, sp, #16
 634              	.LCFI8:
 635              		.cfi_remember_state
 636              		.cfi_def_cfa_offset 24
 637              		@ sp needed
 638 002a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 639              	.LVL58:
 640              	.L52:
 641              	.LCFI9:
 642              		.cfi_restore_state
 418:Src/BLDC_controller.c ****               &localDW->Counter_n1);
 643              		.loc 1 418 5 is_stmt 1 view .LVU178
 644 002e 231D     		adds	r3, r4, #4
 645 0030 0093     		str	r3, [sp]
 646 0032 0DF10E03 		add	r3, sp, #14
 647 0036 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
 648 003a 4146     		mov	r1, r8
 649 003c 0120     		movs	r0, #1
 650 003e FFF7FEFF 		bl	Counter_n
 651              	.LVL59:
 427:Src/BLDC_controller.c **** 
 652              		.loc 1 427 5 view .LVU179
 427:Src/BLDC_controller.c **** 
 653              		.loc 1 427 27 is_stmt 0 view .LVU180
 654 0042 BDF80E30 		ldrh	r3, [sp, #14]
 427:Src/BLDC_controller.c **** 
 655              		.loc 1 427 39 view .LVU181
 656 0046 4345     		cmp	r3, r8
 657 0048 03D8     		bhi	.L47
 427:Src/BLDC_controller.c **** 
 658              		.loc 1 427 49 discriminator 2 view .LVU182
 659 004a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 427:Src/BLDC_controller.c **** 
 660              		.loc 1 427 39 discriminator 2 view .LVU183
 661 004c 23B1     		cbz	r3, .L48
 427:Src/BLDC_controller.c **** 
 662              		.loc 1 427 39 discriminator 3 view .LVU184
 663 004e 0123     		movs	r3, #1
 664 0050 00E0     		b	.L44
 665              	.L47:
 666 0052 0123     		movs	r3, #1
 667              	.L44:
 427:Src/BLDC_controller.c **** 
 668              		.loc 1 427 12 discriminator 6 view .LVU185
 669 0054 2B70     		strb	r3, [r5]
 427:Src/BLDC_controller.c **** 
 670              		.loc 1 427 12 view .LVU186
 671 0056 E5E7     		b	.L45
 672              	.L48:
 427:Src/BLDC_controller.c **** 
 673              		.loc 1 427 39 discriminator 4 view .LVU187
 674 0058 0023     		movs	r3, #0
 675 005a FBE7     		b	.L44
 676              	.L42:
 430:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S21>/Dequalification' incorporates:
 677              		.loc 1 430 33 discriminator 1 view .LVU188
 678 005c A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cccGHnrd.s 			page 21


 430:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S21>/Dequalification' incorporates:
 679              		.loc 1 430 23 discriminator 1 view .LVU189
 680 005e 002B     		cmp	r3, #0
 681 0060 DED0     		beq	.L43
 436:Src/BLDC_controller.c ****               &localDW->Counter_e);
 682              		.loc 1 436 5 is_stmt 1 view .LVU190
 683 0062 A31C     		adds	r3, r4, #2
 684 0064 0093     		str	r3, [sp]
 685 0066 0DF10E03 		add	r3, sp, #14
 686 006a 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
 687 006e 3946     		mov	r1, r7
 688 0070 0120     		movs	r0, #1
 689 0072 FFF7FEFF 		bl	Counter_n
 690              	.LVL60:
 445:Src/BLDC_controller.c **** 
 691              		.loc 1 445 5 view .LVU191
 445:Src/BLDC_controller.c **** 
 692              		.loc 1 445 16 is_stmt 0 view .LVU192
 693 0076 BDF80E30 		ldrh	r3, [sp, #14]
 445:Src/BLDC_controller.c **** 
 694              		.loc 1 445 44 view .LVU193
 695 007a BB42     		cmp	r3, r7
 696 007c 03D8     		bhi	.L49
 445:Src/BLDC_controller.c **** 
 697              		.loc 1 445 54 discriminator 1 view .LVU194
 698 007e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 445:Src/BLDC_controller.c **** 
 699              		.loc 1 445 44 discriminator 1 view .LVU195
 700 0080 13B1     		cbz	r3, .L46
 445:Src/BLDC_controller.c **** 
 701              		.loc 1 445 44 discriminator 3 view .LVU196
 702 0082 0123     		movs	r3, #1
 703 0084 00E0     		b	.L46
 704              	.L49:
 445:Src/BLDC_controller.c **** 
 705              		.loc 1 445 44 discriminator 4 view .LVU197
 706 0086 0023     		movs	r3, #0
 707              	.L46:
 445:Src/BLDC_controller.c **** 
 708              		.loc 1 445 12 discriminator 6 view .LVU198
 709 0088 2B70     		strb	r3, [r5]
 445:Src/BLDC_controller.c **** 
 710              		.loc 1 445 12 view .LVU199
 711 008a CBE7     		b	.L45
 712              		.cfi_endproc
 713              	.LFE11:
 715              		.section	.text.I_backCalc_fixdt_Init,"ax",%progbits
 716              		.align	1
 717              		.global	I_backCalc_fixdt_Init
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 722              	I_backCalc_fixdt_Init:
 723              	.LVL61:
 724              	.LFB12:
 462:Src/BLDC_controller.c **** 
 463:Src/BLDC_controller.c **** /*
ARM GAS  /tmp/cccGHnrd.s 			page 22


 464:Src/BLDC_controller.c ****  * System initialize for atomic system:
 465:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt'
 466:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt1'
 467:Src/BLDC_controller.c ****  *    '<S82>/I_backCalc_fixdt'
 468:Src/BLDC_controller.c ****  */
 469:Src/BLDC_controller.c **** void I_backCalc_fixdt_Init(DW_I_backCalc_fixdt *localDW, int32_T rtp_yInit)
 470:Src/BLDC_controller.c **** {
 725              		.loc 1 470 1 is_stmt 1 view -0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 471:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S90>/UnitDelay' */
 472:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE_m = rtp_yInit;
 730              		.loc 1 472 3 view .LVU201
 731              		.loc 1 472 31 is_stmt 0 view .LVU202
 732 0000 4160     		str	r1, [r0, #4]
 473:Src/BLDC_controller.c **** }
 733              		.loc 1 473 1 view .LVU203
 734 0002 7047     		bx	lr
 735              		.cfi_endproc
 736              	.LFE12:
 738              		.section	.text.I_backCalc_fixdt_Reset,"ax",%progbits
 739              		.align	1
 740              		.global	I_backCalc_fixdt_Reset
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 745              	I_backCalc_fixdt_Reset:
 746              	.LVL62:
 747              	.LFB13:
 474:Src/BLDC_controller.c **** 
 475:Src/BLDC_controller.c **** /*
 476:Src/BLDC_controller.c ****  * System reset for atomic system:
 477:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt'
 478:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt1'
 479:Src/BLDC_controller.c ****  *    '<S82>/I_backCalc_fixdt'
 480:Src/BLDC_controller.c ****  */
 481:Src/BLDC_controller.c **** void I_backCalc_fixdt_Reset(DW_I_backCalc_fixdt *localDW, int32_T rtp_yInit)
 482:Src/BLDC_controller.c **** {
 748              		.loc 1 482 1 is_stmt 1 view -0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 483:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S88>/UnitDelay' */
 484:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = 0;
 753              		.loc 1 484 3 view .LVU205
 754              		.loc 1 484 29 is_stmt 0 view .LVU206
 755 0000 0023     		movs	r3, #0
 756 0002 0360     		str	r3, [r0]
 485:Src/BLDC_controller.c **** 
 486:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S90>/UnitDelay' */
 487:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE_m = rtp_yInit;
 757              		.loc 1 487 3 is_stmt 1 view .LVU207
 758              		.loc 1 487 31 is_stmt 0 view .LVU208
 759 0004 4160     		str	r1, [r0, #4]
ARM GAS  /tmp/cccGHnrd.s 			page 23


 488:Src/BLDC_controller.c **** }
 760              		.loc 1 488 1 view .LVU209
 761 0006 7047     		bx	lr
 762              		.cfi_endproc
 763              	.LFE13:
 765              		.section	.text.I_backCalc_fixdt,"ax",%progbits
 766              		.align	1
 767              		.global	I_backCalc_fixdt
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 772              	I_backCalc_fixdt:
 773              	.LVL63:
 774              	.LFB14:
 489:Src/BLDC_controller.c **** 
 490:Src/BLDC_controller.c **** /*
 491:Src/BLDC_controller.c ****  * Output and update for atomic system:
 492:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt'
 493:Src/BLDC_controller.c ****  *    '<S83>/I_backCalc_fixdt1'
 494:Src/BLDC_controller.c ****  *    '<S82>/I_backCalc_fixdt'
 495:Src/BLDC_controller.c ****  */
 496:Src/BLDC_controller.c **** void I_backCalc_fixdt(int16_T rtu_err, uint16_T rtu_I, uint16_T rtu_Kb, int16_T
 497:Src/BLDC_controller.c ****                       rtu_satMax, int16_T rtu_satMin, int16_T *rty_out,
 498:Src/BLDC_controller.c ****                       DW_I_backCalc_fixdt *localDW)
 499:Src/BLDC_controller.c **** {
 775              		.loc 1 499 1 is_stmt 1 view -0
 776              		.cfi_startproc
 777              		@ args = 12, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		.loc 1 499 1 is_stmt 0 view .LVU211
 780 0000 30B5     		push	{r4, r5, lr}
 781              	.LCFI10:
 782              		.cfi_def_cfa_offset 12
 783              		.cfi_offset 4, -12
 784              		.cfi_offset 5, -8
 785              		.cfi_offset 14, -4
 786 0002 BDF90CE0 		ldrsh	lr, [sp, #12]
 787 0006 049D     		ldr	r5, [sp, #16]
 788 0008 059C     		ldr	r4, [sp, #20]
 500:Src/BLDC_controller.c ****   int32_T rtb_Sum1_o;
 789              		.loc 1 500 3 is_stmt 1 view .LVU212
 501:Src/BLDC_controller.c ****   int16_T rtb_DataTypeConversion1_gf;
 790              		.loc 1 501 3 view .LVU213
 502:Src/BLDC_controller.c **** 
 503:Src/BLDC_controller.c ****   /* Sum: '<S88>/Sum2' incorporates:
 504:Src/BLDC_controller.c ****    *  Product: '<S88>/Divide2'
 505:Src/BLDC_controller.c ****    *  UnitDelay: '<S88>/UnitDelay'
 506:Src/BLDC_controller.c ****    */
 507:Src/BLDC_controller.c ****   rtb_Sum1_o = (rtu_err * rtu_I) >> 4;
 791              		.loc 1 507 3 view .LVU214
 792              		.loc 1 507 25 is_stmt 0 view .LVU215
 793 000a 01FB00F0 		mul	r0, r1, r0
 794              	.LVL64:
 508:Src/BLDC_controller.c ****   if ((rtb_Sum1_o < 0) && (localDW->UnitDelay_DSTATE < MIN_int32_T - rtb_Sum1_o))
 795              		.loc 1 508 3 is_stmt 1 view .LVU216
 796              		.loc 1 508 6 is_stmt 0 view .LVU217
 797 000e 0011     		asrs	r0, r0, #4
ARM GAS  /tmp/cccGHnrd.s 			page 24


 798              	.LVL65:
 799              		.loc 1 508 6 view .LVU218
 800 0010 0BD4     		bmi	.L65
 509:Src/BLDC_controller.c ****   {
 510:Src/BLDC_controller.c ****     rtb_Sum1_o = MIN_int32_T;
 511:Src/BLDC_controller.c ****   } else if ((rtb_Sum1_o > 0) && (localDW->UnitDelay_DSTATE > MAX_int32_T
 801              		.loc 1 511 10 is_stmt 1 view .LVU219
 802              		.loc 1 511 13 is_stmt 0 view .LVU220
 803 0012 0028     		cmp	r0, #0
 804 0014 0FDD     		ble	.L58
 512:Src/BLDC_controller.c ****               - rtb_Sum1_o)) {
 805              		.loc 1 512 15 view .LVU221
 806 0016 6FF00041 		mvn	r1, #-2147483648
 807              	.LVL66:
 808              		.loc 1 512 15 view .LVU222
 809 001a 091A     		subs	r1, r1, r0
 511:Src/BLDC_controller.c ****               - rtb_Sum1_o)) {
 810              		.loc 1 511 31 discriminator 1 view .LVU223
 811 001c D4F800C0 		ldr	ip, [r4]
 812 0020 8C45     		cmp	ip, r1
 813 0022 08DD     		ble	.L58
 513:Src/BLDC_controller.c ****     rtb_Sum1_o = MAX_int32_T;
 814              		.loc 1 513 16 view .LVU224
 815 0024 6FF00040 		mvn	r0, #-2147483648
 816              	.LVL67:
 817              		.loc 1 513 16 view .LVU225
 818 0028 07E0     		b	.L57
 819              	.LVL68:
 820              	.L65:
 508:Src/BLDC_controller.c ****   {
 821              		.loc 1 508 68 discriminator 1 view .LVU226
 822 002a C0F10041 		rsb	r1, r0, #-2147483648
 823              	.LVL69:
 508:Src/BLDC_controller.c ****   {
 824              		.loc 1 508 24 discriminator 1 view .LVU227
 825 002e D4F800C0 		ldr	ip, [r4]
 826 0032 8C45     		cmp	ip, r1
 827 0034 13DB     		blt	.L62
 828              	.L58:
 514:Src/BLDC_controller.c ****   } else {
 515:Src/BLDC_controller.c ****     rtb_Sum1_o += localDW->UnitDelay_DSTATE;
 829              		.loc 1 515 5 is_stmt 1 view .LVU228
 830              		.loc 1 515 26 is_stmt 0 view .LVU229
 831 0036 2168     		ldr	r1, [r4]
 832              		.loc 1 515 16 view .LVU230
 833 0038 0844     		add	r0, r0, r1
 834              	.LVL70:
 835              	.L57:
 516:Src/BLDC_controller.c ****   }
 517:Src/BLDC_controller.c **** 
 518:Src/BLDC_controller.c ****   /* End of Sum: '<S88>/Sum2' */
 519:Src/BLDC_controller.c **** 
 520:Src/BLDC_controller.c ****   /* Sum: '<S90>/Sum1' incorporates:
 521:Src/BLDC_controller.c ****    *  UnitDelay: '<S90>/UnitDelay'
 522:Src/BLDC_controller.c ****    */
 523:Src/BLDC_controller.c ****   rtb_Sum1_o += localDW->UnitDelay_DSTATE_m;
 836              		.loc 1 523 3 is_stmt 1 view .LVU231
ARM GAS  /tmp/cccGHnrd.s 			page 25


 837              		.loc 1 523 24 is_stmt 0 view .LVU232
 838 003a 6168     		ldr	r1, [r4, #4]
 839              		.loc 1 523 14 view .LVU233
 840 003c 0144     		add	r1, r1, r0
 841              	.LVL71:
 524:Src/BLDC_controller.c **** 
 525:Src/BLDC_controller.c ****   /* DataTypeConversion: '<S90>/Data Type Conversion1' */
 526:Src/BLDC_controller.c ****   rtb_DataTypeConversion1_gf = (int16_T)(rtb_Sum1_o >> 12);
 842              		.loc 1 526 3 is_stmt 1 view .LVU234
 843              		.loc 1 526 53 is_stmt 0 view .LVU235
 844 003e 4FEA213C 		asr	ip, r1, #12
 845              		.loc 1 526 30 view .LVU236
 846 0042 41F30F30 		sbfx	r0, r1, #12, #16
 847              	.LVL72:
 527:Src/BLDC_controller.c **** 
 528:Src/BLDC_controller.c ****   /* Switch: '<S91>/Switch2' incorporates:
 529:Src/BLDC_controller.c ****    *  RelationalOperator: '<S91>/LowerRelop1'
 530:Src/BLDC_controller.c ****    *  RelationalOperator: '<S91>/UpperRelop'
 531:Src/BLDC_controller.c ****    *  Switch: '<S91>/Switch'
 532:Src/BLDC_controller.c ****    */
 533:Src/BLDC_controller.c ****   if (rtb_DataTypeConversion1_gf > rtu_satMax) {
 848              		.loc 1 533 3 is_stmt 1 view .LVU237
 849              		.loc 1 533 6 is_stmt 0 view .LVU238
 850 0046 9842     		cmp	r0, r3
 851 0048 0CDD     		ble	.L59
 534:Src/BLDC_controller.c ****     *rty_out = rtu_satMax;
 852              		.loc 1 534 5 is_stmt 1 view .LVU239
 853              		.loc 1 534 14 is_stmt 0 view .LVU240
 854 004a 2B80     		strh	r3, [r5]	@ movhi
 855              	.L60:
 535:Src/BLDC_controller.c ****   } else if (rtb_DataTypeConversion1_gf < rtu_satMin) {
 536:Src/BLDC_controller.c ****     /* Switch: '<S91>/Switch' */
 537:Src/BLDC_controller.c ****     *rty_out = rtu_satMin;
 538:Src/BLDC_controller.c ****   } else {
 539:Src/BLDC_controller.c ****     *rty_out = rtb_DataTypeConversion1_gf;
 540:Src/BLDC_controller.c ****   }
 541:Src/BLDC_controller.c **** 
 542:Src/BLDC_controller.c ****   /* End of Switch: '<S91>/Switch2' */
 543:Src/BLDC_controller.c **** 
 544:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S88>/UnitDelay' incorporates:
 545:Src/BLDC_controller.c ****    *  Product: '<S88>/Divide1'
 546:Src/BLDC_controller.c ****    *  Sum: '<S88>/Sum3'
 547:Src/BLDC_controller.c ****    */
 548:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE = (int16_T)(*rty_out - rtb_DataTypeConversion1_gf) *
 856              		.loc 1 548 3 is_stmt 1 view .LVU241
 857              		.loc 1 548 41 is_stmt 0 view .LVU242
 858 004c 2B88     		ldrh	r3, [r5]
 859              	.LVL73:
 860              		.loc 1 548 50 view .LVU243
 861 004e A3EB0C03 		sub	r3, r3, ip
 862              		.loc 1 548 31 view .LVU244
 863 0052 1BB2     		sxth	r3, r3
 864              		.loc 1 548 80 view .LVU245
 865 0054 03FB02F2 		mul	r2, r3, r2
 866              	.LVL74:
 867              		.loc 1 548 29 view .LVU246
 868 0058 2260     		str	r2, [r4]
ARM GAS  /tmp/cccGHnrd.s 			page 26


 549:Src/BLDC_controller.c ****     rtu_Kb;
 550:Src/BLDC_controller.c **** 
 551:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S90>/UnitDelay' */
 552:Src/BLDC_controller.c ****   localDW->UnitDelay_DSTATE_m = rtb_Sum1_o;
 869              		.loc 1 552 3 is_stmt 1 view .LVU247
 870              		.loc 1 552 31 is_stmt 0 view .LVU248
 871 005a 6160     		str	r1, [r4, #4]
 553:Src/BLDC_controller.c **** }
 872              		.loc 1 553 1 view .LVU249
 873 005c 30BD     		pop	{r4, r5, pc}
 874              	.LVL75:
 875              	.L62:
 510:Src/BLDC_controller.c ****   } else if ((rtb_Sum1_o > 0) && (localDW->UnitDelay_DSTATE > MAX_int32_T
 876              		.loc 1 510 16 view .LVU250
 877 005e 4FF00040 		mov	r0, #-2147483648
 878              	.LVL76:
 510:Src/BLDC_controller.c ****   } else if ((rtb_Sum1_o > 0) && (localDW->UnitDelay_DSTATE > MAX_int32_T
 879              		.loc 1 510 16 view .LVU251
 880 0062 EAE7     		b	.L57
 881              	.LVL77:
 882              	.L59:
 535:Src/BLDC_controller.c ****     /* Switch: '<S91>/Switch' */
 883              		.loc 1 535 10 is_stmt 1 view .LVU252
 535:Src/BLDC_controller.c ****     /* Switch: '<S91>/Switch' */
 884              		.loc 1 535 13 is_stmt 0 view .LVU253
 885 0064 7045     		cmp	r0, lr
 886 0066 02DA     		bge	.L61
 537:Src/BLDC_controller.c ****   } else {
 887              		.loc 1 537 5 is_stmt 1 view .LVU254
 537:Src/BLDC_controller.c ****   } else {
 888              		.loc 1 537 14 is_stmt 0 view .LVU255
 889 0068 A5F800E0 		strh	lr, [r5]	@ movhi
 890 006c EEE7     		b	.L60
 891              	.L61:
 539:Src/BLDC_controller.c ****   }
 892              		.loc 1 539 5 is_stmt 1 view .LVU256
 539:Src/BLDC_controller.c ****   }
 893              		.loc 1 539 14 is_stmt 0 view .LVU257
 894 006e 2880     		strh	r0, [r5]	@ movhi
 895 0070 ECE7     		b	.L60
 896              		.cfi_endproc
 897              	.LFE14:
 899              		.section	.text.PI_clamp_fixdt_Init,"ax",%progbits
 900              		.align	1
 901              		.global	PI_clamp_fixdt_Init
 902              		.syntax unified
 903              		.thumb
 904              		.thumb_func
 906              	PI_clamp_fixdt_Init:
 907              	.LVL78:
 908              	.LFB15:
 554:Src/BLDC_controller.c **** 
 555:Src/BLDC_controller.c **** /* System initialize for atomic system: '<S63>/PI_clamp_fixdt' */
 556:Src/BLDC_controller.c **** void PI_clamp_fixdt_Init(DW_PI_clamp_fixdt *localDW)
 557:Src/BLDC_controller.c **** {
 909              		.loc 1 557 1 is_stmt 1 view -0
 910              		.cfi_startproc
ARM GAS  /tmp/cccGHnrd.s 			page 27


 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              		@ link register save eliminated.
 558:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S77>/Resettable Delay' */
 559:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 914              		.loc 1 559 3 view .LVU259
 915              		.loc 1 559 19 is_stmt 0 view .LVU260
 916 0000 0123     		movs	r3, #1
 917 0002 0371     		strb	r3, [r0, #4]
 560:Src/BLDC_controller.c **** }
 918              		.loc 1 560 1 view .LVU261
 919 0004 7047     		bx	lr
 920              		.cfi_endproc
 921              	.LFE15:
 923              		.section	.text.PI_clamp_fixdt_Reset,"ax",%progbits
 924              		.align	1
 925              		.global	PI_clamp_fixdt_Reset
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 930              	PI_clamp_fixdt_Reset:
 931              	.LVL79:
 932              	.LFB16:
 561:Src/BLDC_controller.c **** 
 562:Src/BLDC_controller.c **** /* System reset for atomic system: '<S63>/PI_clamp_fixdt' */
 563:Src/BLDC_controller.c **** void PI_clamp_fixdt_Reset(DW_PI_clamp_fixdt *localDW)
 564:Src/BLDC_controller.c **** {
 933              		.loc 1 564 1 is_stmt 1 view -0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 565:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S74>/UnitDelay1' */
 566:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = false;
 938              		.loc 1 566 3 view .LVU263
 939              		.loc 1 566 30 is_stmt 0 view .LVU264
 940 0000 0023     		movs	r3, #0
 941 0002 4371     		strb	r3, [r0, #5]
 567:Src/BLDC_controller.c **** 
 568:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S77>/Resettable Delay' */
 569:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 942              		.loc 1 569 3 is_stmt 1 view .LVU265
 943              		.loc 1 569 19 is_stmt 0 view .LVU266
 944 0004 0123     		movs	r3, #1
 945 0006 0371     		strb	r3, [r0, #4]
 570:Src/BLDC_controller.c **** }
 946              		.loc 1 570 1 view .LVU267
 947 0008 7047     		bx	lr
 948              		.cfi_endproc
 949              	.LFE16:
 951              		.section	.text.PI_clamp_fixdt,"ax",%progbits
 952              		.align	1
 953              		.global	PI_clamp_fixdt
 954              		.syntax unified
 955              		.thumb
 956              		.thumb_func
 958              	PI_clamp_fixdt:
ARM GAS  /tmp/cccGHnrd.s 			page 28


 959              	.LVL80:
 960              	.LFB17:
 571:Src/BLDC_controller.c **** 
 572:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S63>/PI_clamp_fixdt' */
 573:Src/BLDC_controller.c **** void PI_clamp_fixdt(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I, int32_T
 574:Src/BLDC_controller.c ****                     rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 575:Src/BLDC_controller.c ****                     rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt
 576:Src/BLDC_controller.c ****                     *localDW)
 577:Src/BLDC_controller.c **** {
 961              		.loc 1 577 1 is_stmt 1 view -0
 962              		.cfi_startproc
 963              		@ args = 20, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965              		.loc 1 577 1 is_stmt 0 view .LVU269
 966 0000 70B5     		push	{r4, r5, r6, lr}
 967              	.LCFI11:
 968              		.cfi_def_cfa_offset 16
 969              		.cfi_offset 4, -16
 970              		.cfi_offset 5, -12
 971              		.cfi_offset 6, -8
 972              		.cfi_offset 14, -4
 973 0002 BDF910E0 		ldrsh	lr, [sp, #16]
 974 0006 BDF91460 		ldrsh	r6, [sp, #20]
 975 000a 069D     		ldr	r5, [sp, #24]
 976 000c 089C     		ldr	r4, [sp, #32]
 578:Src/BLDC_controller.c ****   boolean_T rtb_LowerRelop1_c0;
 977              		.loc 1 578 3 is_stmt 1 view .LVU270
 579:Src/BLDC_controller.c ****   boolean_T rtb_UpperRelop_f;
 978              		.loc 1 579 3 view .LVU271
 580:Src/BLDC_controller.c ****   int32_T rtb_Sum1_p0;
 979              		.loc 1 580 3 view .LVU272
 581:Src/BLDC_controller.c ****   int32_T q0;
 980              		.loc 1 581 3 view .LVU273
 582:Src/BLDC_controller.c ****   int32_T tmp;
 981              		.loc 1 582 3 view .LVU274
 583:Src/BLDC_controller.c ****   int16_T tmp_0;
 982              		.loc 1 583 3 view .LVU275
 584:Src/BLDC_controller.c **** 
 585:Src/BLDC_controller.c ****   /* Sum: '<S74>/Sum2' incorporates:
 586:Src/BLDC_controller.c ****    *  Product: '<S74>/Divide2'
 587:Src/BLDC_controller.c ****    */
 588:Src/BLDC_controller.c ****   q0 = rtu_err * rtu_I;
 983              		.loc 1 588 3 view .LVU276
 984              		.loc 1 588 6 is_stmt 0 view .LVU277
 985 000e 00FB02F2 		mul	r2, r0, r2
 986              	.LVL81:
 589:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 987              		.loc 1 589 3 is_stmt 1 view .LVU278
 988              		.loc 1 589 6 is_stmt 0 view .LVU279
 989 0012 002A     		cmp	r2, #0
 990 0014 0ADB     		blt	.L95
 590:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
 591:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 991              		.loc 1 591 10 is_stmt 1 view .LVU280
 992              		.loc 1 591 13 is_stmt 0 view .LVU281
 993 0016 002A     		cmp	r2, #0
 994 0018 0CDD     		ble	.L71
ARM GAS  /tmp/cccGHnrd.s 			page 29


 995              		.loc 1 591 57 discriminator 1 view .LVU282
 996 001a 6FF0004C 		mvn	ip, #-2147483648
 997 001e ACEB020C 		sub	ip, ip, r2
 998              		.loc 1 591 23 discriminator 1 view .LVU283
 999 0022 AC45     		cmp	ip, r5
 1000 0024 06DA     		bge	.L71
 592:Src/BLDC_controller.c ****     q0 = MAX_int32_T;
 1001              		.loc 1 592 8 view .LVU284
 1002 0026 6FF0004C 		mvn	ip, #-2147483648
 1003 002a 05E0     		b	.L70
 1004              	.L95:
 589:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 1005              		.loc 1 589 50 discriminator 1 view .LVU285
 1006 002c C2F1004C 		rsb	ip, r2, #-2147483648
 589:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 1007              		.loc 1 589 16 discriminator 1 view .LVU286
 1008 0030 AC45     		cmp	ip, r5
 1009 0032 14DC     		bgt	.L82
 1010              	.L71:
 593:Src/BLDC_controller.c ****   } else {
 594:Src/BLDC_controller.c ****     q0 += rtu_ext_limProt;
 1011              		.loc 1 594 5 is_stmt 1 view .LVU287
 1012              		.loc 1 594 8 is_stmt 0 view .LVU288
 1013 0034 02EB050C 		add	ip, r2, r5
 1014              	.LVL82:
 1015              	.L70:
 595:Src/BLDC_controller.c ****   }
 596:Src/BLDC_controller.c **** 
 597:Src/BLDC_controller.c ****   /* Delay: '<S77>/Resettable Delay' */
 598:Src/BLDC_controller.c ****   if (localDW->icLoad != 0) {
 1016              		.loc 1 598 3 is_stmt 1 view .LVU289
 1017              		.loc 1 598 14 is_stmt 0 view .LVU290
 1018 0038 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 1019              		.loc 1 598 6 view .LVU291
 1020 003a 02B1     		cbz	r2, .L72
 599:Src/BLDC_controller.c ****     localDW->ResettableDelay_DSTATE = rtu_init;
 1021              		.loc 1 599 5 is_stmt 1 view .LVU292
 1022              		.loc 1 599 37 is_stmt 0 view .LVU293
 1023 003c 2360     		str	r3, [r4]
 1024              	.L72:
 600:Src/BLDC_controller.c ****   }
 601:Src/BLDC_controller.c **** 
 602:Src/BLDC_controller.c ****   /* Switch: '<S74>/Switch1' incorporates:
 603:Src/BLDC_controller.c ****    *  Constant: '<S74>/Constant'
 604:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum2'
 605:Src/BLDC_controller.c ****    *  UnitDelay: '<S74>/UnitDelay1'
 606:Src/BLDC_controller.c ****    */
 607:Src/BLDC_controller.c ****   if (localDW->UnitDelay1_DSTATE) {
 1025              		.loc 1 607 3 is_stmt 1 view .LVU294
 1026              		.loc 1 607 14 is_stmt 0 view .LVU295
 1027 003e 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 1028              	.LVL83:
 1029              		.loc 1 607 6 view .LVU296
 1030 0040 83B1     		cbz	r3, .L84
 608:Src/BLDC_controller.c ****     tmp = 0;
 1031              		.loc 1 608 9 view .LVU297
 1032 0042 0023     		movs	r3, #0
ARM GAS  /tmp/cccGHnrd.s 			page 30


 1033              	.L73:
 1034              	.LVL84:
 609:Src/BLDC_controller.c ****   } else {
 610:Src/BLDC_controller.c ****     tmp = q0;
 611:Src/BLDC_controller.c ****   }
 612:Src/BLDC_controller.c **** 
 613:Src/BLDC_controller.c ****   /* End of Switch: '<S74>/Switch1' */
 614:Src/BLDC_controller.c **** 
 615:Src/BLDC_controller.c ****   /* Sum: '<S77>/Sum1' incorporates:
 616:Src/BLDC_controller.c ****    *  Delay: '<S77>/Resettable Delay'
 617:Src/BLDC_controller.c ****    */
 618:Src/BLDC_controller.c ****   rtb_Sum1_p0 = tmp + localDW->ResettableDelay_DSTATE;
 1035              		.loc 1 618 3 is_stmt 1 view .LVU298
 1036              		.loc 1 618 30 is_stmt 0 view .LVU299
 1037 0044 2568     		ldr	r5, [r4]
 1038              		.loc 1 618 15 view .LVU300
 1039 0046 1D44     		add	r5, r5, r3
 1040              	.LVL85:
 619:Src/BLDC_controller.c **** 
 620:Src/BLDC_controller.c ****   /* Product: '<S74>/Divide5' */
 621:Src/BLDC_controller.c ****   tmp = (rtu_err * rtu_P) >> 11;
 1041              		.loc 1 621 3 is_stmt 1 view .LVU301
 1042              		.loc 1 621 18 is_stmt 0 view .LVU302
 1043 0048 00FB01F1 		mul	r1, r0, r1
 1044              	.LVL86:
 1045              		.loc 1 621 7 view .LVU303
 1046 004c CB12     		asrs	r3, r1, #11
 1047              	.LVL87:
 622:Src/BLDC_controller.c ****   if (tmp > 32767) {
 1048              		.loc 1 622 3 is_stmt 1 view .LVU304
 1049              		.loc 1 622 6 is_stmt 0 view .LVU305
 1050 004e B1F1806F 		cmp	r1, #67108864
 1051 0052 09DA     		bge	.L85
 623:Src/BLDC_controller.c ****     tmp = 32767;
 624:Src/BLDC_controller.c ****   } else {
 625:Src/BLDC_controller.c ****     if (tmp < -32768) {
 1052              		.loc 1 625 5 is_stmt 1 view .LVU306
 1053              		.loc 1 625 8 is_stmt 0 view .LVU307
 1054 0054 13F5004F 		cmn	r3, #32768
 1055 0058 08DA     		bge	.L74
 626:Src/BLDC_controller.c ****       tmp = -32768;
 1056              		.loc 1 626 11 view .LVU308
 1057 005a 254B     		ldr	r3, .L97
 1058              	.LVL88:
 1059              		.loc 1 626 11 view .LVU309
 1060 005c 06E0     		b	.L74
 1061              	.LVL89:
 1062              	.L82:
 590:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1063              		.loc 1 590 8 view .LVU310
 1064 005e 4FF0004C 		mov	ip, #-2147483648
 1065 0062 E9E7     		b	.L70
 1066              	.LVL90:
 1067              	.L84:
 610:Src/BLDC_controller.c ****   }
 1068              		.loc 1 610 9 view .LVU311
 1069 0064 6346     		mov	r3, ip
ARM GAS  /tmp/cccGHnrd.s 			page 31


 1070 0066 EDE7     		b	.L73
 1071              	.LVL91:
 1072              	.L85:
 623:Src/BLDC_controller.c ****   } else {
 1073              		.loc 1 623 9 view .LVU312
 1074 0068 47F6FF73 		movw	r3, #32767
 1075              	.LVL92:
 1076              	.L74:
 627:Src/BLDC_controller.c ****     }
 628:Src/BLDC_controller.c ****   }
 629:Src/BLDC_controller.c **** 
 630:Src/BLDC_controller.c ****   /* Sum: '<S74>/Sum1' incorporates:
 631:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S77>/Data Type Conversion1'
 632:Src/BLDC_controller.c ****    *  Product: '<S74>/Divide5'
 633:Src/BLDC_controller.c ****    */
 634:Src/BLDC_controller.c ****   tmp = (((rtb_Sum1_p0 >> 16) << 1) + tmp) >> 1;
 1077              		.loc 1 634 3 is_stmt 1 view .LVU313
 1078              		.loc 1 634 24 is_stmt 0 view .LVU314
 1079 006c 2A14     		asrs	r2, r5, #16
 1080              		.loc 1 634 37 view .LVU315
 1081 006e 03EB4202 		add	r2, r3, r2, lsl #1
 1082              		.loc 1 634 7 view .LVU316
 1083 0072 5310     		asrs	r3, r2, #1
 1084              	.LVL93:
 635:Src/BLDC_controller.c ****   if (tmp > 32767) {
 1085              		.loc 1 635 3 is_stmt 1 view .LVU317
 1086              		.loc 1 635 6 is_stmt 0 view .LVU318
 1087 0074 B2F5803F 		cmp	r2, #65536
 1088 0078 04DA     		bge	.L87
 636:Src/BLDC_controller.c ****     tmp = 32767;
 637:Src/BLDC_controller.c ****   } else {
 638:Src/BLDC_controller.c ****     if (tmp < -32768) {
 1089              		.loc 1 638 5 is_stmt 1 view .LVU319
 1090              		.loc 1 638 8 is_stmt 0 view .LVU320
 1091 007a 13F5004F 		cmn	r3, #32768
 1092 007e 03DA     		bge	.L75
 639:Src/BLDC_controller.c ****       tmp = -32768;
 1093              		.loc 1 639 11 view .LVU321
 1094 0080 1B4B     		ldr	r3, .L97
 1095              	.LVL94:
 1096              		.loc 1 639 11 view .LVU322
 1097 0082 01E0     		b	.L75
 1098              	.LVL95:
 1099              	.L87:
 636:Src/BLDC_controller.c ****     tmp = 32767;
 1100              		.loc 1 636 9 view .LVU323
 1101 0084 47F6FF73 		movw	r3, #32767
 1102              	.LVL96:
 1103              	.L75:
 640:Src/BLDC_controller.c ****     }
 641:Src/BLDC_controller.c ****   }
 642:Src/BLDC_controller.c **** 
 643:Src/BLDC_controller.c ****   /* RelationalOperator: '<S78>/LowerRelop1' incorporates:
 644:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum1'
 645:Src/BLDC_controller.c ****    */
 646:Src/BLDC_controller.c ****   rtb_LowerRelop1_c0 = ((int16_T)tmp > rtu_satMax);
 1104              		.loc 1 646 3 is_stmt 1 view .LVU324
ARM GAS  /tmp/cccGHnrd.s 			page 32


 1105              		.loc 1 646 25 is_stmt 0 view .LVU325
 1106 0088 1BB2     		sxth	r3, r3
 1107              	.LVL97:
 647:Src/BLDC_controller.c **** 
 648:Src/BLDC_controller.c ****   /* RelationalOperator: '<S78>/UpperRelop' incorporates:
 649:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum1'
 650:Src/BLDC_controller.c ****    */
 651:Src/BLDC_controller.c ****   rtb_UpperRelop_f = ((int16_T)tmp < rtu_satMin);
 1108              		.loc 1 651 3 is_stmt 1 view .LVU326
 652:Src/BLDC_controller.c **** 
 653:Src/BLDC_controller.c ****   /* Switch: '<S78>/Switch1' incorporates:
 654:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum1'
 655:Src/BLDC_controller.c ****    *  Switch: '<S78>/Switch3'
 656:Src/BLDC_controller.c ****    */
 657:Src/BLDC_controller.c ****   if (rtb_LowerRelop1_c0) {
 1109              		.loc 1 657 3 view .LVU327
 1110              		.loc 1 657 6 is_stmt 0 view .LVU328
 1111 008a 7345     		cmp	r3, lr
 1112 008c 18DD     		ble	.L76
 658:Src/BLDC_controller.c ****     *rty_out = rtu_satMax;
 1113              		.loc 1 658 5 is_stmt 1 view .LVU329
 1114              		.loc 1 658 14 is_stmt 0 view .LVU330
 1115 008e 079A     		ldr	r2, [sp, #28]
 1116 0090 A2F800E0 		strh	lr, [r2]	@ movhi
 1117              	.L77:
 659:Src/BLDC_controller.c ****   } else if (rtb_UpperRelop_f) {
 660:Src/BLDC_controller.c ****     /* Switch: '<S78>/Switch3' */
 661:Src/BLDC_controller.c ****     *rty_out = rtu_satMin;
 662:Src/BLDC_controller.c ****   } else {
 663:Src/BLDC_controller.c ****     *rty_out = (int16_T)tmp;
 664:Src/BLDC_controller.c ****   }
 665:Src/BLDC_controller.c **** 
 666:Src/BLDC_controller.c ****   /* End of Switch: '<S78>/Switch1' */
 667:Src/BLDC_controller.c **** 
 668:Src/BLDC_controller.c ****   /* Signum: '<S76>/SignDeltaU2' incorporates:
 669:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum2'
 670:Src/BLDC_controller.c ****    */
 671:Src/BLDC_controller.c ****   if (q0 < 0) {
 1118              		.loc 1 671 3 is_stmt 1 view .LVU331
 1119              		.loc 1 671 6 is_stmt 0 view .LVU332
 1120 0094 BCF1000F 		cmp	ip, #0
 1121 0098 1ADB     		blt	.L89
 672:Src/BLDC_controller.c ****     q0 = -1;
 673:Src/BLDC_controller.c ****   } else {
 674:Src/BLDC_controller.c ****     q0 = (q0 > 0);
 1122              		.loc 1 674 5 is_stmt 1 view .LVU333
 1123              		.loc 1 674 14 is_stmt 0 view .LVU334
 1124 009a BCF1000F 		cmp	ip, #0
 1125 009e D4BF     		ite	le
 1126 00a0 0022     		movle	r2, #0
 1127 00a2 0122     		movgt	r2, #1
 1128              	.LVL98:
 1129              	.L79:
 675:Src/BLDC_controller.c ****   }
 676:Src/BLDC_controller.c **** 
 677:Src/BLDC_controller.c ****   /* End of Signum: '<S76>/SignDeltaU2' */
 678:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 33


 679:Src/BLDC_controller.c ****   /* Signum: '<S76>/SignDeltaU3' incorporates:
 680:Src/BLDC_controller.c ****    *  Sum: '<S74>/Sum1'
 681:Src/BLDC_controller.c ****    */
 682:Src/BLDC_controller.c ****   if ((int16_T)tmp < 0) {
 1130              		.loc 1 682 3 is_stmt 1 view .LVU335
 1131              		.loc 1 682 6 is_stmt 0 view .LVU336
 1132 00a4 002B     		cmp	r3, #0
 1133 00a6 16DB     		blt	.L90
 683:Src/BLDC_controller.c ****     tmp_0 = -1;
 684:Src/BLDC_controller.c ****   } else {
 685:Src/BLDC_controller.c ****     tmp_0 = (int16_T)((int16_T)tmp > 0);
 1134              		.loc 1 685 5 is_stmt 1 view .LVU337
 1135              		.loc 1 685 11 is_stmt 0 view .LVU338
 1136 00a8 002B     		cmp	r3, #0
 1137 00aa D4BF     		ite	le
 1138 00ac 0021     		movle	r1, #0
 1139 00ae 0121     		movgt	r1, #1
 1140              	.LVL99:
 1141              	.L80:
 686:Src/BLDC_controller.c ****   }
 687:Src/BLDC_controller.c **** 
 688:Src/BLDC_controller.c ****   /* End of Signum: '<S76>/SignDeltaU3' */
 689:Src/BLDC_controller.c **** 
 690:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S74>/UnitDelay1' incorporates:
 691:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S76>/DataTypeConv4'
 692:Src/BLDC_controller.c ****    *  Logic: '<S74>/AND1'
 693:Src/BLDC_controller.c ****    *  Logic: '<S76>/AND1'
 694:Src/BLDC_controller.c ****    *  RelationalOperator: '<S76>/Equal1'
 695:Src/BLDC_controller.c ****    */
 696:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = ((q0 == tmp_0) && (rtb_LowerRelop1_c0 ||
 1142              		.loc 1 696 3 is_stmt 1 view .LVU339
 1143              		.loc 1 696 47 is_stmt 0 view .LVU340
 1144 00b0 9142     		cmp	r1, r2
 1145 00b2 13D0     		beq	.L96
 1146              		.loc 1 696 47 discriminator 6 view .LVU341
 1147 00b4 0023     		movs	r3, #0
 1148              	.LVL100:
 1149              	.L81:
 1150              		.loc 1 696 30 discriminator 8 view .LVU342
 1151 00b6 6371     		strb	r3, [r4, #5]
 697:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 698:Src/BLDC_controller.c **** 
 699:Src/BLDC_controller.c ****   /* Update for Delay: '<S77>/Resettable Delay' */
 700:Src/BLDC_controller.c ****   localDW->icLoad = 0U;
 1152              		.loc 1 700 3 is_stmt 1 view .LVU343
 1153              		.loc 1 700 19 is_stmt 0 view .LVU344
 1154 00b8 0023     		movs	r3, #0
 1155 00ba 2371     		strb	r3, [r4, #4]
 701:Src/BLDC_controller.c ****   localDW->ResettableDelay_DSTATE = rtb_Sum1_p0;
 1156              		.loc 1 701 3 is_stmt 1 view .LVU345
 1157              		.loc 1 701 35 is_stmt 0 view .LVU346
 1158 00bc 2560     		str	r5, [r4]
 702:Src/BLDC_controller.c **** }
 1159              		.loc 1 702 1 view .LVU347
 1160 00be 70BD     		pop	{r4, r5, r6, pc}
 1161              	.LVL101:
 1162              	.L76:
ARM GAS  /tmp/cccGHnrd.s 			page 34


 659:Src/BLDC_controller.c ****     /* Switch: '<S78>/Switch3' */
 1163              		.loc 1 659 10 is_stmt 1 view .LVU348
 659:Src/BLDC_controller.c ****     /* Switch: '<S78>/Switch3' */
 1164              		.loc 1 659 13 is_stmt 0 view .LVU349
 1165 00c0 B342     		cmp	r3, r6
 1166 00c2 02DA     		bge	.L78
 661:Src/BLDC_controller.c ****   } else {
 1167              		.loc 1 661 5 is_stmt 1 view .LVU350
 661:Src/BLDC_controller.c ****   } else {
 1168              		.loc 1 661 14 is_stmt 0 view .LVU351
 1169 00c4 079A     		ldr	r2, [sp, #28]
 1170 00c6 1680     		strh	r6, [r2]	@ movhi
 1171 00c8 E4E7     		b	.L77
 1172              	.L78:
 663:Src/BLDC_controller.c ****   }
 1173              		.loc 1 663 5 is_stmt 1 view .LVU352
 663:Src/BLDC_controller.c ****   }
 1174              		.loc 1 663 14 is_stmt 0 view .LVU353
 1175 00ca 079A     		ldr	r2, [sp, #28]
 1176 00cc 1380     		strh	r3, [r2]	@ movhi
 1177 00ce E1E7     		b	.L77
 1178              	.L89:
 672:Src/BLDC_controller.c ****   } else {
 1179              		.loc 1 672 8 view .LVU354
 1180 00d0 4FF0FF32 		mov	r2, #-1
 1181 00d4 E6E7     		b	.L79
 1182              	.LVL102:
 1183              	.L90:
 683:Src/BLDC_controller.c ****   } else {
 1184              		.loc 1 683 11 view .LVU355
 1185 00d6 4FF0FF31 		mov	r1, #-1
 1186 00da E9E7     		b	.L80
 1187              	.LVL103:
 1188              	.L96:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1189              		.loc 1 696 47 discriminator 1 view .LVU356
 1190 00dc 7345     		cmp	r3, lr
 1191 00de 03DC     		bgt	.L92
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1192              		.loc 1 696 70 discriminator 4 view .LVU357
 1193 00e0 B342     		cmp	r3, r6
 1194 00e2 03DB     		blt	.L93
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1195              		.loc 1 696 47 discriminator 6 view .LVU358
 1196 00e4 0023     		movs	r3, #0
 1197              	.LVL104:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1198              		.loc 1 696 47 discriminator 6 view .LVU359
 1199 00e6 E6E7     		b	.L81
 1200              	.LVL105:
 1201              	.L92:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1202              		.loc 1 696 47 discriminator 5 view .LVU360
 1203 00e8 0123     		movs	r3, #1
 1204              	.LVL106:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1205              		.loc 1 696 47 discriminator 5 view .LVU361
ARM GAS  /tmp/cccGHnrd.s 			page 35


 1206 00ea E4E7     		b	.L81
 1207              	.LVL107:
 1208              	.L93:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1209              		.loc 1 696 47 discriminator 5 view .LVU362
 1210 00ec 0123     		movs	r3, #1
 1211              	.LVL108:
 696:Src/BLDC_controller.c ****     rtb_UpperRelop_f));
 1212              		.loc 1 696 47 discriminator 5 view .LVU363
 1213 00ee E2E7     		b	.L81
 1214              	.L98:
 1215              		.align	2
 1216              	.L97:
 1217 00f0 0080FFFF 		.word	-32768
 1218              		.cfi_endproc
 1219              	.LFE17:
 1221              		.section	.text.PI_clamp_fixdt_d_Init,"ax",%progbits
 1222              		.align	1
 1223              		.global	PI_clamp_fixdt_d_Init
 1224              		.syntax unified
 1225              		.thumb
 1226              		.thumb_func
 1228              	PI_clamp_fixdt_d_Init:
 1229              	.LVL109:
 1230              	.LFB18:
 703:Src/BLDC_controller.c **** 
 704:Src/BLDC_controller.c **** /* System initialize for atomic system: '<S61>/PI_clamp_fixdt' */
 705:Src/BLDC_controller.c **** void PI_clamp_fixdt_d_Init(DW_PI_clamp_fixdt_m *localDW)
 706:Src/BLDC_controller.c **** {
 1231              		.loc 1 706 1 is_stmt 1 view -0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 0
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235              		@ link register save eliminated.
 707:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S67>/Resettable Delay' */
 708:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 1236              		.loc 1 708 3 view .LVU365
 1237              		.loc 1 708 19 is_stmt 0 view .LVU366
 1238 0000 0123     		movs	r3, #1
 1239 0002 0371     		strb	r3, [r0, #4]
 709:Src/BLDC_controller.c **** }
 1240              		.loc 1 709 1 view .LVU367
 1241 0004 7047     		bx	lr
 1242              		.cfi_endproc
 1243              	.LFE18:
 1245              		.section	.text.PI_clamp_fixdt_b_Reset,"ax",%progbits
 1246              		.align	1
 1247              		.global	PI_clamp_fixdt_b_Reset
 1248              		.syntax unified
 1249              		.thumb
 1250              		.thumb_func
 1252              	PI_clamp_fixdt_b_Reset:
 1253              	.LVL110:
 1254              	.LFB19:
 710:Src/BLDC_controller.c **** 
 711:Src/BLDC_controller.c **** /* System reset for atomic system: '<S61>/PI_clamp_fixdt' */
 712:Src/BLDC_controller.c **** void PI_clamp_fixdt_b_Reset(DW_PI_clamp_fixdt_m *localDW)
ARM GAS  /tmp/cccGHnrd.s 			page 36


 713:Src/BLDC_controller.c **** {
 1255              		.loc 1 713 1 is_stmt 1 view -0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              		@ link register save eliminated.
 714:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S65>/UnitDelay1' */
 715:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = false;
 1260              		.loc 1 715 3 view .LVU369
 1261              		.loc 1 715 30 is_stmt 0 view .LVU370
 1262 0000 0023     		movs	r3, #0
 1263 0002 4371     		strb	r3, [r0, #5]
 716:Src/BLDC_controller.c **** 
 717:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S67>/Resettable Delay' */
 718:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 1264              		.loc 1 718 3 is_stmt 1 view .LVU371
 1265              		.loc 1 718 19 is_stmt 0 view .LVU372
 1266 0004 0123     		movs	r3, #1
 1267 0006 0371     		strb	r3, [r0, #4]
 719:Src/BLDC_controller.c **** }
 1268              		.loc 1 719 1 view .LVU373
 1269 0008 7047     		bx	lr
 1270              		.cfi_endproc
 1271              	.LFE19:
 1273              		.section	.text.PI_clamp_fixdt_l,"ax",%progbits
 1274              		.align	1
 1275              		.global	PI_clamp_fixdt_l
 1276              		.syntax unified
 1277              		.thumb
 1278              		.thumb_func
 1280              	PI_clamp_fixdt_l:
 1281              	.LVL111:
 1282              	.LFB20:
 720:Src/BLDC_controller.c **** 
 721:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S61>/PI_clamp_fixdt' */
 722:Src/BLDC_controller.c **** void PI_clamp_fixdt_l(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I, int16_T
 723:Src/BLDC_controller.c ****                       rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 724:Src/BLDC_controller.c ****                       rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt_m
 725:Src/BLDC_controller.c ****                       *localDW)
 726:Src/BLDC_controller.c **** {
 1283              		.loc 1 726 1 is_stmt 1 view -0
 1284              		.cfi_startproc
 1285              		@ args = 20, pretend = 0, frame = 0
 1286              		@ frame_needed = 0, uses_anonymous_args = 0
 1287              		.loc 1 726 1 is_stmt 0 view .LVU375
 1288 0000 70B5     		push	{r4, r5, r6, lr}
 1289              	.LCFI12:
 1290              		.cfi_def_cfa_offset 16
 1291              		.cfi_offset 4, -16
 1292              		.cfi_offset 5, -12
 1293              		.cfi_offset 6, -8
 1294              		.cfi_offset 14, -4
 1295 0002 BDF910E0 		ldrsh	lr, [sp, #16]
 1296 0006 BDF91460 		ldrsh	r6, [sp, #20]
 1297 000a 069D     		ldr	r5, [sp, #24]
 1298 000c 089C     		ldr	r4, [sp, #32]
 727:Src/BLDC_controller.c ****   boolean_T rtb_LowerRelop1_l;
ARM GAS  /tmp/cccGHnrd.s 			page 37


 1299              		.loc 1 727 3 is_stmt 1 view .LVU376
 728:Src/BLDC_controller.c ****   boolean_T rtb_UpperRelop_l;
 1300              		.loc 1 728 3 view .LVU377
 729:Src/BLDC_controller.c ****   int32_T rtb_Sum1_ni;
 1301              		.loc 1 729 3 view .LVU378
 730:Src/BLDC_controller.c ****   int32_T q0;
 1302              		.loc 1 730 3 view .LVU379
 731:Src/BLDC_controller.c ****   int32_T tmp;
 1303              		.loc 1 731 3 view .LVU380
 732:Src/BLDC_controller.c ****   int16_T tmp_0;
 1304              		.loc 1 732 3 view .LVU381
 733:Src/BLDC_controller.c **** 
 734:Src/BLDC_controller.c ****   /* Sum: '<S65>/Sum2' incorporates:
 735:Src/BLDC_controller.c ****    *  Product: '<S65>/Divide2'
 736:Src/BLDC_controller.c ****    */
 737:Src/BLDC_controller.c ****   q0 = rtu_err * rtu_I;
 1305              		.loc 1 737 3 view .LVU382
 1306              		.loc 1 737 6 is_stmt 0 view .LVU383
 1307 000e 00FB02F2 		mul	r2, r0, r2
 1308              	.LVL112:
 738:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 1309              		.loc 1 738 3 is_stmt 1 view .LVU384
 1310              		.loc 1 738 6 is_stmt 0 view .LVU385
 1311 0012 002A     		cmp	r2, #0
 1312 0014 0ADB     		blt	.L128
 739:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
 740:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1313              		.loc 1 740 10 is_stmt 1 view .LVU386
 1314              		.loc 1 740 13 is_stmt 0 view .LVU387
 1315 0016 002A     		cmp	r2, #0
 1316 0018 0CDD     		ble	.L104
 1317              		.loc 1 740 57 discriminator 1 view .LVU388
 1318 001a 6FF0004C 		mvn	ip, #-2147483648
 1319 001e ACEB020C 		sub	ip, ip, r2
 1320              		.loc 1 740 23 discriminator 1 view .LVU389
 1321 0022 AC45     		cmp	ip, r5
 1322 0024 06DA     		bge	.L104
 741:Src/BLDC_controller.c ****     q0 = MAX_int32_T;
 1323              		.loc 1 741 8 view .LVU390
 1324 0026 6FF0004C 		mvn	ip, #-2147483648
 1325 002a 05E0     		b	.L103
 1326              	.L128:
 738:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 1327              		.loc 1 738 50 discriminator 1 view .LVU391
 1328 002c C2F1004C 		rsb	ip, r2, #-2147483648
 738:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 1329              		.loc 1 738 16 discriminator 1 view .LVU392
 1330 0030 AC45     		cmp	ip, r5
 1331 0032 15DC     		bgt	.L115
 1332              	.L104:
 742:Src/BLDC_controller.c ****   } else {
 743:Src/BLDC_controller.c ****     q0 += rtu_ext_limProt;
 1333              		.loc 1 743 5 is_stmt 1 view .LVU393
 1334              		.loc 1 743 8 is_stmt 0 view .LVU394
 1335 0034 02EB050C 		add	ip, r2, r5
 1336              	.LVL113:
 1337              	.L103:
ARM GAS  /tmp/cccGHnrd.s 			page 38


 744:Src/BLDC_controller.c ****   }
 745:Src/BLDC_controller.c **** 
 746:Src/BLDC_controller.c ****   /* Delay: '<S67>/Resettable Delay' */
 747:Src/BLDC_controller.c ****   if (localDW->icLoad != 0) {
 1338              		.loc 1 747 3 is_stmt 1 view .LVU395
 1339              		.loc 1 747 14 is_stmt 0 view .LVU396
 1340 0038 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 1341              		.loc 1 747 6 view .LVU397
 1342 003a 0AB1     		cbz	r2, .L105
 748:Src/BLDC_controller.c ****     localDW->ResettableDelay_DSTATE = rtu_init << 16;
 1343              		.loc 1 748 5 is_stmt 1 view .LVU398
 1344              		.loc 1 748 48 is_stmt 0 view .LVU399
 1345 003c 1B04     		lsls	r3, r3, #16
 1346              	.LVL114:
 1347              		.loc 1 748 37 view .LVU400
 1348 003e 2360     		str	r3, [r4]
 1349              	.L105:
 749:Src/BLDC_controller.c ****   }
 750:Src/BLDC_controller.c **** 
 751:Src/BLDC_controller.c ****   /* Switch: '<S65>/Switch1' incorporates:
 752:Src/BLDC_controller.c ****    *  Constant: '<S65>/Constant'
 753:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum2'
 754:Src/BLDC_controller.c ****    *  UnitDelay: '<S65>/UnitDelay1'
 755:Src/BLDC_controller.c ****    */
 756:Src/BLDC_controller.c ****   if (localDW->UnitDelay1_DSTATE) {
 1350              		.loc 1 756 3 is_stmt 1 view .LVU401
 1351              		.loc 1 756 14 is_stmt 0 view .LVU402
 1352 0040 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 1353              		.loc 1 756 6 view .LVU403
 1354 0042 83B1     		cbz	r3, .L117
 757:Src/BLDC_controller.c ****     tmp = 0;
 1355              		.loc 1 757 9 view .LVU404
 1356 0044 0023     		movs	r3, #0
 1357              	.L106:
 1358              	.LVL115:
 758:Src/BLDC_controller.c ****   } else {
 759:Src/BLDC_controller.c ****     tmp = q0;
 760:Src/BLDC_controller.c ****   }
 761:Src/BLDC_controller.c **** 
 762:Src/BLDC_controller.c ****   /* End of Switch: '<S65>/Switch1' */
 763:Src/BLDC_controller.c **** 
 764:Src/BLDC_controller.c ****   /* Sum: '<S67>/Sum1' incorporates:
 765:Src/BLDC_controller.c ****    *  Delay: '<S67>/Resettable Delay'
 766:Src/BLDC_controller.c ****    */
 767:Src/BLDC_controller.c ****   rtb_Sum1_ni = tmp + localDW->ResettableDelay_DSTATE;
 1359              		.loc 1 767 3 is_stmt 1 view .LVU405
 1360              		.loc 1 767 30 is_stmt 0 view .LVU406
 1361 0046 2568     		ldr	r5, [r4]
 1362              		.loc 1 767 15 view .LVU407
 1363 0048 1D44     		add	r5, r5, r3
 1364              	.LVL116:
 768:Src/BLDC_controller.c **** 
 769:Src/BLDC_controller.c ****   /* Product: '<S65>/Divide5' */
 770:Src/BLDC_controller.c ****   tmp = (rtu_err * rtu_P) >> 11;
 1365              		.loc 1 770 3 is_stmt 1 view .LVU408
 1366              		.loc 1 770 18 is_stmt 0 view .LVU409
 1367 004a 00FB01F1 		mul	r1, r0, r1
ARM GAS  /tmp/cccGHnrd.s 			page 39


 1368              	.LVL117:
 1369              		.loc 1 770 7 view .LVU410
 1370 004e CB12     		asrs	r3, r1, #11
 1371              	.LVL118:
 771:Src/BLDC_controller.c ****   if (tmp > 32767) {
 1372              		.loc 1 771 3 is_stmt 1 view .LVU411
 1373              		.loc 1 771 6 is_stmt 0 view .LVU412
 1374 0050 B1F1806F 		cmp	r1, #67108864
 1375 0054 09DA     		bge	.L118
 772:Src/BLDC_controller.c ****     tmp = 32767;
 773:Src/BLDC_controller.c ****   } else {
 774:Src/BLDC_controller.c ****     if (tmp < -32768) {
 1376              		.loc 1 774 5 is_stmt 1 view .LVU413
 1377              		.loc 1 774 8 is_stmt 0 view .LVU414
 1378 0056 13F5004F 		cmn	r3, #32768
 1379 005a 08DA     		bge	.L107
 775:Src/BLDC_controller.c ****       tmp = -32768;
 1380              		.loc 1 775 11 view .LVU415
 1381 005c 254B     		ldr	r3, .L130
 1382              	.LVL119:
 1383              		.loc 1 775 11 view .LVU416
 1384 005e 06E0     		b	.L107
 1385              	.LVL120:
 1386              	.L115:
 739:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1387              		.loc 1 739 8 view .LVU417
 1388 0060 4FF0004C 		mov	ip, #-2147483648
 1389 0064 E8E7     		b	.L103
 1390              	.LVL121:
 1391              	.L117:
 759:Src/BLDC_controller.c ****   }
 1392              		.loc 1 759 9 view .LVU418
 1393 0066 6346     		mov	r3, ip
 1394 0068 EDE7     		b	.L106
 1395              	.LVL122:
 1396              	.L118:
 772:Src/BLDC_controller.c ****   } else {
 1397              		.loc 1 772 9 view .LVU419
 1398 006a 47F6FF73 		movw	r3, #32767
 1399              	.LVL123:
 1400              	.L107:
 776:Src/BLDC_controller.c ****     }
 777:Src/BLDC_controller.c ****   }
 778:Src/BLDC_controller.c **** 
 779:Src/BLDC_controller.c ****   /* Sum: '<S65>/Sum1' incorporates:
 780:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S67>/Data Type Conversion1'
 781:Src/BLDC_controller.c ****    *  Product: '<S65>/Divide5'
 782:Src/BLDC_controller.c ****    */
 783:Src/BLDC_controller.c ****   tmp = (((rtb_Sum1_ni >> 16) << 1) + tmp) >> 1;
 1401              		.loc 1 783 3 is_stmt 1 view .LVU420
 1402              		.loc 1 783 24 is_stmt 0 view .LVU421
 1403 006e 2A14     		asrs	r2, r5, #16
 1404              		.loc 1 783 37 view .LVU422
 1405 0070 03EB4202 		add	r2, r3, r2, lsl #1
 1406              		.loc 1 783 7 view .LVU423
 1407 0074 5310     		asrs	r3, r2, #1
 1408              	.LVL124:
ARM GAS  /tmp/cccGHnrd.s 			page 40


 784:Src/BLDC_controller.c ****   if (tmp > 32767) {
 1409              		.loc 1 784 3 is_stmt 1 view .LVU424
 1410              		.loc 1 784 6 is_stmt 0 view .LVU425
 1411 0076 B2F5803F 		cmp	r2, #65536
 1412 007a 04DA     		bge	.L120
 785:Src/BLDC_controller.c ****     tmp = 32767;
 786:Src/BLDC_controller.c ****   } else {
 787:Src/BLDC_controller.c ****     if (tmp < -32768) {
 1413              		.loc 1 787 5 is_stmt 1 view .LVU426
 1414              		.loc 1 787 8 is_stmt 0 view .LVU427
 1415 007c 13F5004F 		cmn	r3, #32768
 1416 0080 03DA     		bge	.L108
 788:Src/BLDC_controller.c ****       tmp = -32768;
 1417              		.loc 1 788 11 view .LVU428
 1418 0082 1C4B     		ldr	r3, .L130
 1419              	.LVL125:
 1420              		.loc 1 788 11 view .LVU429
 1421 0084 01E0     		b	.L108
 1422              	.LVL126:
 1423              	.L120:
 785:Src/BLDC_controller.c ****     tmp = 32767;
 1424              		.loc 1 785 9 view .LVU430
 1425 0086 47F6FF73 		movw	r3, #32767
 1426              	.LVL127:
 1427              	.L108:
 789:Src/BLDC_controller.c ****     }
 790:Src/BLDC_controller.c ****   }
 791:Src/BLDC_controller.c **** 
 792:Src/BLDC_controller.c ****   /* RelationalOperator: '<S68>/LowerRelop1' incorporates:
 793:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum1'
 794:Src/BLDC_controller.c ****    */
 795:Src/BLDC_controller.c ****   rtb_LowerRelop1_l = ((int16_T)tmp > rtu_satMax);
 1428              		.loc 1 795 3 is_stmt 1 view .LVU431
 1429              		.loc 1 795 24 is_stmt 0 view .LVU432
 1430 008a 1BB2     		sxth	r3, r3
 1431              	.LVL128:
 796:Src/BLDC_controller.c **** 
 797:Src/BLDC_controller.c ****   /* RelationalOperator: '<S68>/UpperRelop' incorporates:
 798:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum1'
 799:Src/BLDC_controller.c ****    */
 800:Src/BLDC_controller.c ****   rtb_UpperRelop_l = ((int16_T)tmp < rtu_satMin);
 1432              		.loc 1 800 3 is_stmt 1 view .LVU433
 801:Src/BLDC_controller.c **** 
 802:Src/BLDC_controller.c ****   /* Switch: '<S68>/Switch1' incorporates:
 803:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum1'
 804:Src/BLDC_controller.c ****    *  Switch: '<S68>/Switch3'
 805:Src/BLDC_controller.c ****    */
 806:Src/BLDC_controller.c ****   if (rtb_LowerRelop1_l) {
 1433              		.loc 1 806 3 view .LVU434
 1434              		.loc 1 806 6 is_stmt 0 view .LVU435
 1435 008c 7345     		cmp	r3, lr
 1436 008e 18DD     		ble	.L109
 807:Src/BLDC_controller.c ****     *rty_out = rtu_satMax;
 1437              		.loc 1 807 5 is_stmt 1 view .LVU436
 1438              		.loc 1 807 14 is_stmt 0 view .LVU437
 1439 0090 079A     		ldr	r2, [sp, #28]
 1440 0092 A2F800E0 		strh	lr, [r2]	@ movhi
ARM GAS  /tmp/cccGHnrd.s 			page 41


 1441              	.L110:
 808:Src/BLDC_controller.c ****   } else if (rtb_UpperRelop_l) {
 809:Src/BLDC_controller.c ****     /* Switch: '<S68>/Switch3' */
 810:Src/BLDC_controller.c ****     *rty_out = rtu_satMin;
 811:Src/BLDC_controller.c ****   } else {
 812:Src/BLDC_controller.c ****     *rty_out = (int16_T)tmp;
 813:Src/BLDC_controller.c ****   }
 814:Src/BLDC_controller.c **** 
 815:Src/BLDC_controller.c ****   /* End of Switch: '<S68>/Switch1' */
 816:Src/BLDC_controller.c **** 
 817:Src/BLDC_controller.c ****   /* Signum: '<S66>/SignDeltaU2' incorporates:
 818:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum2'
 819:Src/BLDC_controller.c ****    */
 820:Src/BLDC_controller.c ****   if (q0 < 0) {
 1442              		.loc 1 820 3 is_stmt 1 view .LVU438
 1443              		.loc 1 820 6 is_stmt 0 view .LVU439
 1444 0096 BCF1000F 		cmp	ip, #0
 1445 009a 1ADB     		blt	.L122
 821:Src/BLDC_controller.c ****     q0 = -1;
 822:Src/BLDC_controller.c ****   } else {
 823:Src/BLDC_controller.c ****     q0 = (q0 > 0);
 1446              		.loc 1 823 5 is_stmt 1 view .LVU440
 1447              		.loc 1 823 14 is_stmt 0 view .LVU441
 1448 009c BCF1000F 		cmp	ip, #0
 1449 00a0 D4BF     		ite	le
 1450 00a2 0022     		movle	r2, #0
 1451 00a4 0122     		movgt	r2, #1
 1452              	.LVL129:
 1453              	.L112:
 824:Src/BLDC_controller.c ****   }
 825:Src/BLDC_controller.c **** 
 826:Src/BLDC_controller.c ****   /* End of Signum: '<S66>/SignDeltaU2' */
 827:Src/BLDC_controller.c **** 
 828:Src/BLDC_controller.c ****   /* Signum: '<S66>/SignDeltaU3' incorporates:
 829:Src/BLDC_controller.c ****    *  Sum: '<S65>/Sum1'
 830:Src/BLDC_controller.c ****    */
 831:Src/BLDC_controller.c ****   if ((int16_T)tmp < 0) {
 1454              		.loc 1 831 3 is_stmt 1 view .LVU442
 1455              		.loc 1 831 6 is_stmt 0 view .LVU443
 1456 00a6 002B     		cmp	r3, #0
 1457 00a8 16DB     		blt	.L123
 832:Src/BLDC_controller.c ****     tmp_0 = -1;
 833:Src/BLDC_controller.c ****   } else {
 834:Src/BLDC_controller.c ****     tmp_0 = (int16_T)((int16_T)tmp > 0);
 1458              		.loc 1 834 5 is_stmt 1 view .LVU444
 1459              		.loc 1 834 11 is_stmt 0 view .LVU445
 1460 00aa 002B     		cmp	r3, #0
 1461 00ac D4BF     		ite	le
 1462 00ae 0021     		movle	r1, #0
 1463 00b0 0121     		movgt	r1, #1
 1464              	.LVL130:
 1465              	.L113:
 835:Src/BLDC_controller.c ****   }
 836:Src/BLDC_controller.c **** 
 837:Src/BLDC_controller.c ****   /* End of Signum: '<S66>/SignDeltaU3' */
 838:Src/BLDC_controller.c **** 
 839:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S65>/UnitDelay1' incorporates:
ARM GAS  /tmp/cccGHnrd.s 			page 42


 840:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S66>/DataTypeConv4'
 841:Src/BLDC_controller.c ****    *  Logic: '<S65>/AND1'
 842:Src/BLDC_controller.c ****    *  Logic: '<S66>/AND1'
 843:Src/BLDC_controller.c ****    *  RelationalOperator: '<S66>/Equal1'
 844:Src/BLDC_controller.c ****    */
 845:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = ((q0 == tmp_0) && (rtb_LowerRelop1_l ||
 1466              		.loc 1 845 3 is_stmt 1 view .LVU446
 1467              		.loc 1 845 47 is_stmt 0 view .LVU447
 1468 00b2 9142     		cmp	r1, r2
 1469 00b4 13D0     		beq	.L129
 1470              		.loc 1 845 47 discriminator 6 view .LVU448
 1471 00b6 0023     		movs	r3, #0
 1472              	.LVL131:
 1473              	.L114:
 1474              		.loc 1 845 30 discriminator 8 view .LVU449
 1475 00b8 6371     		strb	r3, [r4, #5]
 846:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 847:Src/BLDC_controller.c **** 
 848:Src/BLDC_controller.c ****   /* Update for Delay: '<S67>/Resettable Delay' */
 849:Src/BLDC_controller.c ****   localDW->icLoad = 0U;
 1476              		.loc 1 849 3 is_stmt 1 view .LVU450
 1477              		.loc 1 849 19 is_stmt 0 view .LVU451
 1478 00ba 0023     		movs	r3, #0
 1479 00bc 2371     		strb	r3, [r4, #4]
 850:Src/BLDC_controller.c ****   localDW->ResettableDelay_DSTATE = rtb_Sum1_ni;
 1480              		.loc 1 850 3 is_stmt 1 view .LVU452
 1481              		.loc 1 850 35 is_stmt 0 view .LVU453
 1482 00be 2560     		str	r5, [r4]
 851:Src/BLDC_controller.c **** }
 1483              		.loc 1 851 1 view .LVU454
 1484 00c0 70BD     		pop	{r4, r5, r6, pc}
 1485              	.LVL132:
 1486              	.L109:
 808:Src/BLDC_controller.c ****     /* Switch: '<S68>/Switch3' */
 1487              		.loc 1 808 10 is_stmt 1 view .LVU455
 808:Src/BLDC_controller.c ****     /* Switch: '<S68>/Switch3' */
 1488              		.loc 1 808 13 is_stmt 0 view .LVU456
 1489 00c2 B342     		cmp	r3, r6
 1490 00c4 02DA     		bge	.L111
 810:Src/BLDC_controller.c ****   } else {
 1491              		.loc 1 810 5 is_stmt 1 view .LVU457
 810:Src/BLDC_controller.c ****   } else {
 1492              		.loc 1 810 14 is_stmt 0 view .LVU458
 1493 00c6 079A     		ldr	r2, [sp, #28]
 1494 00c8 1680     		strh	r6, [r2]	@ movhi
 1495 00ca E4E7     		b	.L110
 1496              	.L111:
 812:Src/BLDC_controller.c ****   }
 1497              		.loc 1 812 5 is_stmt 1 view .LVU459
 812:Src/BLDC_controller.c ****   }
 1498              		.loc 1 812 14 is_stmt 0 view .LVU460
 1499 00cc 079A     		ldr	r2, [sp, #28]
 1500 00ce 1380     		strh	r3, [r2]	@ movhi
 1501 00d0 E1E7     		b	.L110
 1502              	.L122:
 821:Src/BLDC_controller.c ****   } else {
 1503              		.loc 1 821 8 view .LVU461
ARM GAS  /tmp/cccGHnrd.s 			page 43


 1504 00d2 4FF0FF32 		mov	r2, #-1
 1505 00d6 E6E7     		b	.L112
 1506              	.LVL133:
 1507              	.L123:
 832:Src/BLDC_controller.c ****   } else {
 1508              		.loc 1 832 11 view .LVU462
 1509 00d8 4FF0FF31 		mov	r1, #-1
 1510 00dc E9E7     		b	.L113
 1511              	.LVL134:
 1512              	.L129:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1513              		.loc 1 845 47 discriminator 1 view .LVU463
 1514 00de 7345     		cmp	r3, lr
 1515 00e0 03DC     		bgt	.L125
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1516              		.loc 1 845 69 discriminator 4 view .LVU464
 1517 00e2 B342     		cmp	r3, r6
 1518 00e4 03DB     		blt	.L126
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1519              		.loc 1 845 47 discriminator 6 view .LVU465
 1520 00e6 0023     		movs	r3, #0
 1521              	.LVL135:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1522              		.loc 1 845 47 discriminator 6 view .LVU466
 1523 00e8 E6E7     		b	.L114
 1524              	.LVL136:
 1525              	.L125:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1526              		.loc 1 845 47 discriminator 5 view .LVU467
 1527 00ea 0123     		movs	r3, #1
 1528              	.LVL137:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1529              		.loc 1 845 47 discriminator 5 view .LVU468
 1530 00ec E4E7     		b	.L114
 1531              	.LVL138:
 1532              	.L126:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1533              		.loc 1 845 47 discriminator 5 view .LVU469
 1534 00ee 0123     		movs	r3, #1
 1535              	.LVL139:
 845:Src/BLDC_controller.c ****     rtb_UpperRelop_l));
 1536              		.loc 1 845 47 discriminator 5 view .LVU470
 1537 00f0 E2E7     		b	.L114
 1538              	.L131:
 1539 00f2 00BF     		.align	2
 1540              	.L130:
 1541 00f4 0080FFFF 		.word	-32768
 1542              		.cfi_endproc
 1543              	.LFE20:
 1545              		.section	.text.PI_clamp_fixdt_f_Init,"ax",%progbits
 1546              		.align	1
 1547              		.global	PI_clamp_fixdt_f_Init
 1548              		.syntax unified
 1549              		.thumb
 1550              		.thumb_func
 1552              	PI_clamp_fixdt_f_Init:
 1553              	.LVL140:
ARM GAS  /tmp/cccGHnrd.s 			page 44


 1554              	.LFB21:
 852:Src/BLDC_controller.c **** 
 853:Src/BLDC_controller.c **** /* System initialize for atomic system: '<S62>/PI_clamp_fixdt' */
 854:Src/BLDC_controller.c **** void PI_clamp_fixdt_f_Init(DW_PI_clamp_fixdt_g *localDW)
 855:Src/BLDC_controller.c **** {
 1555              		.loc 1 855 1 is_stmt 1 view -0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559              		@ link register save eliminated.
 856:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S72>/Resettable Delay' */
 857:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 1560              		.loc 1 857 3 view .LVU472
 1561              		.loc 1 857 19 is_stmt 0 view .LVU473
 1562 0000 0123     		movs	r3, #1
 1563 0002 8370     		strb	r3, [r0, #2]
 858:Src/BLDC_controller.c **** }
 1564              		.loc 1 858 1 view .LVU474
 1565 0004 7047     		bx	lr
 1566              		.cfi_endproc
 1567              	.LFE21:
 1569              		.section	.text.PI_clamp_fixdt_g_Reset,"ax",%progbits
 1570              		.align	1
 1571              		.global	PI_clamp_fixdt_g_Reset
 1572              		.syntax unified
 1573              		.thumb
 1574              		.thumb_func
 1576              	PI_clamp_fixdt_g_Reset:
 1577              	.LVL141:
 1578              	.LFB22:
 859:Src/BLDC_controller.c **** 
 860:Src/BLDC_controller.c **** /* System reset for atomic system: '<S62>/PI_clamp_fixdt' */
 861:Src/BLDC_controller.c **** void PI_clamp_fixdt_g_Reset(DW_PI_clamp_fixdt_g *localDW)
 862:Src/BLDC_controller.c **** {
 1579              		.loc 1 862 1 is_stmt 1 view -0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583              		@ link register save eliminated.
 863:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S69>/UnitDelay1' */
 864:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = false;
 1584              		.loc 1 864 3 view .LVU476
 1585              		.loc 1 864 30 is_stmt 0 view .LVU477
 1586 0000 0023     		movs	r3, #0
 1587 0002 C370     		strb	r3, [r0, #3]
 865:Src/BLDC_controller.c **** 
 866:Src/BLDC_controller.c ****   /* InitializeConditions for Delay: '<S72>/Resettable Delay' */
 867:Src/BLDC_controller.c ****   localDW->icLoad = 1U;
 1588              		.loc 1 867 3 is_stmt 1 view .LVU478
 1589              		.loc 1 867 19 is_stmt 0 view .LVU479
 1590 0004 0123     		movs	r3, #1
 1591 0006 8370     		strb	r3, [r0, #2]
 868:Src/BLDC_controller.c **** }
 1592              		.loc 1 868 1 view .LVU480
 1593 0008 7047     		bx	lr
 1594              		.cfi_endproc
 1595              	.LFE22:
ARM GAS  /tmp/cccGHnrd.s 			page 45


 1597              		.section	.text.PI_clamp_fixdt_k,"ax",%progbits
 1598              		.align	1
 1599              		.global	PI_clamp_fixdt_k
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1604              	PI_clamp_fixdt_k:
 1605              	.LVL142:
 1606              	.LFB23:
 869:Src/BLDC_controller.c **** 
 870:Src/BLDC_controller.c **** /* Output and update for atomic system: '<S62>/PI_clamp_fixdt' */
 871:Src/BLDC_controller.c **** void PI_clamp_fixdt_k(int16_T rtu_err, uint16_T rtu_P, uint16_T rtu_I, int16_T
 872:Src/BLDC_controller.c ****                       rtu_init, int16_T rtu_satMax, int16_T rtu_satMin, int32_T
 873:Src/BLDC_controller.c ****                       rtu_ext_limProt, int16_T *rty_out, DW_PI_clamp_fixdt_g
 874:Src/BLDC_controller.c ****                       *localDW)
 875:Src/BLDC_controller.c **** {
 1607              		.loc 1 875 1 is_stmt 1 view -0
 1608              		.cfi_startproc
 1609              		@ args = 20, pretend = 0, frame = 0
 1610              		@ frame_needed = 0, uses_anonymous_args = 0
 1611              		.loc 1 875 1 is_stmt 0 view .LVU482
 1612 0000 70B5     		push	{r4, r5, r6, lr}
 1613              	.LCFI13:
 1614              		.cfi_def_cfa_offset 16
 1615              		.cfi_offset 4, -16
 1616              		.cfi_offset 5, -12
 1617              		.cfi_offset 6, -8
 1618              		.cfi_offset 14, -4
 1619 0002 BDF910E0 		ldrsh	lr, [sp, #16]
 1620 0006 BDF91450 		ldrsh	r5, [sp, #20]
 1621 000a 069E     		ldr	r6, [sp, #24]
 1622 000c 089C     		ldr	r4, [sp, #32]
 876:Src/BLDC_controller.c ****   boolean_T rtb_LowerRelop1_i3;
 1623              		.loc 1 876 3 is_stmt 1 view .LVU483
 877:Src/BLDC_controller.c ****   boolean_T rtb_UpperRelop_i;
 1624              		.loc 1 877 3 view .LVU484
 878:Src/BLDC_controller.c ****   int16_T rtb_Sum1_bm;
 1625              		.loc 1 878 3 view .LVU485
 879:Src/BLDC_controller.c ****   int16_T tmp;
 1626              		.loc 1 879 3 view .LVU486
 880:Src/BLDC_controller.c ****   int32_T tmp_0;
 1627              		.loc 1 880 3 view .LVU487
 881:Src/BLDC_controller.c ****   int32_T q0;
 1628              		.loc 1 881 3 view .LVU488
 882:Src/BLDC_controller.c **** 
 883:Src/BLDC_controller.c ****   /* Sum: '<S69>/Sum2' incorporates:
 884:Src/BLDC_controller.c ****    *  Product: '<S69>/Divide2'
 885:Src/BLDC_controller.c ****    */
 886:Src/BLDC_controller.c ****   q0 = rtu_err * rtu_I;
 1629              		.loc 1 886 3 view .LVU489
 1630              		.loc 1 886 6 is_stmt 0 view .LVU490
 1631 000e 00FB02F2 		mul	r2, r0, r2
 1632              	.LVL143:
 887:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 1633              		.loc 1 887 3 is_stmt 1 view .LVU491
 1634              		.loc 1 887 6 is_stmt 0 view .LVU492
 1635 0012 002A     		cmp	r2, #0
ARM GAS  /tmp/cccGHnrd.s 			page 46


 1636 0014 0ADB     		blt	.L163
 888:Src/BLDC_controller.c ****     q0 = MIN_int32_T;
 889:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1637              		.loc 1 889 10 is_stmt 1 view .LVU493
 1638              		.loc 1 889 13 is_stmt 0 view .LVU494
 1639 0016 002A     		cmp	r2, #0
 1640 0018 0CDD     		ble	.L137
 1641              		.loc 1 889 57 discriminator 1 view .LVU495
 1642 001a 6FF0004C 		mvn	ip, #-2147483648
 1643 001e ACEB020C 		sub	ip, ip, r2
 1644              		.loc 1 889 23 discriminator 1 view .LVU496
 1645 0022 B445     		cmp	ip, r6
 1646 0024 06DA     		bge	.L137
 890:Src/BLDC_controller.c ****     q0 = MAX_int32_T;
 1647              		.loc 1 890 8 view .LVU497
 1648 0026 6FF0004C 		mvn	ip, #-2147483648
 1649 002a 05E0     		b	.L136
 1650              	.L163:
 887:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 1651              		.loc 1 887 50 discriminator 1 view .LVU498
 1652 002c C2F1004C 		rsb	ip, r2, #-2147483648
 887:Src/BLDC_controller.c ****   if ((q0 < 0) && (rtu_ext_limProt < MIN_int32_T - q0)) {
 1653              		.loc 1 887 16 discriminator 1 view .LVU499
 1654 0030 B445     		cmp	ip, r6
 1655 0032 0DDC     		bgt	.L149
 1656              	.L137:
 891:Src/BLDC_controller.c ****   } else {
 892:Src/BLDC_controller.c ****     q0 += rtu_ext_limProt;
 1657              		.loc 1 892 5 is_stmt 1 view .LVU500
 1658              		.loc 1 892 8 is_stmt 0 view .LVU501
 1659 0034 02EB060C 		add	ip, r2, r6
 1660              	.LVL144:
 1661              	.L136:
 893:Src/BLDC_controller.c ****   }
 894:Src/BLDC_controller.c **** 
 895:Src/BLDC_controller.c ****   /* Delay: '<S72>/Resettable Delay' */
 896:Src/BLDC_controller.c ****   if (localDW->icLoad != 0) {
 1662              		.loc 1 896 3 is_stmt 1 view .LVU502
 1663              		.loc 1 896 14 is_stmt 0 view .LVU503
 1664 0038 A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 1665              		.loc 1 896 6 view .LVU504
 1666 003a 02B1     		cbz	r2, .L138
 897:Src/BLDC_controller.c ****     localDW->ResettableDelay_DSTATE = rtu_init;
 1667              		.loc 1 897 5 is_stmt 1 view .LVU505
 1668              		.loc 1 897 37 is_stmt 0 view .LVU506
 1669 003c 2380     		strh	r3, [r4]	@ movhi
 1670              	.L138:
 898:Src/BLDC_controller.c ****   }
 899:Src/BLDC_controller.c **** 
 900:Src/BLDC_controller.c ****   /* Switch: '<S69>/Switch1' incorporates:
 901:Src/BLDC_controller.c ****    *  Constant: '<S69>/Constant'
 902:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum2'
 903:Src/BLDC_controller.c ****    *  UnitDelay: '<S69>/UnitDelay1'
 904:Src/BLDC_controller.c ****    */
 905:Src/BLDC_controller.c ****   if (localDW->UnitDelay1_DSTATE) {
 1671              		.loc 1 905 3 is_stmt 1 view .LVU507
 1672              		.loc 1 905 14 is_stmt 0 view .LVU508
ARM GAS  /tmp/cccGHnrd.s 			page 47


 1673 003e E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 1674              	.LVL145:
 1675              		.loc 1 905 6 view .LVU509
 1676 0040 63B9     		cbnz	r3, .L151
 906:Src/BLDC_controller.c ****     tmp = 0;
 907:Src/BLDC_controller.c ****   } else {
 908:Src/BLDC_controller.c ****     tmp = (int16_T)(((q0 < 0 ? 65535 : 0) + q0) >> 16);
 1677              		.loc 1 908 5 is_stmt 1 view .LVU510
 1678              		.loc 1 908 38 is_stmt 0 view .LVU511
 1679 0042 BCF1000F 		cmp	ip, #0
 1680 0046 06DB     		blt	.L164
 1681              		.loc 1 908 38 discriminator 2 view .LVU512
 1682 0048 0023     		movs	r3, #0
 1683              	.L140:
 1684              		.loc 1 908 43 discriminator 4 view .LVU513
 1685 004a 6344     		add	r3, r3, ip
 1686              		.loc 1 908 9 discriminator 4 view .LVU514
 1687 004c 1B14     		asrs	r3, r3, #16
 1688              	.LVL146:
 1689              		.loc 1 908 9 discriminator 4 view .LVU515
 1690 004e 06E0     		b	.L139
 1691              	.LVL147:
 1692              	.L149:
 888:Src/BLDC_controller.c ****   } else if ((q0 > 0) && (rtu_ext_limProt > MAX_int32_T - q0)) {
 1693              		.loc 1 888 8 view .LVU516
 1694 0050 4FF0004C 		mov	ip, #-2147483648
 1695 0054 F0E7     		b	.L136
 1696              	.LVL148:
 1697              	.L164:
 1698              		.loc 1 908 38 discriminator 1 view .LVU517
 1699 0056 4FF6FF73 		movw	r3, #65535
 1700 005a F6E7     		b	.L140
 1701              	.L151:
 906:Src/BLDC_controller.c ****     tmp = 0;
 1702              		.loc 1 906 9 view .LVU518
 1703 005c 0023     		movs	r3, #0
 1704              	.L139:
 1705              	.LVL149:
 909:Src/BLDC_controller.c ****   }
 910:Src/BLDC_controller.c **** 
 911:Src/BLDC_controller.c ****   /* End of Switch: '<S69>/Switch1' */
 912:Src/BLDC_controller.c **** 
 913:Src/BLDC_controller.c ****   /* Sum: '<S72>/Sum1' incorporates:
 914:Src/BLDC_controller.c ****    *  Delay: '<S72>/Resettable Delay'
 915:Src/BLDC_controller.c ****    */
 916:Src/BLDC_controller.c ****   rtb_Sum1_bm = (int16_T)(tmp + localDW->ResettableDelay_DSTATE);
 1706              		.loc 1 916 3 is_stmt 1 view .LVU519
 1707              		.loc 1 916 40 is_stmt 0 view .LVU520
 1708 005e 2288     		ldrh	r2, [r4]
 1709              		.loc 1 916 31 view .LVU521
 1710 0060 1A44     		add	r2, r2, r3
 1711              		.loc 1 916 15 view .LVU522
 1712 0062 12B2     		sxth	r2, r2
 1713              	.LVL150:
 917:Src/BLDC_controller.c **** 
 918:Src/BLDC_controller.c ****   /* Product: '<S69>/Divide5' */
 919:Src/BLDC_controller.c ****   tmp_0 = (rtu_err * rtu_P) >> 11;
ARM GAS  /tmp/cccGHnrd.s 			page 48


 1714              		.loc 1 919 3 is_stmt 1 view .LVU523
 1715              		.loc 1 919 20 is_stmt 0 view .LVU524
 1716 0064 00FB01F1 		mul	r1, r0, r1
 1717              	.LVL151:
 1718              		.loc 1 919 9 view .LVU525
 1719 0068 CB12     		asrs	r3, r1, #11
 1720              	.LVL152:
 920:Src/BLDC_controller.c ****   if (tmp_0 > 32767) {
 1721              		.loc 1 920 3 is_stmt 1 view .LVU526
 1722              		.loc 1 920 6 is_stmt 0 view .LVU527
 1723 006a B1F1806F 		cmp	r1, #67108864
 1724 006e 04DA     		bge	.L153
 921:Src/BLDC_controller.c ****     tmp_0 = 32767;
 922:Src/BLDC_controller.c ****   } else {
 923:Src/BLDC_controller.c ****     if (tmp_0 < -32768) {
 1725              		.loc 1 923 5 is_stmt 1 view .LVU528
 1726              		.loc 1 923 8 is_stmt 0 view .LVU529
 1727 0070 13F5004F 		cmn	r3, #32768
 1728 0074 03DA     		bge	.L141
 924:Src/BLDC_controller.c ****       tmp_0 = -32768;
 1729              		.loc 1 924 13 view .LVU530
 1730 0076 234B     		ldr	r3, .L166
 1731              	.LVL153:
 1732              		.loc 1 924 13 view .LVU531
 1733 0078 01E0     		b	.L141
 1734              	.LVL154:
 1735              	.L153:
 921:Src/BLDC_controller.c ****     tmp_0 = 32767;
 1736              		.loc 1 921 11 view .LVU532
 1737 007a 47F6FF73 		movw	r3, #32767
 1738              	.LVL155:
 1739              	.L141:
 925:Src/BLDC_controller.c ****     }
 926:Src/BLDC_controller.c ****   }
 927:Src/BLDC_controller.c **** 
 928:Src/BLDC_controller.c ****   /* Sum: '<S69>/Sum1' incorporates:
 929:Src/BLDC_controller.c ****    *  Product: '<S69>/Divide5'
 930:Src/BLDC_controller.c ****    */
 931:Src/BLDC_controller.c ****   tmp_0 = ((rtb_Sum1_bm << 1) + tmp_0) >> 1;
 1740              		.loc 1 931 3 is_stmt 1 view .LVU533
 1741              		.loc 1 931 31 is_stmt 0 view .LVU534
 1742 007e 03EB4201 		add	r1, r3, r2, lsl #1
 1743              		.loc 1 931 9 view .LVU535
 1744 0082 4B10     		asrs	r3, r1, #1
 1745              	.LVL156:
 932:Src/BLDC_controller.c ****   if (tmp_0 > 32767) {
 1746              		.loc 1 932 3 is_stmt 1 view .LVU536
 1747              		.loc 1 932 6 is_stmt 0 view .LVU537
 1748 0084 B1F5803F 		cmp	r1, #65536
 1749 0088 04DA     		bge	.L155
 933:Src/BLDC_controller.c ****     tmp_0 = 32767;
 934:Src/BLDC_controller.c ****   } else {
 935:Src/BLDC_controller.c ****     if (tmp_0 < -32768) {
 1750              		.loc 1 935 5 is_stmt 1 view .LVU538
 1751              		.loc 1 935 8 is_stmt 0 view .LVU539
 1752 008a 13F5004F 		cmn	r3, #32768
 1753 008e 03DA     		bge	.L142
ARM GAS  /tmp/cccGHnrd.s 			page 49


 936:Src/BLDC_controller.c ****       tmp_0 = -32768;
 1754              		.loc 1 936 13 view .LVU540
 1755 0090 1C4B     		ldr	r3, .L166
 1756              	.LVL157:
 1757              		.loc 1 936 13 view .LVU541
 1758 0092 01E0     		b	.L142
 1759              	.LVL158:
 1760              	.L155:
 933:Src/BLDC_controller.c ****     tmp_0 = 32767;
 1761              		.loc 1 933 11 view .LVU542
 1762 0094 47F6FF73 		movw	r3, #32767
 1763              	.LVL159:
 1764              	.L142:
 937:Src/BLDC_controller.c ****     }
 938:Src/BLDC_controller.c ****   }
 939:Src/BLDC_controller.c **** 
 940:Src/BLDC_controller.c ****   /* RelationalOperator: '<S73>/LowerRelop1' incorporates:
 941:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum1'
 942:Src/BLDC_controller.c ****    */
 943:Src/BLDC_controller.c ****   rtb_LowerRelop1_i3 = ((int16_T)tmp_0 > rtu_satMax);
 1765              		.loc 1 943 3 is_stmt 1 view .LVU543
 1766              		.loc 1 943 25 is_stmt 0 view .LVU544
 1767 0098 1BB2     		sxth	r3, r3
 1768              	.LVL160:
 944:Src/BLDC_controller.c **** 
 945:Src/BLDC_controller.c ****   /* RelationalOperator: '<S73>/UpperRelop' incorporates:
 946:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum1'
 947:Src/BLDC_controller.c ****    */
 948:Src/BLDC_controller.c ****   rtb_UpperRelop_i = ((int16_T)tmp_0 < rtu_satMin);
 1769              		.loc 1 948 3 is_stmt 1 view .LVU545
 949:Src/BLDC_controller.c **** 
 950:Src/BLDC_controller.c ****   /* Switch: '<S73>/Switch1' incorporates:
 951:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum1'
 952:Src/BLDC_controller.c ****    *  Switch: '<S73>/Switch3'
 953:Src/BLDC_controller.c ****    */
 954:Src/BLDC_controller.c ****   if (rtb_LowerRelop1_i3) {
 1770              		.loc 1 954 3 view .LVU546
 1771              		.loc 1 954 6 is_stmt 0 view .LVU547
 1772 009a 7345     		cmp	r3, lr
 1773 009c 1ADD     		ble	.L143
 955:Src/BLDC_controller.c ****     *rty_out = rtu_satMax;
 1774              		.loc 1 955 5 is_stmt 1 view .LVU548
 1775              		.loc 1 955 14 is_stmt 0 view .LVU549
 1776 009e 0799     		ldr	r1, [sp, #28]
 1777 00a0 A1F800E0 		strh	lr, [r1]	@ movhi
 1778              	.L144:
 956:Src/BLDC_controller.c ****   } else if (rtb_UpperRelop_i) {
 957:Src/BLDC_controller.c ****     /* Switch: '<S73>/Switch3' */
 958:Src/BLDC_controller.c ****     *rty_out = rtu_satMin;
 959:Src/BLDC_controller.c ****   } else {
 960:Src/BLDC_controller.c ****     *rty_out = (int16_T)tmp_0;
 961:Src/BLDC_controller.c ****   }
 962:Src/BLDC_controller.c **** 
 963:Src/BLDC_controller.c ****   /* End of Switch: '<S73>/Switch1' */
 964:Src/BLDC_controller.c **** 
 965:Src/BLDC_controller.c ****   /* Signum: '<S71>/SignDeltaU2' incorporates:
 966:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum2'
ARM GAS  /tmp/cccGHnrd.s 			page 50


 967:Src/BLDC_controller.c ****    */
 968:Src/BLDC_controller.c ****   if (q0 < 0) {
 1779              		.loc 1 968 3 is_stmt 1 view .LVU550
 1780              		.loc 1 968 6 is_stmt 0 view .LVU551
 1781 00a4 BCF1000F 		cmp	ip, #0
 1782 00a8 1CDB     		blt	.L157
 969:Src/BLDC_controller.c ****     q0 = -1;
 970:Src/BLDC_controller.c ****   } else {
 971:Src/BLDC_controller.c ****     q0 = (q0 > 0);
 1783              		.loc 1 971 5 is_stmt 1 view .LVU552
 1784              		.loc 1 971 14 is_stmt 0 view .LVU553
 1785 00aa BCF1000F 		cmp	ip, #0
 1786 00ae D4BF     		ite	le
 1787 00b0 4FF0000C 		movle	ip, #0
 1788              	.LVL161:
 1789              		.loc 1 971 14 view .LVU554
 1790 00b4 4FF0010C 		movgt	ip, #1
 1791              	.LVL162:
 1792              	.L146:
 972:Src/BLDC_controller.c ****   }
 973:Src/BLDC_controller.c **** 
 974:Src/BLDC_controller.c ****   /* End of Signum: '<S71>/SignDeltaU2' */
 975:Src/BLDC_controller.c **** 
 976:Src/BLDC_controller.c ****   /* Signum: '<S71>/SignDeltaU3' incorporates:
 977:Src/BLDC_controller.c ****    *  Sum: '<S69>/Sum1'
 978:Src/BLDC_controller.c ****    */
 979:Src/BLDC_controller.c ****   if ((int16_T)tmp_0 < 0) {
 1793              		.loc 1 979 3 is_stmt 1 view .LVU555
 1794              		.loc 1 979 6 is_stmt 0 view .LVU556
 1795 00b8 002B     		cmp	r3, #0
 1796 00ba 16DB     		blt	.L158
 980:Src/BLDC_controller.c ****     tmp = -1;
 981:Src/BLDC_controller.c ****   } else {
 982:Src/BLDC_controller.c ****     tmp = (int16_T)((int16_T)tmp_0 > 0);
 1797              		.loc 1 982 5 is_stmt 1 view .LVU557
 1798              		.loc 1 982 9 is_stmt 0 view .LVU558
 1799 00bc 002B     		cmp	r3, #0
 1800 00be D4BF     		ite	le
 1801 00c0 0021     		movle	r1, #0
 1802 00c2 0121     		movgt	r1, #1
 1803              	.LVL163:
 1804              	.L147:
 983:Src/BLDC_controller.c ****   }
 984:Src/BLDC_controller.c **** 
 985:Src/BLDC_controller.c ****   /* End of Signum: '<S71>/SignDeltaU3' */
 986:Src/BLDC_controller.c **** 
 987:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S69>/UnitDelay1' incorporates:
 988:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S71>/DataTypeConv4'
 989:Src/BLDC_controller.c ****    *  Logic: '<S69>/AND1'
 990:Src/BLDC_controller.c ****    *  Logic: '<S71>/AND1'
 991:Src/BLDC_controller.c ****    *  RelationalOperator: '<S71>/Equal1'
 992:Src/BLDC_controller.c ****    */
 993:Src/BLDC_controller.c ****   localDW->UnitDelay1_DSTATE = ((q0 == tmp) && (rtb_LowerRelop1_i3 ||
 1805              		.loc 1 993 3 is_stmt 1 view .LVU559
 1806              		.loc 1 993 45 is_stmt 0 view .LVU560
 1807 00c4 6145     		cmp	r1, ip
 1808 00c6 13D0     		beq	.L165
ARM GAS  /tmp/cccGHnrd.s 			page 51


 1809              		.loc 1 993 45 discriminator 6 view .LVU561
 1810 00c8 0023     		movs	r3, #0
 1811              	.LVL164:
 1812              	.L148:
 1813              		.loc 1 993 30 discriminator 8 view .LVU562
 1814 00ca E370     		strb	r3, [r4, #3]
 994:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 995:Src/BLDC_controller.c **** 
 996:Src/BLDC_controller.c ****   /* Update for Delay: '<S72>/Resettable Delay' */
 997:Src/BLDC_controller.c ****   localDW->icLoad = 0U;
 1815              		.loc 1 997 3 is_stmt 1 view .LVU563
 1816              		.loc 1 997 19 is_stmt 0 view .LVU564
 1817 00cc 0023     		movs	r3, #0
 1818 00ce A370     		strb	r3, [r4, #2]
 998:Src/BLDC_controller.c ****   localDW->ResettableDelay_DSTATE = rtb_Sum1_bm;
 1819              		.loc 1 998 3 is_stmt 1 view .LVU565
 1820              		.loc 1 998 35 is_stmt 0 view .LVU566
 1821 00d0 2280     		strh	r2, [r4]	@ movhi
 999:Src/BLDC_controller.c **** }
 1822              		.loc 1 999 1 view .LVU567
 1823 00d2 70BD     		pop	{r4, r5, r6, pc}
 1824              	.LVL165:
 1825              	.L143:
 956:Src/BLDC_controller.c ****     /* Switch: '<S73>/Switch3' */
 1826              		.loc 1 956 10 is_stmt 1 view .LVU568
 956:Src/BLDC_controller.c ****     /* Switch: '<S73>/Switch3' */
 1827              		.loc 1 956 13 is_stmt 0 view .LVU569
 1828 00d4 AB42     		cmp	r3, r5
 1829 00d6 02DA     		bge	.L145
 958:Src/BLDC_controller.c ****   } else {
 1830              		.loc 1 958 5 is_stmt 1 view .LVU570
 958:Src/BLDC_controller.c ****   } else {
 1831              		.loc 1 958 14 is_stmt 0 view .LVU571
 1832 00d8 0799     		ldr	r1, [sp, #28]
 1833 00da 0D80     		strh	r5, [r1]	@ movhi
 1834 00dc E2E7     		b	.L144
 1835              	.L145:
 960:Src/BLDC_controller.c ****   }
 1836              		.loc 1 960 5 is_stmt 1 view .LVU572
 960:Src/BLDC_controller.c ****   }
 1837              		.loc 1 960 14 is_stmt 0 view .LVU573
 1838 00de 0799     		ldr	r1, [sp, #28]
 1839 00e0 0B80     		strh	r3, [r1]	@ movhi
 1840 00e2 DFE7     		b	.L144
 1841              	.L157:
 969:Src/BLDC_controller.c ****   } else {
 1842              		.loc 1 969 8 view .LVU574
 1843 00e4 4FF0FF3C 		mov	ip, #-1
 1844              	.LVL166:
 969:Src/BLDC_controller.c ****   } else {
 1845              		.loc 1 969 8 view .LVU575
 1846 00e8 E6E7     		b	.L146
 1847              	.LVL167:
 1848              	.L158:
 980:Src/BLDC_controller.c ****   } else {
 1849              		.loc 1 980 9 view .LVU576
 1850 00ea 4FF0FF31 		mov	r1, #-1
ARM GAS  /tmp/cccGHnrd.s 			page 52


 1851 00ee E9E7     		b	.L147
 1852              	.LVL168:
 1853              	.L165:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1854              		.loc 1 993 45 discriminator 1 view .LVU577
 1855 00f0 7345     		cmp	r3, lr
 1856 00f2 03DC     		bgt	.L160
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1857              		.loc 1 993 68 discriminator 4 view .LVU578
 1858 00f4 AB42     		cmp	r3, r5
 1859 00f6 03DB     		blt	.L161
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1860              		.loc 1 993 45 discriminator 6 view .LVU579
 1861 00f8 0023     		movs	r3, #0
 1862              	.LVL169:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1863              		.loc 1 993 45 discriminator 6 view .LVU580
 1864 00fa E6E7     		b	.L148
 1865              	.LVL170:
 1866              	.L160:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1867              		.loc 1 993 45 discriminator 5 view .LVU581
 1868 00fc 0123     		movs	r3, #1
 1869              	.LVL171:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1870              		.loc 1 993 45 discriminator 5 view .LVU582
 1871 00fe E4E7     		b	.L148
 1872              	.LVL172:
 1873              	.L161:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1874              		.loc 1 993 45 discriminator 5 view .LVU583
 1875 0100 0123     		movs	r3, #1
 1876              	.LVL173:
 993:Src/BLDC_controller.c ****     rtb_UpperRelop_i));
 1877              		.loc 1 993 45 discriminator 5 view .LVU584
 1878 0102 E2E7     		b	.L148
 1879              	.L167:
 1880              		.align	2
 1881              	.L166:
 1882 0104 0080FFFF 		.word	-32768
 1883              		.cfi_endproc
 1884              	.LFE23:
 1886              		.section	.text.BLDC_controller_step,"ax",%progbits
 1887              		.align	1
 1888              		.global	BLDC_controller_step
 1889              		.syntax unified
 1890              		.thumb
 1891              		.thumb_func
 1893              	BLDC_controller_step:
 1894              	.LVL174:
 1895              	.LFB24:
1000:Src/BLDC_controller.c **** 
1001:Src/BLDC_controller.c **** /* Model step function */
1002:Src/BLDC_controller.c **** void BLDC_controller_step(RT_MODEL *const rtM)
1003:Src/BLDC_controller.c **** {
 1896              		.loc 1 1003 1 is_stmt 1 view -0
 1897              		.cfi_startproc
ARM GAS  /tmp/cccGHnrd.s 			page 53


 1898              		@ args = 0, pretend = 0, frame = 48
 1899              		@ frame_needed = 0, uses_anonymous_args = 0
 1900              		.loc 1 1003 1 is_stmt 0 view .LVU586
 1901 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1902              	.LCFI14:
 1903              		.cfi_def_cfa_offset 36
 1904              		.cfi_offset 4, -36
 1905              		.cfi_offset 5, -32
 1906              		.cfi_offset 6, -28
 1907              		.cfi_offset 7, -24
 1908              		.cfi_offset 8, -20
 1909              		.cfi_offset 9, -16
 1910              		.cfi_offset 10, -12
 1911              		.cfi_offset 11, -8
 1912              		.cfi_offset 14, -4
 1913 0004 93B0     		sub	sp, sp, #76
 1914              	.LCFI15:
 1915              		.cfi_def_cfa_offset 112
1004:Src/BLDC_controller.c ****   P *rtP = ((P *) rtM->defaultParam);
 1916              		.loc 1 1004 3 is_stmt 1 view .LVU587
 1917              		.loc 1 1004 6 is_stmt 0 view .LVU588
 1918 0006 0568     		ldr	r5, [r0]
 1919              	.LVL175:
1005:Src/BLDC_controller.c ****   DW *rtDW = ((DW *) rtM->dwork);
 1920              		.loc 1 1005 3 is_stmt 1 view .LVU589
 1921              		.loc 1 1005 7 is_stmt 0 view .LVU590
 1922 0008 C468     		ldr	r4, [r0, #12]
 1923              	.LVL176:
1006:Src/BLDC_controller.c ****   ExtU *rtU = (ExtU *) rtM->inputs;
 1924              		.loc 1 1006 3 is_stmt 1 view .LVU591
 1925              		.loc 1 1006 9 is_stmt 0 view .LVU592
 1926 000a 4668     		ldr	r6, [r0, #4]
 1927              	.LVL177:
1007:Src/BLDC_controller.c ****   ExtY *rtY = (ExtY *) rtM->outputs;
 1928              		.loc 1 1007 3 is_stmt 1 view .LVU593
 1929              		.loc 1 1007 9 is_stmt 0 view .LVU594
 1930 000c 8768     		ldr	r7, [r0, #8]
 1931              	.LVL178:
1008:Src/BLDC_controller.c ****   boolean_T rtb_LogicalOperator;
 1932              		.loc 1 1008 3 is_stmt 1 view .LVU595
1009:Src/BLDC_controller.c ****   int8_T rtb_Sum2_h;
 1933              		.loc 1 1009 3 view .LVU596
1010:Src/BLDC_controller.c ****   boolean_T rtb_RelationalOperator4_d;
 1934              		.loc 1 1010 3 view .LVU597
1011:Src/BLDC_controller.c ****   boolean_T rtb_UnitDelay5_e;
 1935              		.loc 1 1011 3 view .LVU598
1012:Src/BLDC_controller.c ****   uint8_T rtb_a_elecAngle_XA_g;
 1936              		.loc 1 1012 3 view .LVU599
1013:Src/BLDC_controller.c ****   boolean_T rtb_LogicalOperator1_j;
 1937              		.loc 1 1013 3 view .LVU600
1014:Src/BLDC_controller.c ****   boolean_T rtb_LogicalOperator2_p;
 1938              		.loc 1 1014 3 view .LVU601
1015:Src/BLDC_controller.c ****   boolean_T rtb_RelationalOperator1_mv;
 1939              		.loc 1 1015 3 view .LVU602
1016:Src/BLDC_controller.c ****   int16_T rtb_Switch1_l;
 1940              		.loc 1 1016 3 view .LVU603
1017:Src/BLDC_controller.c ****   int16_T rtb_Saturation;
ARM GAS  /tmp/cccGHnrd.s 			page 54


 1941              		.loc 1 1017 3 view .LVU604
1018:Src/BLDC_controller.c ****   int16_T rtb_Saturation1;
 1942              		.loc 1 1018 3 view .LVU605
1019:Src/BLDC_controller.c ****   int32_T rtb_Sum1_jt;
 1943              		.loc 1 1019 3 view .LVU606
1020:Src/BLDC_controller.c ****   int16_T rtb_Merge_m;
 1944              		.loc 1 1020 3 view .LVU607
1021:Src/BLDC_controller.c ****   int16_T rtb_Merge1;
 1945              		.loc 1 1021 3 view .LVU608
1022:Src/BLDC_controller.c ****   uint16_T rtb_Divide14_e;
 1946              		.loc 1 1022 3 view .LVU609
1023:Src/BLDC_controller.c ****   uint16_T rtb_Divide1_f;
 1947              		.loc 1 1023 3 view .LVU610
1024:Src/BLDC_controller.c ****   int16_T rtb_TmpSignalConversionAtLow_Pa[2];
 1948              		.loc 1 1024 3 view .LVU611
1025:Src/BLDC_controller.c ****   int32_T rtb_Switch1;
 1949              		.loc 1 1025 3 view .LVU612
1026:Src/BLDC_controller.c ****   int32_T rtb_Sum1;
 1950              		.loc 1 1026 3 view .LVU613
1027:Src/BLDC_controller.c ****   int32_T rtb_Gain3;
 1951              		.loc 1 1027 3 view .LVU614
1028:Src/BLDC_controller.c ****   uint8_T Sum;
 1952              		.loc 1 1028 3 view .LVU615
1029:Src/BLDC_controller.c ****   int16_T Switch2;
 1953              		.loc 1 1029 3 view .LVU616
1030:Src/BLDC_controller.c ****   int16_T Abs5;
 1954              		.loc 1 1030 3 view .LVU617
1031:Src/BLDC_controller.c ****   int16_T DataTypeConversion2;
 1955              		.loc 1 1031 3 view .LVU618
1032:Src/BLDC_controller.c ****   int16_T tmp[4];
 1956              		.loc 1 1032 3 view .LVU619
1033:Src/BLDC_controller.c ****   int8_T UnitDelay3;
 1957              		.loc 1 1033 3 view .LVU620
1034:Src/BLDC_controller.c **** 
1035:Src/BLDC_controller.c ****   /* Outputs for Atomic SubSystem: '<Root>/BLDC_controller' */
1036:Src/BLDC_controller.c ****   /* Sum: '<S11>/Sum' incorporates:
1037:Src/BLDC_controller.c ****    *  Gain: '<S11>/g_Ha'
1038:Src/BLDC_controller.c ****    *  Gain: '<S11>/g_Hb'
1039:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallA '
1040:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallB'
1041:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallC'
1042:Src/BLDC_controller.c ****    */
1043:Src/BLDC_controller.c ****   Sum = (uint8_T)((uint32_T)(uint8_T)((uint32_T)(uint8_T)(rtU->b_hallA << 2) +
 1958              		.loc 1 1043 3 view .LVU621
 1959              		.loc 1 1043 62 is_stmt 0 view .LVU622
 1960 000e 3179     		ldrb	r1, [r6, #4]	@ zero_extendqisi2
 1961              		.loc 1 1043 49 view .LVU623
 1962 0010 8A00     		lsls	r2, r1, #2
 1963 0012 D2B2     		uxtb	r2, r2
1044:Src/BLDC_controller.c ****     (uint8_T)(rtU->b_hallB << 1)) + rtU->b_hallC);
 1964              		.loc 1 1044 18 view .LVU624
 1965 0014 7379     		ldrb	r3, [r6, #5]	@ zero_extendqisi2
 1966              		.loc 1 1044 5 view .LVU625
 1967 0016 5800     		lsls	r0, r3, #1
 1968              	.LVL179:
 1969              		.loc 1 1044 5 view .LVU626
 1970 0018 C0B2     		uxtb	r0, r0
ARM GAS  /tmp/cccGHnrd.s 			page 55


1043:Src/BLDC_controller.c ****     (uint8_T)(rtU->b_hallB << 1)) + rtU->b_hallC);
 1971              		.loc 1 1043 29 view .LVU627
 1972 001a 0244     		add	r2, r2, r0
 1973 001c D2B2     		uxtb	r2, r2
 1974              		.loc 1 1044 40 view .LVU628
 1975 001e B079     		ldrb	r0, [r6, #6]	@ zero_extendqisi2
1043:Src/BLDC_controller.c ****     (uint8_T)(rtU->b_hallB << 1)) + rtU->b_hallC);
 1976              		.loc 1 1043 7 view .LVU629
 1977 0020 0244     		add	r2, r2, r0
 1978 0022 5FFA82FE 		uxtb	lr, r2
 1979 0026 CDF81CE0 		str	lr, [sp, #28]
 1980              	.LVL180:
1045:Src/BLDC_controller.c **** 
1046:Src/BLDC_controller.c ****   /* Logic: '<S10>/Logical Operator' incorporates:
1047:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallA '
1048:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallB'
1049:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallC'
1050:Src/BLDC_controller.c ****    *  UnitDelay: '<S10>/UnitDelay1'
1051:Src/BLDC_controller.c ****    *  UnitDelay: '<S10>/UnitDelay2'
1052:Src/BLDC_controller.c ****    *  UnitDelay: '<S10>/UnitDelay3'
1053:Src/BLDC_controller.c ****    */
1054:Src/BLDC_controller.c ****   rtb_LogicalOperator = (boolean_T)((rtU->b_hallA != 0) ^ (rtU->b_hallB != 0) ^
 1981              		.loc 1 1054 3 is_stmt 1 view .LVU630
 1982              		.loc 1 1054 73 is_stmt 0 view .LVU631
 1983 002a 003B     		subs	r3, r3, #0
 1984 002c 18BF     		it	ne
 1985 002e 0123     		movne	r3, #1
1055:Src/BLDC_controller.c ****     (rtU->b_hallC != 0) ^ (rtDW->UnitDelay3_DSTATE_fy != 0) ^
 1986              		.loc 1 1055 32 view .LVU632
 1987 0030 94F89AC0 		ldrb	ip, [r4, #154]	@ zero_extendqisi2
1056:Src/BLDC_controller.c ****     (rtDW->UnitDelay1_DSTATE != 0)) ^ (rtDW->UnitDelay2_DSTATE_f != 0);
 1988              		.loc 1 1056 10 view .LVU633
 1989 0034 94F89B20 		ldrb	r2, [r4, #155]	@ zero_extendqisi2
 1990 0038 0029     		cmp	r1, #0
 1991 003a 18BF     		it	ne
 1992 003c 83F00103 		eorne	r3, r3, #1
 1993 0040 0028     		cmp	r0, #0
 1994 0042 18BF     		it	ne
 1995 0044 83F00103 		eorne	r3, r3, #1
 1996 0048 BCF1000F 		cmp	ip, #0
 1997 004c 18BF     		it	ne
 1998 004e 83F00103 		eorne	r3, r3, #1
 1999 0052 002A     		cmp	r2, #0
 2000 0054 18BF     		it	ne
 2001 0056 83F00103 		eorne	r3, r3, #1
 2002              		.loc 1 1056 44 view .LVU634
 2003 005a 94F89C10 		ldrb	r1, [r4, #156]	@ zero_extendqisi2
 2004              		.loc 1 1056 66 view .LVU635
 2005 005e 0039     		subs	r1, r1, #0
 2006 0060 18BF     		it	ne
 2007 0062 0121     		movne	r1, #1
1054:Src/BLDC_controller.c ****     (rtU->b_hallC != 0) ^ (rtDW->UnitDelay3_DSTATE_fy != 0) ^
 2008              		.loc 1 1054 23 view .LVU636
 2009 0064 81EA0302 		eor	r2, r1, r3
 2010              	.LVL181:
1057:Src/BLDC_controller.c **** 
1058:Src/BLDC_controller.c ****   /* If: '<S13>/If2' incorporates:
ARM GAS  /tmp/cccGHnrd.s 			page 56


1059:Src/BLDC_controller.c ****    *  If: '<S3>/If2'
1060:Src/BLDC_controller.c ****    *  Inport: '<S17>/z_counterRawPrev'
1061:Src/BLDC_controller.c ****    *  UnitDelay: '<S13>/UnitDelay3'
1062:Src/BLDC_controller.c ****    */
1063:Src/BLDC_controller.c ****   if (rtb_LogicalOperator) {
 2011              		.loc 1 1063 3 is_stmt 1 view .LVU637
 2012              		.loc 1 1063 6 is_stmt 0 view .LVU638
 2013 0068 9942     		cmp	r1, r3
 2014 006a 56D0     		beq	.L169
1064:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S3>/F01_03_Direction_Detection' incorporates:
1065:Src/BLDC_controller.c ****      *  ActionPort: '<S12>/Action Port'
1066:Src/BLDC_controller.c ****      */
1067:Src/BLDC_controller.c ****     /* UnitDelay: '<S12>/UnitDelay3' */
1068:Src/BLDC_controller.c ****     UnitDelay3 = rtDW->Switch2_e;
 2015              		.loc 1 1068 5 is_stmt 1 view .LVU639
 2016              		.loc 1 1068 16 is_stmt 0 view .LVU640
 2017 006c 94F98E00 		ldrsb	r0, [r4, #142]
 2018              	.LVL182:
1069:Src/BLDC_controller.c **** 
1070:Src/BLDC_controller.c ****     /* Sum: '<S12>/Sum2' incorporates:
1071:Src/BLDC_controller.c ****      *  Constant: '<S11>/vec_hallToPos'
1072:Src/BLDC_controller.c ****      *  Selector: '<S11>/Selector'
1073:Src/BLDC_controller.c ****      *  UnitDelay: '<S12>/UnitDelay2'
1074:Src/BLDC_controller.c ****      */
1075:Src/BLDC_controller.c ****     rtb_Sum2_h = (int8_T)(rtConstP.vec_hallToPos_Value[Sum] -
 2019              		.loc 1 1075 5 is_stmt 1 view .LVU641
 2020              		.loc 1 1075 55 is_stmt 0 view .LVU642
 2021 0070 B94B     		ldr	r3, .L469
 2022 0072 7344     		add	r3, r3, lr
 2023 0074 93F98817 		ldrsb	r1, [r3, #1928]
 2024 0078 CBB2     		uxtb	r3, r1
1076:Src/BLDC_controller.c ****                           rtDW->UnitDelay2_DSTATE_b);
 2025              		.loc 1 1076 31 view .LVU643
 2026 007a 94F88FC0 		ldrb	ip, [r4, #143]	@ zero_extendqisi2
1075:Src/BLDC_controller.c ****                           rtDW->UnitDelay2_DSTATE_b);
 2027              		.loc 1 1075 61 view .LVU644
 2028 007e A3EB0C03 		sub	r3, r3, ip
1075:Src/BLDC_controller.c ****                           rtDW->UnitDelay2_DSTATE_b);
 2029              		.loc 1 1075 16 view .LVU645
 2030 0082 5BB2     		sxtb	r3, r3
 2031              	.LVL183:
1077:Src/BLDC_controller.c **** 
1078:Src/BLDC_controller.c ****     /* Switch: '<S12>/Switch2' incorporates:
1079:Src/BLDC_controller.c ****      *  Constant: '<S12>/Constant20'
1080:Src/BLDC_controller.c ****      *  Constant: '<S12>/Constant23'
1081:Src/BLDC_controller.c ****      *  Constant: '<S12>/Constant24'
1082:Src/BLDC_controller.c ****      *  Constant: '<S12>/Constant8'
1083:Src/BLDC_controller.c ****      *  Logic: '<S12>/Logical Operator3'
1084:Src/BLDC_controller.c ****      *  RelationalOperator: '<S12>/Relational Operator1'
1085:Src/BLDC_controller.c ****      *  RelationalOperator: '<S12>/Relational Operator6'
1086:Src/BLDC_controller.c ****      */
1087:Src/BLDC_controller.c ****     if ((rtb_Sum2_h == 1) || (rtb_Sum2_h == -5)) {
 2032              		.loc 1 1087 5 is_stmt 1 view .LVU646
 2033              		.loc 1 1087 8 is_stmt 0 view .LVU647
 2034 0084 012B     		cmp	r3, #1
 2035 0086 06D0     		beq	.L170
 2036              		.loc 1 1087 27 discriminator 1 view .LVU648
ARM GAS  /tmp/cccGHnrd.s 			page 57


 2037 0088 13F1050F 		cmn	r3, #5
 2038 008c 03D0     		beq	.L170
1088:Src/BLDC_controller.c ****       rtDW->Switch2_e = 1;
1089:Src/BLDC_controller.c ****     } else {
1090:Src/BLDC_controller.c ****       rtDW->Switch2_e = -1;
 2039              		.loc 1 1090 7 is_stmt 1 view .LVU649
 2040              		.loc 1 1090 23 is_stmt 0 view .LVU650
 2041 008e FF23     		movs	r3, #255
 2042              	.LVL184:
 2043              		.loc 1 1090 23 view .LVU651
 2044 0090 84F88E30 		strb	r3, [r4, #142]
 2045 0094 02E0     		b	.L172
 2046              	.LVL185:
 2047              	.L170:
1088:Src/BLDC_controller.c ****       rtDW->Switch2_e = 1;
 2048              		.loc 1 1088 7 is_stmt 1 view .LVU652
1088:Src/BLDC_controller.c ****       rtDW->Switch2_e = 1;
 2049              		.loc 1 1088 23 is_stmt 0 view .LVU653
 2050 0096 0123     		movs	r3, #1
 2051              	.LVL186:
1088:Src/BLDC_controller.c ****       rtDW->Switch2_e = 1;
 2052              		.loc 1 1088 23 view .LVU654
 2053 0098 84F88E30 		strb	r3, [r4, #142]
 2054              	.L172:
1091:Src/BLDC_controller.c ****     }
1092:Src/BLDC_controller.c **** 
1093:Src/BLDC_controller.c ****     /* End of Switch: '<S12>/Switch2' */
1094:Src/BLDC_controller.c **** 
1095:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S12>/UnitDelay2' incorporates:
1096:Src/BLDC_controller.c ****      *  Constant: '<S11>/vec_hallToPos'
1097:Src/BLDC_controller.c ****      *  Selector: '<S11>/Selector'
1098:Src/BLDC_controller.c ****      */
1099:Src/BLDC_controller.c ****     rtDW->UnitDelay2_DSTATE_b = rtConstP.vec_hallToPos_Value[Sum];
 2055              		.loc 1 1099 5 is_stmt 1 view .LVU655
 2056              		.loc 1 1099 31 is_stmt 0 view .LVU656
 2057 009c 84F88F10 		strb	r1, [r4, #143]
1100:Src/BLDC_controller.c **** 
1101:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S3>/F01_03_Direction_Detection' */
1102:Src/BLDC_controller.c **** 
1103:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S13>/Raw_Motor_Speed_Estimation' incorporates:
1104:Src/BLDC_controller.c ****      *  ActionPort: '<S17>/Action Port'
1105:Src/BLDC_controller.c ****      */
1106:Src/BLDC_controller.c ****     rtDW->z_counterRawPrev = rtDW->UnitDelay3_DSTATE;
 2058              		.loc 1 1106 5 is_stmt 1 view .LVU657
 2059              		.loc 1 1106 34 is_stmt 0 view .LVU658
 2060 00a0 B4F98010 		ldrsh	r1, [r4, #128]
 2061              	.LVL187:
 2062              		.loc 1 1106 28 view .LVU659
 2063 00a4 A4F85610 		strh	r1, [r4, #86]	@ movhi
1107:Src/BLDC_controller.c **** 
1108:Src/BLDC_controller.c ****     /* Sum: '<S17>/Sum7' incorporates:
1109:Src/BLDC_controller.c ****      *  Inport: '<S17>/z_counterRawPrev'
1110:Src/BLDC_controller.c ****      *  UnitDelay: '<S13>/UnitDelay3'
1111:Src/BLDC_controller.c ****      *  UnitDelay: '<S17>/UnitDelay4'
1112:Src/BLDC_controller.c ****      */
1113:Src/BLDC_controller.c ****     Switch2 = (int16_T)(rtDW->z_counterRawPrev - rtDW->UnitDelay4_DSTATE);
 2064              		.loc 1 1113 5 is_stmt 1 view .LVU660
ARM GAS  /tmp/cccGHnrd.s 			page 58


 2065              		.loc 1 1113 29 is_stmt 0 view .LVU661
 2066 00a8 1FFA81FE 		uxth	lr, r1
 2067              	.LVL188:
 2068              		.loc 1 1113 54 view .LVU662
 2069 00ac B4F882C0 		ldrh	ip, [r4, #130]
 2070              	.LVL189:
 2071              		.loc 1 1113 48 view .LVU663
 2072 00b0 AEEB0C03 		sub	r3, lr, ip
 2073              		.loc 1 1113 13 view .LVU664
 2074 00b4 1BB2     		sxth	r3, r3
 2075              	.LVL190:
1114:Src/BLDC_controller.c **** 
1115:Src/BLDC_controller.c ****     /* Abs: '<S17>/Abs2' */
1116:Src/BLDC_controller.c ****     if (Switch2 < 0) {
 2076              		.loc 1 1116 5 is_stmt 1 view .LVU665
 2077              		.loc 1 1116 8 is_stmt 0 view .LVU666
 2078 00b6 002B     		cmp	r3, #0
 2079 00b8 43DB     		blt	.L436
 2080              	.LVL191:
 2081              	.L173:
1117:Src/BLDC_controller.c ****       rtb_Switch1_l = (int16_T)-Switch2;
1118:Src/BLDC_controller.c ****     } else {
1119:Src/BLDC_controller.c ****       rtb_Switch1_l = Switch2;
1120:Src/BLDC_controller.c ****     }
1121:Src/BLDC_controller.c **** 
1122:Src/BLDC_controller.c ****     /* End of Abs: '<S17>/Abs2' */
1123:Src/BLDC_controller.c **** 
1124:Src/BLDC_controller.c ****     /* Relay: '<S17>/dz_cntTrnsDet' */
1125:Src/BLDC_controller.c ****     if (rtb_Switch1_l >= rtP->dz_cntTrnsDetHi) {
 2082              		.loc 1 1125 5 is_stmt 1 view .LVU667
 2083              		.loc 1 1125 29 is_stmt 0 view .LVU668
 2084 00ba B5F904C0 		ldrsh	ip, [r5, #4]
 2085              		.loc 1 1125 8 view .LVU669
 2086 00be 9C45     		cmp	ip, r3
 2087 00c0 44DC     		bgt	.L174
1126:Src/BLDC_controller.c ****       rtDW->dz_cntTrnsDet_Mode = true;
 2088              		.loc 1 1126 7 is_stmt 1 view .LVU670
 2089              		.loc 1 1126 32 is_stmt 0 view .LVU671
 2090 00c2 0123     		movs	r3, #1
 2091              	.LVL192:
 2092              		.loc 1 1126 32 view .LVU672
 2093 00c4 84F8A930 		strb	r3, [r4, #169]
 2094              	.L175:
1127:Src/BLDC_controller.c ****     } else {
1128:Src/BLDC_controller.c ****       if (rtb_Switch1_l <= rtP->dz_cntTrnsDetLo) {
1129:Src/BLDC_controller.c ****         rtDW->dz_cntTrnsDet_Mode = false;
1130:Src/BLDC_controller.c ****       }
1131:Src/BLDC_controller.c ****     }
1132:Src/BLDC_controller.c **** 
1133:Src/BLDC_controller.c ****     rtDW->dz_cntTrnsDet = rtDW->dz_cntTrnsDet_Mode;
 2095              		.loc 1 1133 5 is_stmt 1 view .LVU673
 2096              		.loc 1 1133 31 is_stmt 0 view .LVU674
 2097 00c8 94F8A980 		ldrb	r8, [r4, #169]	@ zero_extendqisi2
 2098              		.loc 1 1133 25 view .LVU675
 2099 00cc 84F8A280 		strb	r8, [r4, #162]
1134:Src/BLDC_controller.c **** 
1135:Src/BLDC_controller.c ****     /* End of Relay: '<S17>/dz_cntTrnsDet' */
ARM GAS  /tmp/cccGHnrd.s 			page 59


1136:Src/BLDC_controller.c **** 
1137:Src/BLDC_controller.c ****     /* RelationalOperator: '<S17>/Relational Operator4' */
1138:Src/BLDC_controller.c ****     rtb_RelationalOperator4_d = (rtDW->Switch2_e != UnitDelay3);
 2100              		.loc 1 1138 5 is_stmt 1 view .LVU676
 2101              		.loc 1 1138 38 is_stmt 0 view .LVU677
 2102 00d0 94F98E30 		ldrsb	r3, [r4, #142]
 2103              		.loc 1 1138 50 view .LVU678
 2104 00d4 8342     		cmp	r3, r0
 2105 00d6 14BF     		ite	ne
 2106 00d8 4FF0010C 		movne	ip, #1
 2107 00dc 4FF0000C 		moveq	ip, #0
 2108              	.LVL193:
1139:Src/BLDC_controller.c **** 
1140:Src/BLDC_controller.c ****     /* Switch: '<S17>/Switch3' incorporates:
1141:Src/BLDC_controller.c ****      *  Constant: '<S17>/Constant4'
1142:Src/BLDC_controller.c ****      *  Logic: '<S17>/Logical Operator1'
1143:Src/BLDC_controller.c ****      *  Switch: '<S17>/Switch1'
1144:Src/BLDC_controller.c ****      *  Switch: '<S17>/Switch2'
1145:Src/BLDC_controller.c ****      *  UnitDelay: '<S17>/UnitDelay1'
1146:Src/BLDC_controller.c ****      */
1147:Src/BLDC_controller.c ****     if (rtb_RelationalOperator4_d && rtDW->UnitDelay1_DSTATE_n) {
 2109              		.loc 1 1147 5 is_stmt 1 view .LVU679
 2110              		.loc 1 1147 8 is_stmt 0 view .LVU680
 2111 00e0 04D0     		beq	.L176
 2112              		.loc 1 1147 42 discriminator 1 view .LVU681
 2113 00e2 94F8A790 		ldrb	r9, [r4, #167]	@ zero_extendqisi2
 2114              		.loc 1 1147 35 discriminator 1 view .LVU682
 2115 00e6 B9F1000F 		cmp	r9, #0
 2116 00ea 57D1     		bne	.L345
 2117              	.L176:
1148:Src/BLDC_controller.c ****       rtb_Switch1_l = 0;
1149:Src/BLDC_controller.c ****     } else if (rtb_RelationalOperator4_d) {
 2118              		.loc 1 1149 12 is_stmt 1 view .LVU683
 2119              		.loc 1 1149 15 is_stmt 0 view .LVU684
 2120 00ec 8342     		cmp	r3, r0
 2121 00ee 35D0     		beq	.L178
1150:Src/BLDC_controller.c ****       /* Switch: '<S17>/Switch2' incorporates:
1151:Src/BLDC_controller.c ****        *  UnitDelay: '<S13>/UnitDelay4'
1152:Src/BLDC_controller.c ****        */
1153:Src/BLDC_controller.c ****       rtb_Switch1_l = rtDW->UnitDelay4_DSTATE_e;
 2122              		.loc 1 1153 7 is_stmt 1 view .LVU685
 2123              		.loc 1 1153 21 is_stmt 0 view .LVU686
 2124 00f0 B4F98A00 		ldrsh	r0, [r4, #138]
 2125              	.LVL194:
 2126              	.L177:
1154:Src/BLDC_controller.c ****     } else if (rtDW->dz_cntTrnsDet) {
1155:Src/BLDC_controller.c ****       /* Switch: '<S17>/Switch1' incorporates:
1156:Src/BLDC_controller.c ****        *  Constant: '<S17>/cf_speedCoef'
1157:Src/BLDC_controller.c ****        *  Product: '<S17>/Divide14'
1158:Src/BLDC_controller.c ****        *  Switch: '<S17>/Switch2'
1159:Src/BLDC_controller.c ****        */
1160:Src/BLDC_controller.c ****       rtb_Switch1_l = (int16_T)((rtP->cf_speedCoef << 4) /
1161:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
1162:Src/BLDC_controller.c ****     } else {
1163:Src/BLDC_controller.c ****       /* Switch: '<S17>/Switch1' incorporates:
1164:Src/BLDC_controller.c ****        *  Constant: '<S17>/cf_speedCoef'
1165:Src/BLDC_controller.c ****        *  Gain: '<S17>/g_Ha'
ARM GAS  /tmp/cccGHnrd.s 			page 60


1166:Src/BLDC_controller.c ****        *  Product: '<S17>/Divide13'
1167:Src/BLDC_controller.c ****        *  Sum: '<S17>/Sum13'
1168:Src/BLDC_controller.c ****        *  Switch: '<S17>/Switch2'
1169:Src/BLDC_controller.c ****        *  UnitDelay: '<S17>/UnitDelay2'
1170:Src/BLDC_controller.c ****        *  UnitDelay: '<S17>/UnitDelay3'
1171:Src/BLDC_controller.c ****        *  UnitDelay: '<S17>/UnitDelay5'
1172:Src/BLDC_controller.c ****        */
1173:Src/BLDC_controller.c ****       rtb_Switch1_l = (int16_T)(((uint16_T)(rtP->cf_speedCoef << 2) << 4) /
1174:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
1175:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
1176:Src/BLDC_controller.c ****     }
1177:Src/BLDC_controller.c **** 
1178:Src/BLDC_controller.c ****     /* End of Switch: '<S17>/Switch3' */
1179:Src/BLDC_controller.c **** 
1180:Src/BLDC_controller.c ****     /* Product: '<S17>/Divide11' */
1181:Src/BLDC_controller.c ****     rtDW->Divide11 = (int16_T)(rtb_Switch1_l * rtDW->Switch2_e);
 2127              		.loc 1 1181 5 is_stmt 1 view .LVU687
 2128              		.loc 1 1181 52 is_stmt 0 view .LVU688
 2129 00f4 9BB2     		uxth	r3, r3
 2130              		.loc 1 1181 46 view .LVU689
 2131 00f6 00FB03F3 		mul	r3, r0, r3
 2132              		.loc 1 1181 20 view .LVU690
 2133 00fa A4F87A30 		strh	r3, [r4, #122]	@ movhi
1182:Src/BLDC_controller.c **** 
1183:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S17>/UnitDelay4' */
1184:Src/BLDC_controller.c ****     rtDW->UnitDelay4_DSTATE = rtDW->z_counterRawPrev;
 2134              		.loc 1 1184 5 is_stmt 1 view .LVU691
 2135              		.loc 1 1184 29 is_stmt 0 view .LVU692
 2136 00fe A4F88210 		strh	r1, [r4, #130]	@ movhi
 2137              	.LVL195:
1185:Src/BLDC_controller.c **** 
1186:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S17>/UnitDelay2' incorporates:
1187:Src/BLDC_controller.c ****      *  UnitDelay: '<S17>/UnitDelay3'
1188:Src/BLDC_controller.c ****      */
1189:Src/BLDC_controller.c ****     rtDW->UnitDelay2_DSTATE = rtDW->UnitDelay3_DSTATE_o;
 2138              		.loc 1 1189 5 is_stmt 1 view .LVU693
 2139              		.loc 1 1189 35 is_stmt 0 view .LVU694
 2140 0102 B4F98630 		ldrsh	r3, [r4, #134]
 2141              		.loc 1 1189 29 view .LVU695
 2142 0106 A4F88430 		strh	r3, [r4, #132]	@ movhi
1190:Src/BLDC_controller.c **** 
1191:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S17>/UnitDelay3' incorporates:
1192:Src/BLDC_controller.c ****      *  UnitDelay: '<S17>/UnitDelay5'
1193:Src/BLDC_controller.c ****      */
1194:Src/BLDC_controller.c ****     rtDW->UnitDelay3_DSTATE_o = rtDW->UnitDelay5_DSTATE;
 2143              		.loc 1 1194 5 is_stmt 1 view .LVU696
 2144              		.loc 1 1194 37 is_stmt 0 view .LVU697
 2145 010a B4F98830 		ldrsh	r3, [r4, #136]
 2146              		.loc 1 1194 31 view .LVU698
 2147 010e A4F88630 		strh	r3, [r4, #134]	@ movhi
1195:Src/BLDC_controller.c **** 
1196:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S17>/UnitDelay5' */
1197:Src/BLDC_controller.c ****     rtDW->UnitDelay5_DSTATE = rtDW->z_counterRawPrev;
 2148              		.loc 1 1197 5 is_stmt 1 view .LVU699
 2149              		.loc 1 1197 29 is_stmt 0 view .LVU700
 2150 0112 A4F88810 		strh	r1, [r4, #136]	@ movhi
1198:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 61


1199:Src/BLDC_controller.c ****     /* Update for UnitDelay: '<S17>/UnitDelay1' */
1200:Src/BLDC_controller.c ****     rtDW->UnitDelay1_DSTATE_n = rtb_RelationalOperator4_d;
 2151              		.loc 1 1200 5 is_stmt 1 view .LVU701
 2152              		.loc 1 1200 31 is_stmt 0 view .LVU702
 2153 0116 84F8A7C0 		strb	ip, [r4, #167]
 2154              	.LVL196:
 2155              	.L169:
1201:Src/BLDC_controller.c **** 
1202:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S13>/Raw_Motor_Speed_Estimation' */
1203:Src/BLDC_controller.c ****   }
1204:Src/BLDC_controller.c **** 
1205:Src/BLDC_controller.c ****   /* End of If: '<S13>/If2' */
1206:Src/BLDC_controller.c **** 
1207:Src/BLDC_controller.c ****   /* Outputs for Atomic SubSystem: '<S13>/Counter' */
1208:Src/BLDC_controller.c **** 
1209:Src/BLDC_controller.c ****   /* Constant: '<S13>/Constant6' incorporates:
1210:Src/BLDC_controller.c ****    *  Constant: '<S13>/z_maxCntRst2'
1211:Src/BLDC_controller.c ****    */
1212:Src/BLDC_controller.c ****   rtb_Switch1_l = (int16_T) Counter(1, rtP->z_maxCntRst, rtb_LogicalOperator,
 2156              		.loc 1 1212 3 is_stmt 1 view .LVU703
 2157              		.loc 1 1212 29 is_stmt 0 view .LVU704
 2158 011a 04F14003 		add	r3, r4, #64
 2159 011e B5F90A10 		ldrsh	r1, [r5, #10]
 2160 0122 0120     		movs	r0, #1
 2161 0124 FFF7FEFF 		bl	Counter
 2162              	.LVL197:
 2163              		.loc 1 1212 29 view .LVU705
 2164 0128 0B90     		str	r0, [sp, #44]
 2165              	.LVL198:
1213:Src/BLDC_controller.c ****     &rtDW->Counter_e);
1214:Src/BLDC_controller.c **** 
1215:Src/BLDC_controller.c ****   /* End of Outputs for SubSystem: '<S13>/Counter' */
1216:Src/BLDC_controller.c **** 
1217:Src/BLDC_controller.c ****   /* Switch: '<S13>/Switch2' incorporates:
1218:Src/BLDC_controller.c ****    *  Constant: '<S13>/Constant4'
1219:Src/BLDC_controller.c ****    *  Constant: '<S13>/z_maxCntRst'
1220:Src/BLDC_controller.c ****    *  RelationalOperator: '<S13>/Relational Operator2'
1221:Src/BLDC_controller.c ****    */
1222:Src/BLDC_controller.c ****   if (rtb_Switch1_l > rtP->z_maxCntRst) {
 2166              		.loc 1 1222 3 is_stmt 1 view .LVU706
 2167              		.loc 1 1222 26 is_stmt 0 view .LVU707
 2168 012a B5F90A30 		ldrsh	r3, [r5, #10]
 2169              		.loc 1 1222 6 view .LVU708
 2170 012e 8342     		cmp	r3, r0
 2171 0130 3ADB     		blt	.L346
1223:Src/BLDC_controller.c ****     Switch2 = 0;
1224:Src/BLDC_controller.c ****   } else {
1225:Src/BLDC_controller.c ****     Switch2 = rtDW->Divide11;
 2172              		.loc 1 1225 5 is_stmt 1 view .LVU709
 2173              		.loc 1 1225 13 is_stmt 0 view .LVU710
 2174 0132 B4F97A30 		ldrsh	r3, [r4, #122]
 2175 0136 0A93     		str	r3, [sp, #40]
 2176              	.LVL199:
1226:Src/BLDC_controller.c ****   }
1227:Src/BLDC_controller.c **** 
1228:Src/BLDC_controller.c ****   /* End of Switch: '<S13>/Switch2' */
1229:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 62


1230:Src/BLDC_controller.c ****   /* Abs: '<S13>/Abs5' */
1231:Src/BLDC_controller.c ****   if (Switch2 < 0) {
 2177              		.loc 1 1231 3 is_stmt 1 view .LVU711
 2178              		.loc 1 1231 6 is_stmt 0 view .LVU712
 2179 0138 002B     		cmp	r3, #0
 2180 013a 31DB     		blt	.L437
1232:Src/BLDC_controller.c ****     Abs5 = (int16_T)-Switch2;
1233:Src/BLDC_controller.c ****   } else {
1234:Src/BLDC_controller.c ****     Abs5 = Switch2;
 2181              		.loc 1 1234 10 view .LVU713
 2182 013c 0A9B     		ldr	r3, [sp, #40]
 2183              		.loc 1 1234 10 view .LVU714
 2184 013e 0693     		str	r3, [sp, #24]
 2185 0140 35E0     		b	.L180
 2186              	.LVL200:
 2187              	.L436:
1117:Src/BLDC_controller.c ****     } else {
 2188              		.loc 1 1117 7 is_stmt 1 view .LVU715
1117:Src/BLDC_controller.c ****     } else {
 2189              		.loc 1 1117 23 is_stmt 0 view .LVU716
 2190 0142 ACEB0E0C 		sub	ip, ip, lr
1117:Src/BLDC_controller.c ****     } else {
 2191              		.loc 1 1117 21 view .LVU717
 2192 0146 0FFA8CF3 		sxth	r3, ip
 2193              	.LVL201:
1117:Src/BLDC_controller.c ****     } else {
 2194              		.loc 1 1117 21 view .LVU718
 2195 014a B6E7     		b	.L173
 2196              	.L174:
1128:Src/BLDC_controller.c ****         rtDW->dz_cntTrnsDet_Mode = false;
 2197              		.loc 1 1128 7 is_stmt 1 view .LVU719
1128:Src/BLDC_controller.c ****         rtDW->dz_cntTrnsDet_Mode = false;
 2198              		.loc 1 1128 31 is_stmt 0 view .LVU720
 2199 014c B5F906C0 		ldrsh	ip, [r5, #6]
1128:Src/BLDC_controller.c ****         rtDW->dz_cntTrnsDet_Mode = false;
 2200              		.loc 1 1128 10 view .LVU721
 2201 0150 9C45     		cmp	ip, r3
 2202 0152 B9DB     		blt	.L175
1129:Src/BLDC_controller.c ****       }
 2203              		.loc 1 1129 9 is_stmt 1 view .LVU722
1129:Src/BLDC_controller.c ****       }
 2204              		.loc 1 1129 34 is_stmt 0 view .LVU723
 2205 0154 0023     		movs	r3, #0
 2206              	.LVL202:
1129:Src/BLDC_controller.c ****       }
 2207              		.loc 1 1129 34 view .LVU724
 2208 0156 84F8A930 		strb	r3, [r4, #169]
 2209 015a B5E7     		b	.L175
 2210              	.LVL203:
 2211              	.L178:
1154:Src/BLDC_controller.c ****       /* Switch: '<S17>/Switch1' incorporates:
 2212              		.loc 1 1154 12 is_stmt 1 view .LVU725
1154:Src/BLDC_controller.c ****       /* Switch: '<S17>/Switch1' incorporates:
 2213              		.loc 1 1154 15 is_stmt 0 view .LVU726
 2214 015c B8F1000F 		cmp	r8, #0
 2215 0160 05D0     		beq	.L179
1160:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
ARM GAS  /tmp/cccGHnrd.s 			page 63


 2216              		.loc 1 1160 7 is_stmt 1 view .LVU727
1160:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
 2217              		.loc 1 1160 37 is_stmt 0 view .LVU728
 2218 0162 A889     		ldrh	r0, [r5, #12]
 2219              	.LVL204:
1160:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
 2220              		.loc 1 1160 52 view .LVU729
 2221 0164 0001     		lsls	r0, r0, #4
1160:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
 2222              		.loc 1 1160 58 view .LVU730
 2223 0166 90FBF1F0 		sdiv	r0, r0, r1
1160:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
 2224              		.loc 1 1160 21 view .LVU731
 2225 016a 00B2     		sxth	r0, r0
 2226              	.LVL205:
1160:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev);
 2227              		.loc 1 1160 21 view .LVU732
 2228 016c C2E7     		b	.L177
 2229              	.LVL206:
 2230              	.L179:
1173:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2231              		.loc 1 1173 7 is_stmt 1 view .LVU733
1173:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2232              		.loc 1 1173 48 is_stmt 0 view .LVU734
 2233 016e A889     		ldrh	r0, [r5, #12]
 2234              	.LVL207:
1173:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2235              		.loc 1 1173 34 view .LVU735
 2236 0170 8000     		lsls	r0, r0, #2
 2237 0172 80B2     		uxth	r0, r0
1173:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2238              		.loc 1 1173 69 view .LVU736
 2239 0174 0001     		lsls	r0, r0, #4
1174:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
 2240              		.loc 1 1174 25 view .LVU737
 2241 0176 B4F88480 		ldrh	r8, [r4, #132]
1174:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
 2242              		.loc 1 1174 51 view .LVU738
 2243 017a B4F88690 		ldrh	r9, [r4, #134]
1174:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
 2244              		.loc 1 1174 45 view .LVU739
 2245 017e C844     		add	r8, r8, r9
 2246 0180 1FFA88F8 		uxth	r8, r8
1175:Src/BLDC_controller.c ****     }
 2247              		.loc 1 1175 24 view .LVU740
 2248 0184 B4F88890 		ldrh	r9, [r4, #136]
1174:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
 2249              		.loc 1 1174 74 view .LVU741
 2250 0188 C844     		add	r8, r8, r9
 2251 018a 1FFA88F8 		uxth	r8, r8
1175:Src/BLDC_controller.c ****     }
 2252              		.loc 1 1175 45 view .LVU742
 2253 018e C644     		add	lr, lr, r8
 2254              	.LVL208:
1174:Src/BLDC_controller.c ****                    rtDW->UnitDelay5_DSTATE) + rtDW->z_counterRawPrev));
 2255              		.loc 1 1174 9 view .LVU743
 2256 0190 0FFA8EFE 		sxth	lr, lr
ARM GAS  /tmp/cccGHnrd.s 			page 64


1173:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2257              		.loc 1 1173 75 view .LVU744
 2258 0194 90FBFEF0 		sdiv	r0, r0, lr
1173:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2259              		.loc 1 1173 21 view .LVU745
 2260 0198 00B2     		sxth	r0, r0
 2261              	.LVL209:
1173:Src/BLDC_controller.c ****         (int16_T)(((rtDW->UnitDelay2_DSTATE + rtDW->UnitDelay3_DSTATE_o) +
 2262              		.loc 1 1173 21 view .LVU746
 2263 019a ABE7     		b	.L177
 2264              	.LVL210:
 2265              	.L345:
1148:Src/BLDC_controller.c ****     } else if (rtb_RelationalOperator4_d) {
 2266              		.loc 1 1148 21 view .LVU747
 2267 019c 0020     		movs	r0, #0
 2268              	.LVL211:
1148:Src/BLDC_controller.c ****     } else if (rtb_RelationalOperator4_d) {
 2269              		.loc 1 1148 21 view .LVU748
 2270 019e A9E7     		b	.L177
 2271              	.LVL212:
 2272              	.L437:
1232:Src/BLDC_controller.c ****   } else {
 2273              		.loc 1 1232 5 is_stmt 1 view .LVU749
1232:Src/BLDC_controller.c ****   } else {
 2274              		.loc 1 1232 12 is_stmt 0 view .LVU750
 2275 01a0 5B42     		rsbs	r3, r3, #0
 2276              	.LVL213:
1232:Src/BLDC_controller.c ****   } else {
 2277              		.loc 1 1232 10 view .LVU751
 2278 01a2 1BB2     		sxth	r3, r3
 2279 01a4 0693     		str	r3, [sp, #24]
 2280              	.LVL214:
1232:Src/BLDC_controller.c ****   } else {
 2281              		.loc 1 1232 10 view .LVU752
 2282 01a6 02E0     		b	.L180
 2283              	.LVL215:
 2284              	.L346:
1223:Src/BLDC_controller.c ****   } else {
 2285              		.loc 1 1223 13 view .LVU753
 2286 01a8 0023     		movs	r3, #0
 2287 01aa 0A93     		str	r3, [sp, #40]
 2288              		.loc 1 1234 10 view .LVU754
 2289 01ac 0693     		str	r3, [sp, #24]
 2290              	.L180:
 2291              	.LVL216:
1235:Src/BLDC_controller.c ****   }
1236:Src/BLDC_controller.c **** 
1237:Src/BLDC_controller.c ****   /* End of Abs: '<S13>/Abs5' */
1238:Src/BLDC_controller.c **** 
1239:Src/BLDC_controller.c ****   /* Relay: '<S13>/n_commDeacv' */
1240:Src/BLDC_controller.c ****   if (Abs5 >= rtP->n_commDeacvHi) {
 2292              		.loc 1 1240 3 is_stmt 1 view .LVU755
 2293              		.loc 1 1240 18 is_stmt 0 view .LVU756
 2294 01ae B5F9D430 		ldrsh	r3, [r5, #212]
 2295              		.loc 1 1240 6 view .LVU757
 2296 01b2 069A     		ldr	r2, [sp, #24]
 2297 01b4 9342     		cmp	r3, r2
ARM GAS  /tmp/cccGHnrd.s 			page 65


 2298 01b6 0DDC     		bgt	.L181
1241:Src/BLDC_controller.c ****     rtDW->n_commDeacv_Mode = true;
 2299              		.loc 1 1241 5 is_stmt 1 view .LVU758
 2300              		.loc 1 1241 28 is_stmt 0 view .LVU759
 2301 01b8 0123     		movs	r3, #1
 2302 01ba 84F8A830 		strb	r3, [r4, #168]
 2303              	.L182:
1242:Src/BLDC_controller.c ****   } else {
1243:Src/BLDC_controller.c ****     if (Abs5 <= rtP->n_commAcvLo) {
1244:Src/BLDC_controller.c ****       rtDW->n_commDeacv_Mode = false;
1245:Src/BLDC_controller.c ****     }
1246:Src/BLDC_controller.c ****   }
1247:Src/BLDC_controller.c **** 
1248:Src/BLDC_controller.c ****   /* Logic: '<S13>/Logical Operator3' incorporates:
1249:Src/BLDC_controller.c ****    *  Constant: '<S13>/b_angleMeasEna'
1250:Src/BLDC_controller.c ****    *  Logic: '<S13>/Logical Operator1'
1251:Src/BLDC_controller.c ****    *  Logic: '<S13>/Logical Operator2'
1252:Src/BLDC_controller.c ****    *  Relay: '<S13>/n_commDeacv'
1253:Src/BLDC_controller.c ****    */
1254:Src/BLDC_controller.c ****   rtb_LogicalOperator = (rtP->b_angleMeasEna || (rtDW->n_commDeacv_Mode &&
 2304              		.loc 1 1254 3 is_stmt 1 view .LVU760
 2305              		.loc 1 1254 29 is_stmt 0 view .LVU761
 2306 01be 95F8FB30 		ldrb	r3, [r5, #251]	@ zero_extendqisi2
 2307              		.loc 1 1254 46 view .LVU762
 2308 01c2 83B9     		cbnz	r3, .L348
 2309              		.loc 1 1254 54 discriminator 2 view .LVU763
 2310 01c4 94F8A820 		ldrb	r2, [r4, #168]	@ zero_extendqisi2
 2311              		.loc 1 1254 46 discriminator 2 view .LVU764
 2312 01c8 5AB3     		cbz	r2, .L349
1255:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2313              		.loc 1 1255 11 view .LVU765
 2314 01ca 94F8A220 		ldrb	r2, [r4, #162]	@ zero_extendqisi2
1254:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2315              		.loc 1 1254 73 discriminator 3 view .LVU766
 2316 01ce 52B3     		cbz	r2, .L350
1254:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2317              		.loc 1 1254 46 discriminator 6 view .LVU767
 2318 01d0 0022     		movs	r2, #0
 2319 01d2 09E0     		b	.L183
 2320              	.L181:
1243:Src/BLDC_controller.c ****       rtDW->n_commDeacv_Mode = false;
 2321              		.loc 1 1243 5 is_stmt 1 view .LVU768
1243:Src/BLDC_controller.c ****       rtDW->n_commDeacv_Mode = false;
 2322              		.loc 1 1243 20 is_stmt 0 view .LVU769
 2323 01d4 B5F9D230 		ldrsh	r3, [r5, #210]
1243:Src/BLDC_controller.c ****       rtDW->n_commDeacv_Mode = false;
 2324              		.loc 1 1243 8 view .LVU770
 2325 01d8 069A     		ldr	r2, [sp, #24]
 2326 01da 9342     		cmp	r3, r2
 2327 01dc EFDB     		blt	.L182
1244:Src/BLDC_controller.c ****     }
 2328              		.loc 1 1244 7 is_stmt 1 view .LVU771
1244:Src/BLDC_controller.c ****     }
 2329              		.loc 1 1244 30 is_stmt 0 view .LVU772
 2330 01de 0023     		movs	r3, #0
 2331 01e0 84F8A830 		strb	r3, [r4, #168]
 2332 01e4 EBE7     		b	.L182
ARM GAS  /tmp/cccGHnrd.s 			page 66


 2333              	.L348:
1254:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2334              		.loc 1 1254 46 discriminator 5 view .LVU773
 2335 01e6 0122     		movs	r2, #1
 2336              	.L183:
1254:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2337              		.loc 1 1254 23 discriminator 8 view .LVU774
 2338 01e8 D2B2     		uxtb	r2, r2
 2339 01ea 0992     		str	r2, [sp, #36]
 2340              	.LVL217:
1256:Src/BLDC_controller.c **** 
1257:Src/BLDC_controller.c ****   /* UnitDelay: '<S2>/UnitDelay2' */
1258:Src/BLDC_controller.c ****   rtb_RelationalOperator4_d = rtDW->UnitDelay2_DSTATE_c;
 2341              		.loc 1 1258 3 is_stmt 1 view .LVU775
 2342              		.loc 1 1258 29 is_stmt 0 view .LVU776
 2343 01ec 94F8A320 		ldrb	r2, [r4, #163]	@ zero_extendqisi2
 2344 01f0 0C92     		str	r2, [sp, #48]
 2345              	.LVL218:
1259:Src/BLDC_controller.c **** 
1260:Src/BLDC_controller.c ****   /* UnitDelay: '<S2>/UnitDelay5' */
1261:Src/BLDC_controller.c ****   rtb_UnitDelay5_e = rtDW->UnitDelay5_DSTATE_m;
 2346              		.loc 1 1261 3 is_stmt 1 view .LVU777
 2347              		.loc 1 1261 20 is_stmt 0 view .LVU778
 2348 01f2 94F8A420 		ldrb	r2, [r4, #164]	@ zero_extendqisi2
 2349 01f6 0D92     		str	r2, [sp, #52]
 2350              	.LVL219:
1262:Src/BLDC_controller.c **** 
1263:Src/BLDC_controller.c ****   /* DataTypeConversion: '<S1>/Data Type Conversion2' incorporates:
1264:Src/BLDC_controller.c ****    *  Inport: '<Root>/r_inpTgt'
1265:Src/BLDC_controller.c ****    */
1266:Src/BLDC_controller.c ****   DataTypeConversion2 = (int16_T)(rtU->r_inpTgt << 4);
 2351              		.loc 1 1266 3 is_stmt 1 view .LVU779
 2352              		.loc 1 1266 38 is_stmt 0 view .LVU780
 2353 01f8 B6F90290 		ldrsh	r9, [r6, #2]
 2354              		.loc 1 1266 23 view .LVU781
 2355 01fc 4FEA0919 		lsl	r9, r9, #4
 2356 0200 0FFA89F9 		sxth	r9, r9
 2357              	.LVL220:
1267:Src/BLDC_controller.c **** 
1268:Src/BLDC_controller.c ****   /* Saturate: '<S1>/Saturation' incorporates:
1269:Src/BLDC_controller.c ****    *  Inport: '<Root>/i_phaAB'
1270:Src/BLDC_controller.c ****    */
1271:Src/BLDC_controller.c ****   rtb_Gain3 = rtU->i_phaAB << 4;
 2358              		.loc 1 1271 3 is_stmt 1 view .LVU782
 2359              		.loc 1 1271 18 is_stmt 0 view .LVU783
 2360 0204 B6F908A0 		ldrsh	r10, [r6, #8]
 2361              		.loc 1 1271 13 view .LVU784
 2362 0208 4FEA0A11 		lsl	r1, r10, #4
 2363              	.LVL221:
1272:Src/BLDC_controller.c ****   if (rtb_Gain3 >= 27200) {
 2364              		.loc 1 1272 3 is_stmt 1 view .LVU785
 2365              		.loc 1 1272 6 is_stmt 0 view .LVU786
 2366 020c 46F63F22 		movw	r2, #27199
 2367 0210 B2EB0A1F 		cmp	r2, r10, lsl #4
 2368 0214 09DB     		blt	.L351
1273:Src/BLDC_controller.c ****     rtb_Saturation = 27200;
1274:Src/BLDC_controller.c ****   } else if (rtb_Gain3 <= -27200) {
ARM GAS  /tmp/cccGHnrd.s 			page 67


 2369              		.loc 1 1274 10 is_stmt 1 view .LVU787
 2370              		.loc 1 1274 13 is_stmt 0 view .LVU788
 2371 0216 514A     		ldr	r2, .L469+4
 2372 0218 9142     		cmp	r1, r2
 2373 021a 17DB     		blt	.L352
1275:Src/BLDC_controller.c ****     rtb_Saturation = -27200;
1276:Src/BLDC_controller.c ****   } else {
1277:Src/BLDC_controller.c ****     rtb_Saturation = (int16_T)(rtU->i_phaAB << 4);
 2374              		.loc 1 1277 5 is_stmt 1 view .LVU789
 2375              		.loc 1 1277 20 is_stmt 0 view .LVU790
 2376 021c 0FFA81FA 		sxth	r10, r1
 2377              	.LVL222:
 2378              		.loc 1 1277 20 view .LVU791
 2379 0220 05E0     		b	.L184
 2380              	.LVL223:
 2381              	.L349:
1254:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2382              		.loc 1 1254 46 discriminator 6 view .LVU792
 2383 0222 0022     		movs	r2, #0
 2384 0224 E0E7     		b	.L183
 2385              	.L350:
1254:Src/BLDC_controller.c ****     (!rtDW->dz_cntTrnsDet)));
 2386              		.loc 1 1254 46 discriminator 5 view .LVU793
 2387 0226 0122     		movs	r2, #1
 2388 0228 DEE7     		b	.L183
 2389              	.LVL224:
 2390              	.L351:
1273:Src/BLDC_controller.c ****     rtb_Saturation = 27200;
 2391              		.loc 1 1273 20 view .LVU794
 2392 022a 46F6402A 		movw	r10, #27200
 2393              	.L184:
 2394              	.LVL225:
1278:Src/BLDC_controller.c ****   }
1279:Src/BLDC_controller.c **** 
1280:Src/BLDC_controller.c ****   /* End of Saturate: '<S1>/Saturation' */
1281:Src/BLDC_controller.c **** 
1282:Src/BLDC_controller.c ****   /* Saturate: '<S1>/Saturation1' incorporates:
1283:Src/BLDC_controller.c ****    *  Inport: '<Root>/i_phaBC'
1284:Src/BLDC_controller.c ****    */
1285:Src/BLDC_controller.c ****   rtb_Gain3 = rtU->i_phaBC << 4;
 2395              		.loc 1 1285 3 is_stmt 1 view .LVU795
 2396              		.loc 1 1285 18 is_stmt 0 view .LVU796
 2397 022e B6F90A80 		ldrsh	r8, [r6, #10]
 2398              		.loc 1 1285 13 view .LVU797
 2399 0232 4FEA0811 		lsl	r1, r8, #4
 2400              	.LVL226:
1286:Src/BLDC_controller.c ****   if (rtb_Gain3 >= 27200) {
 2401              		.loc 1 1286 3 is_stmt 1 view .LVU798
 2402              		.loc 1 1286 6 is_stmt 0 view .LVU799
 2403 0236 46F63F22 		movw	r2, #27199
 2404 023a B2EB081F 		cmp	r2, r8, lsl #4
 2405 023e 08DB     		blt	.L353
1287:Src/BLDC_controller.c ****     rtb_Saturation1 = 27200;
1288:Src/BLDC_controller.c ****   } else if (rtb_Gain3 <= -27200) {
 2406              		.loc 1 1288 10 is_stmt 1 view .LVU800
 2407              		.loc 1 1288 13 is_stmt 0 view .LVU801
 2408 0240 464A     		ldr	r2, .L469+4
ARM GAS  /tmp/cccGHnrd.s 			page 68


 2409 0242 9142     		cmp	r1, r2
 2410 0244 7DDB     		blt	.L354
1289:Src/BLDC_controller.c ****     rtb_Saturation1 = -27200;
1290:Src/BLDC_controller.c ****   } else {
1291:Src/BLDC_controller.c ****     rtb_Saturation1 = (int16_T)(rtU->i_phaBC << 4);
 2411              		.loc 1 1291 5 is_stmt 1 view .LVU802
 2412              		.loc 1 1291 21 is_stmt 0 view .LVU803
 2413 0246 0FFA81F8 		sxth	r8, r1
 2414              	.LVL227:
 2415              		.loc 1 1291 21 view .LVU804
 2416 024a 04E0     		b	.L185
 2417              	.LVL228:
 2418              	.L352:
1275:Src/BLDC_controller.c ****   } else {
 2419              		.loc 1 1275 20 view .LVU805
 2420 024c DFF810A1 		ldr	r10, .L469+8
 2421 0250 EDE7     		b	.L184
 2422              	.LVL229:
 2423              	.L353:
1287:Src/BLDC_controller.c ****     rtb_Saturation1 = 27200;
 2424              		.loc 1 1287 21 view .LVU806
 2425 0252 46F64028 		movw	r8, #27200
 2426              	.L185:
 2427              	.LVL230:
1292:Src/BLDC_controller.c ****   }
1293:Src/BLDC_controller.c **** 
1294:Src/BLDC_controller.c ****   /* End of Saturate: '<S1>/Saturation1' */
1295:Src/BLDC_controller.c **** 
1296:Src/BLDC_controller.c ****   /* If: '<S3>/If1' incorporates:
1297:Src/BLDC_controller.c ****    *  Constant: '<S3>/b_angleMeasEna'
1298:Src/BLDC_controller.c ****    */
1299:Src/BLDC_controller.c ****   if (!rtP->b_angleMeasEna) {
 2428              		.loc 1 1299 3 is_stmt 1 view .LVU807
 2429              		.loc 1 1299 6 is_stmt 0 view .LVU808
 2430 0256 002B     		cmp	r3, #0
 2431 0258 40F09C80 		bne	.L186
1300:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S3>/F01_05_Electrical_Angle_Estimation' incorporates:
1301:Src/BLDC_controller.c ****      *  ActionPort: '<S14>/Action Port'
1302:Src/BLDC_controller.c ****      */
1303:Src/BLDC_controller.c ****     /* Switch: '<S14>/Switch2' incorporates:
1304:Src/BLDC_controller.c ****      *  Constant: '<S14>/Constant16'
1305:Src/BLDC_controller.c ****      *  Product: '<S14>/Divide1'
1306:Src/BLDC_controller.c ****      *  Product: '<S14>/Divide3'
1307:Src/BLDC_controller.c ****      *  RelationalOperator: '<S14>/Relational Operator7'
1308:Src/BLDC_controller.c ****      *  Sum: '<S14>/Sum3'
1309:Src/BLDC_controller.c ****      *  Switch: '<S14>/Switch3'
1310:Src/BLDC_controller.c ****      */
1311:Src/BLDC_controller.c ****     if (rtb_LogicalOperator) {
 2432              		.loc 1 1311 5 is_stmt 1 view .LVU809
 2433              		.loc 1 1311 8 is_stmt 0 view .LVU810
 2434 025c 099B     		ldr	r3, [sp, #36]
 2435 025e 002B     		cmp	r3, #0
 2436 0260 00F08280 		beq	.L187
1312:Src/BLDC_controller.c ****       /* MinMax: '<S14>/MinMax' */
1313:Src/BLDC_controller.c ****       rtb_Merge_m = rtb_Switch1_l;
 2437              		.loc 1 1313 7 is_stmt 1 view .LVU811
 2438              	.LVL231:
ARM GAS  /tmp/cccGHnrd.s 			page 69


1314:Src/BLDC_controller.c ****       if (!(rtb_Merge_m < rtDW->z_counterRawPrev)) {
 2439              		.loc 1 1314 7 view .LVU812
 2440              		.loc 1 1314 31 is_stmt 0 view .LVU813
 2441 0264 B4F95600 		ldrsh	r0, [r4, #86]
 2442              	.LVL232:
 2443              		.loc 1 1314 10 view .LVU814
 2444 0268 0B9B     		ldr	r3, [sp, #44]
 2445 026a 9842     		cmp	r0, r3
 2446 026c 00DC     		bgt	.L188
1315:Src/BLDC_controller.c ****         rtb_Merge_m = rtDW->z_counterRawPrev;
 2447              		.loc 1 1315 21 view .LVU815
 2448 026e 0346     		mov	r3, r0
 2449              	.L188:
 2450              	.LVL233:
1316:Src/BLDC_controller.c ****       }
1317:Src/BLDC_controller.c **** 
1318:Src/BLDC_controller.c ****       /* End of MinMax: '<S14>/MinMax' */
1319:Src/BLDC_controller.c **** 
1320:Src/BLDC_controller.c ****       /* Switch: '<S14>/Switch3' incorporates:
1321:Src/BLDC_controller.c ****        *  Constant: '<S11>/vec_hallToPos'
1322:Src/BLDC_controller.c ****        *  Constant: '<S14>/Constant16'
1323:Src/BLDC_controller.c ****        *  RelationalOperator: '<S14>/Relational Operator7'
1324:Src/BLDC_controller.c ****        *  Selector: '<S11>/Selector'
1325:Src/BLDC_controller.c ****        *  Sum: '<S14>/Sum1'
1326:Src/BLDC_controller.c ****        */
1327:Src/BLDC_controller.c ****       if (rtDW->Switch2_e == 1) {
 2451              		.loc 1 1327 7 is_stmt 1 view .LVU816
 2452              		.loc 1 1327 15 is_stmt 0 view .LVU817
 2453 0270 94F98E10 		ldrsb	r1, [r4, #142]
 2454              	.LVL234:
 2455              		.loc 1 1327 10 view .LVU818
 2456 0274 0129     		cmp	r1, #1
 2457 0276 67D0     		beq	.L438
1328:Src/BLDC_controller.c ****         rtb_Sum2_h = rtConstP.vec_hallToPos_Value[Sum];
1329:Src/BLDC_controller.c ****       } else {
1330:Src/BLDC_controller.c ****         rtb_Sum2_h = (int8_T)(rtConstP.vec_hallToPos_Value[Sum] + 1);
 2458              		.loc 1 1330 9 is_stmt 1 view .LVU819
 2459              		.loc 1 1330 59 is_stmt 0 view .LVU820
 2460 0278 374A     		ldr	r2, .L469
 2461 027a DDF81CC0 		ldr	ip, [sp, #28]
 2462 027e 6244     		add	r2, r2, ip
 2463 0280 92F88827 		ldrb	r2, [r2, #1928]	@ zero_extendqisi2
 2464              		.loc 1 1330 65 view .LVU821
 2465 0284 0132     		adds	r2, r2, #1
 2466              		.loc 1 1330 20 view .LVU822
 2467 0286 52B2     		sxtb	r2, r2
 2468              	.LVL235:
 2469              	.L190:
1331:Src/BLDC_controller.c ****       }
1332:Src/BLDC_controller.c **** 
1333:Src/BLDC_controller.c ****       rtb_Merge_m = (int16_T)(((int16_T)((int16_T)((rtb_Merge_m << 14) /
 2470              		.loc 1 1333 7 is_stmt 1 view .LVU823
 2471              		.loc 1 1333 65 is_stmt 0 view .LVU824
 2472 0288 9B03     		lsls	r3, r3, #14
 2473              	.LVL236:
 2474              		.loc 1 1333 72 view .LVU825
 2475 028a 93FBF0F3 		sdiv	r3, r3, r0
ARM GAS  /tmp/cccGHnrd.s 			page 70


 2476              		.loc 1 1333 42 view .LVU826
 2477 028e 9BB2     		uxth	r3, r3
1334:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev) * rtDW->Switch2_e) + (rtb_Sum2_h << 14)) >> 2);
 2478              		.loc 1 1334 39 view .LVU827
 2479 0290 89B2     		uxth	r1, r1
 2480              		.loc 1 1334 33 view .LVU828
 2481 0292 01FB03F3 		mul	r3, r1, r3
1333:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev) * rtDW->Switch2_e) + (rtb_Sum2_h << 14)) >> 2);
 2482              		.loc 1 1333 32 view .LVU829
 2483 0296 1BB2     		sxth	r3, r3
 2484              		.loc 1 1334 52 view .LVU830
 2485 0298 03EB8233 		add	r3, r3, r2, lsl #14
1333:Src/BLDC_controller.c ****         rtDW->z_counterRawPrev) * rtDW->Switch2_e) + (rtb_Sum2_h << 14)) >> 2);
 2486              		.loc 1 1333 19 view .LVU831
 2487 029c 43F38F03 		sbfx	r3, r3, #2, #16
 2488              	.LVL237:
 2489              	.L191:
1335:Src/BLDC_controller.c ****     } else {
1336:Src/BLDC_controller.c ****       if (rtDW->Switch2_e == 1) {
1337:Src/BLDC_controller.c ****         /* Switch: '<S14>/Switch3' incorporates:
1338:Src/BLDC_controller.c ****          *  Constant: '<S11>/vec_hallToPos'
1339:Src/BLDC_controller.c ****          *  Selector: '<S11>/Selector'
1340:Src/BLDC_controller.c ****          */
1341:Src/BLDC_controller.c ****         rtb_Sum2_h = rtConstP.vec_hallToPos_Value[Sum];
1342:Src/BLDC_controller.c ****       } else {
1343:Src/BLDC_controller.c ****         /* Switch: '<S14>/Switch3' incorporates:
1344:Src/BLDC_controller.c ****          *  Constant: '<S11>/vec_hallToPos'
1345:Src/BLDC_controller.c ****          *  Selector: '<S11>/Selector'
1346:Src/BLDC_controller.c ****          *  Sum: '<S14>/Sum1'
1347:Src/BLDC_controller.c ****          */
1348:Src/BLDC_controller.c ****         rtb_Sum2_h = (int8_T)(rtConstP.vec_hallToPos_Value[Sum] + 1);
1349:Src/BLDC_controller.c ****       }
1350:Src/BLDC_controller.c **** 
1351:Src/BLDC_controller.c ****       rtb_Merge_m = (int16_T)(rtb_Sum2_h << 12);
1352:Src/BLDC_controller.c ****     }
1353:Src/BLDC_controller.c **** 
1354:Src/BLDC_controller.c ****     /* End of Switch: '<S14>/Switch2' */
1355:Src/BLDC_controller.c **** 
1356:Src/BLDC_controller.c ****     /* MinMax: '<S14>/MinMax1' incorporates:
1357:Src/BLDC_controller.c ****      *  Constant: '<S14>/Constant1'
1358:Src/BLDC_controller.c ****      */
1359:Src/BLDC_controller.c ****     if (!(rtb_Merge_m > 0)) {
 2490              		.loc 1 1359 5 is_stmt 1 view .LVU832
 2491              		.loc 1 1359 8 is_stmt 0 view .LVU833
 2492 02a0 002B     		cmp	r3, #0
 2493 02a2 75DD     		ble	.L439
 2494              	.LVL238:
 2495              	.L194:
1360:Src/BLDC_controller.c ****       rtb_Merge_m = 0;
1361:Src/BLDC_controller.c ****     }
1362:Src/BLDC_controller.c **** 
1363:Src/BLDC_controller.c ****     /* End of MinMax: '<S14>/MinMax1' */
1364:Src/BLDC_controller.c **** 
1365:Src/BLDC_controller.c ****     /* SignalConversion: '<S14>/Signal Conversion2' incorporates:
1366:Src/BLDC_controller.c ****      *  Product: '<S14>/Divide2'
1367:Src/BLDC_controller.c ****      */
1368:Src/BLDC_controller.c ****     rtb_Merge_m = (int16_T)((15 * rtb_Merge_m) >> 4);
ARM GAS  /tmp/cccGHnrd.s 			page 71


 2496              		.loc 1 1368 5 is_stmt 1 view .LVU834
 2497              		.loc 1 1368 33 is_stmt 0 view .LVU835
 2498 02a4 C3EB0313 		rsb	r3, r3, r3, lsl #4
 2499              	.LVL239:
 2500              		.loc 1 1368 17 view .LVU836
 2501 02a8 43F30F13 		sbfx	r3, r3, #4, #16
 2502 02ac 0893     		str	r3, [sp, #32]
 2503              	.LVL240:
 2504              	.L195:
1369:Src/BLDC_controller.c **** 
1370:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S3>/F01_05_Electrical_Angle_Estimation' */
1371:Src/BLDC_controller.c ****   } else {
1372:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S3>/F01_06_Electrical_Angle_Measurement' incorporates:
1373:Src/BLDC_controller.c ****      *  ActionPort: '<S15>/Action Port'
1374:Src/BLDC_controller.c ****      */
1375:Src/BLDC_controller.c ****     /* Sum: '<S15>/Sum1' incorporates:
1376:Src/BLDC_controller.c ****      *  Constant: '<S15>/Constant2'
1377:Src/BLDC_controller.c ****      *  Constant: '<S15>/n_polePairs'
1378:Src/BLDC_controller.c ****      *  Inport: '<Root>/a_mechAngle'
1379:Src/BLDC_controller.c ****      *  Product: '<S15>/Divide'
1380:Src/BLDC_controller.c ****      */
1381:Src/BLDC_controller.c ****     rtb_Sum1_jt = rtU->a_mechAngle * rtP->n_polePairs - 480;
1382:Src/BLDC_controller.c **** 
1383:Src/BLDC_controller.c ****     /* DataTypeConversion: '<S15>/Data Type Conversion20' incorporates:
1384:Src/BLDC_controller.c ****      *  Constant: '<S15>/a_elecPeriod'
1385:Src/BLDC_controller.c ****      *  Product: '<S19>/Divide2'
1386:Src/BLDC_controller.c ****      *  Product: '<S19>/Divide3'
1387:Src/BLDC_controller.c ****      *  Sum: '<S19>/Sum3'
1388:Src/BLDC_controller.c ****      */
1389:Src/BLDC_controller.c ****     rtb_Merge_m = (int16_T)((int16_T)(rtb_Sum1_jt - ((int16_T)((int16_T)
1390:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
1391:Src/BLDC_controller.c **** 
1392:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S3>/F01_06_Electrical_Angle_Measurement' */
1393:Src/BLDC_controller.c ****   }
1394:Src/BLDC_controller.c **** 
1395:Src/BLDC_controller.c ****   /* End of If: '<S3>/If1' */
1396:Src/BLDC_controller.c **** 
1397:Src/BLDC_controller.c ****   /* If: '<S7>/If1' incorporates:
1398:Src/BLDC_controller.c ****    *  Constant: '<S1>/z_ctrlTypSel'
1399:Src/BLDC_controller.c ****    */
1400:Src/BLDC_controller.c ****   rtb_Sum2_h = rtDW->If1_ActiveSubsystem;
 2505              		.loc 1 1400 3 is_stmt 1 view .LVU837
 2506              		.loc 1 1400 14 is_stmt 0 view .LVU838
 2507 02ae 94F99030 		ldrsb	r3, [r4, #144]
 2508              	.LVL241:
1401:Src/BLDC_controller.c ****   UnitDelay3 = -1;
 2509              		.loc 1 1401 3 is_stmt 1 view .LVU839
1402:Src/BLDC_controller.c ****   if (rtP->z_ctrlTypSel == 2) {
 2510              		.loc 1 1402 3 view .LVU840
 2511              		.loc 1 1402 10 is_stmt 0 view .LVU841
 2512 02b2 95F8F920 		ldrb	r2, [r5, #249]	@ zero_extendqisi2
 2513              		.loc 1 1402 6 view .LVU842
 2514 02b6 022A     		cmp	r2, #2
 2515 02b8 00F08C80 		beq	.L357
1401:Src/BLDC_controller.c ****   UnitDelay3 = -1;
 2516              		.loc 1 1401 14 view .LVU843
 2517 02bc 4FF0FF3B 		mov	fp, #-1
ARM GAS  /tmp/cccGHnrd.s 			page 72


 2518              	.L196:
 2519              	.LVL242:
1403:Src/BLDC_controller.c ****     UnitDelay3 = 0;
1404:Src/BLDC_controller.c ****   }
1405:Src/BLDC_controller.c **** 
1406:Src/BLDC_controller.c ****   rtDW->If1_ActiveSubsystem = UnitDelay3;
 2520              		.loc 1 1406 3 is_stmt 1 view .LVU844
 2521              		.loc 1 1406 29 is_stmt 0 view .LVU845
 2522 02c0 84F890B0 		strb	fp, [r4, #144]
1407:Src/BLDC_controller.c ****   if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 2523              		.loc 1 1407 3 is_stmt 1 view .LVU846
 2524              		.loc 1 1407 6 is_stmt 0 view .LVU847
 2525 02c4 9B45     		cmp	fp, r3
 2526 02c6 17D0     		beq	.L197
 2527              		.loc 1 1407 34 discriminator 1 view .LVU848
 2528 02c8 B3B9     		cbnz	r3, .L197
1408:Src/BLDC_controller.c ****     /* Disable for If: '<S45>/If2' */
1409:Src/BLDC_controller.c ****     if (rtDW->If2_ActiveSubsystem_a == 0) {
 2529              		.loc 1 1409 5 is_stmt 1 view .LVU849
 2530              		.loc 1 1409 13 is_stmt 0 view .LVU850
 2531 02ca 94F99830 		ldrsb	r3, [r4, #152]
 2532              	.LVL243:
 2533              		.loc 1 1409 8 view .LVU851
 2534 02ce 2BB9     		cbnz	r3, .L198
1410:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/iq' */
1411:Src/BLDC_controller.c ****       rtDW->DataTypeConversion[0] = 0;
 2535              		.loc 1 1411 7 is_stmt 1 view .LVU852
 2536              		.loc 1 1411 35 is_stmt 0 view .LVU853
 2537 02d0 A4F85230 		strh	r3, [r4, #82]	@ movhi
1412:Src/BLDC_controller.c **** 
1413:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/iqAbs' */
1414:Src/BLDC_controller.c ****       rtDW->Abs5_h = 0;
 2538              		.loc 1 1414 7 is_stmt 1 view .LVU854
 2539              		.loc 1 1414 20 is_stmt 0 view .LVU855
 2540 02d4 A4F87830 		strh	r3, [r4, #120]	@ movhi
1415:Src/BLDC_controller.c **** 
1416:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/id' */
1417:Src/BLDC_controller.c ****       rtDW->DataTypeConversion[1] = 0;
 2541              		.loc 1 1417 7 is_stmt 1 view .LVU856
 2542              		.loc 1 1417 35 is_stmt 0 view .LVU857
 2543 02d8 A4F85430 		strh	r3, [r4, #84]	@ movhi
 2544              	.L198:
1418:Src/BLDC_controller.c ****     }
1419:Src/BLDC_controller.c **** 
1420:Src/BLDC_controller.c ****     rtDW->If2_ActiveSubsystem_a = -1;
 2545              		.loc 1 1420 5 is_stmt 1 view .LVU858
 2546              		.loc 1 1420 33 is_stmt 0 view .LVU859
 2547 02dc FF23     		movs	r3, #255
 2548 02de 84F89830 		strb	r3, [r4, #152]
1421:Src/BLDC_controller.c **** 
1422:Src/BLDC_controller.c ****     /* End of Disable for If: '<S45>/If2' */
1423:Src/BLDC_controller.c **** 
1424:Src/BLDC_controller.c ****     /* Disable for Outport: '<S45>/r_sin' */
1425:Src/BLDC_controller.c ****     rtDW->r_sin_M1 = 0;
 2549              		.loc 1 1425 5 is_stmt 1 view .LVU860
 2550              		.loc 1 1425 20 is_stmt 0 view .LVU861
 2551 02e2 0023     		movs	r3, #0
ARM GAS  /tmp/cccGHnrd.s 			page 73


 2552 02e4 A4F87C30 		strh	r3, [r4, #124]	@ movhi
1426:Src/BLDC_controller.c **** 
1427:Src/BLDC_controller.c ****     /* Disable for Outport: '<S45>/r_cos' */
1428:Src/BLDC_controller.c ****     rtDW->r_cos_M1 = 0;
 2553              		.loc 1 1428 5 is_stmt 1 view .LVU862
 2554              		.loc 1 1428 20 is_stmt 0 view .LVU863
 2555 02e8 A4F87E30 		strh	r3, [r4, #126]	@ movhi
1429:Src/BLDC_controller.c **** 
1430:Src/BLDC_controller.c ****     /* Disable for Outport: '<S45>/iq' */
1431:Src/BLDC_controller.c ****     rtDW->DataTypeConversion[0] = 0;
 2556              		.loc 1 1431 5 is_stmt 1 view .LVU864
 2557              		.loc 1 1431 33 is_stmt 0 view .LVU865
 2558 02ec A4F85230 		strh	r3, [r4, #82]	@ movhi
1432:Src/BLDC_controller.c **** 
1433:Src/BLDC_controller.c ****     /* Disable for Outport: '<S45>/id' */
1434:Src/BLDC_controller.c ****     rtDW->DataTypeConversion[1] = 0;
 2559              		.loc 1 1434 5 is_stmt 1 view .LVU866
 2560              		.loc 1 1434 33 is_stmt 0 view .LVU867
 2561 02f0 A4F85430 		strh	r3, [r4, #84]	@ movhi
1435:Src/BLDC_controller.c **** 
1436:Src/BLDC_controller.c ****     /* Disable for Outport: '<S45>/iqAbs' */
1437:Src/BLDC_controller.c ****     rtDW->Abs5_h = 0;
 2562              		.loc 1 1437 5 is_stmt 1 view .LVU868
 2563              		.loc 1 1437 18 is_stmt 0 view .LVU869
 2564 02f4 A4F87830 		strh	r3, [r4, #120]	@ movhi
 2565              	.L197:
1438:Src/BLDC_controller.c ****   }
1439:Src/BLDC_controller.c **** 
1440:Src/BLDC_controller.c ****   if (UnitDelay3 == 0) {
 2566              		.loc 1 1440 3 is_stmt 1 view .LVU870
 2567              		.loc 1 1440 6 is_stmt 0 view .LVU871
 2568 02f8 BBF1000F 		cmp	fp, #0
 2569 02fc 40F04281 		bne	.L199
1441:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S7>/Clarke_Park_Transform_Forward' incorporates:
1442:Src/BLDC_controller.c ****      *  ActionPort: '<S45>/Action Port'
1443:Src/BLDC_controller.c ****      */
1444:Src/BLDC_controller.c ****     /* If: '<S49>/If1' incorporates:
1445:Src/BLDC_controller.c ****      *  Constant: '<S49>/z_selPhaCurMeasABC'
1446:Src/BLDC_controller.c ****      */
1447:Src/BLDC_controller.c ****     if (rtP->z_selPhaCurMeasABC == 0) {
 2570              		.loc 1 1447 5 is_stmt 1 view .LVU872
 2571              		.loc 1 1447 12 is_stmt 0 view .LVU873
 2572 0300 95F8FA30 		ldrb	r3, [r5, #250]	@ zero_extendqisi2
 2573              		.loc 1 1447 8 view .LVU874
 2574 0304 002B     		cmp	r3, #0
 2575 0306 40F0B580 		bne	.L200
1448:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S49>/Clarke_PhasesAB' incorporates:
1449:Src/BLDC_controller.c ****        *  ActionPort: '<S53>/Action Port'
1450:Src/BLDC_controller.c ****        */
1451:Src/BLDC_controller.c ****       /* Gain: '<S53>/Gain4' */
1452:Src/BLDC_controller.c ****       rtb_Gain3 = 18919 * rtb_Saturation;
 2576              		.loc 1 1452 7 is_stmt 1 view .LVU875
 2577              		.loc 1 1452 17 is_stmt 0 view .LVU876
 2578 030a 44F6E713 		movw	r3, #18919
 2579 030e 03FB0AF2 		mul	r2, r3, r10
 2580              	.LVL244:
1453:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 74


1454:Src/BLDC_controller.c ****       /* Gain: '<S53>/Gain2' */
1455:Src/BLDC_controller.c ****       rtb_Sum1_jt = 18919 * rtb_Saturation1;
 2581              		.loc 1 1455 7 is_stmt 1 view .LVU877
 2582              		.loc 1 1455 19 is_stmt 0 view .LVU878
 2583 0312 03FB08F3 		mul	r3, r3, r8
 2584              	.LVL245:
1456:Src/BLDC_controller.c **** 
1457:Src/BLDC_controller.c ****       /* Sum: '<S53>/Sum1' incorporates:
1458:Src/BLDC_controller.c ****        *  Gain: '<S53>/Gain2'
1459:Src/BLDC_controller.c ****        *  Gain: '<S53>/Gain4'
1460:Src/BLDC_controller.c ****        */
1461:Src/BLDC_controller.c ****       rtb_Gain3 = (((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15) + (int16_T)
 2585              		.loc 1 1461 7 is_stmt 1 view .LVU879
 2586              		.loc 1 1461 44 is_stmt 0 view .LVU880
 2587 0316 002A     		cmp	r2, #0
 2588 0318 5FDB     		blt	.L440
 2589              		.loc 1 1461 44 discriminator 2 view .LVU881
 2590 031a 4FF00008 		mov	r8, #0
 2591              	.LVL246:
 2592              	.L201:
 2593              		.loc 1 1461 49 discriminator 4 view .LVU882
 2594 031e 9044     		add	r8, r8, r2
 2595              		.loc 1 1461 62 discriminator 4 view .LVU883
 2596 0320 4FEAE838 		asr	r8, r8, #15
1462:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2597              		.loc 1 1462 36 view .LVU884
 2598 0324 002B     		cmp	r3, #0
 2599 0326 5BDB     		blt	.L441
 2600              		.loc 1 1462 36 discriminator 2 view .LVU885
 2601 0328 0022     		movs	r2, #0
 2602              	.LVL247:
 2603              	.L202:
 2604              		.loc 1 1462 41 discriminator 4 view .LVU886
 2605 032a 1344     		add	r3, r3, r2
 2606              	.LVL248:
1461:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2607              		.loc 1 1461 71 view .LVU887
 2608 032c 43F38F33 		sbfx	r3, r3, #14, #16
1461:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2609              		.loc 1 1461 17 view .LVU888
 2610 0330 4344     		add	r3, r3, r8
 2611              	.LVL249:
1463:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2612              		.loc 1 1463 7 is_stmt 1 view .LVU889
 2613              		.loc 1 1463 10 is_stmt 0 view .LVU890
 2614 0332 B3F5004F 		cmp	r3, #32768
 2615 0336 56DA     		bge	.L360
1464:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1465:Src/BLDC_controller.c ****       } else {
1466:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
 2616              		.loc 1 1466 9 is_stmt 1 view .LVU891
 2617              		.loc 1 1466 12 is_stmt 0 view .LVU892
 2618 0338 13F5004F 		cmn	r3, #32768
 2619 033c 55DA     		bge	.L203
1467:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2620              		.loc 1 1467 21 view .LVU893
 2621 033e 094B     		ldr	r3, .L469+12
ARM GAS  /tmp/cccGHnrd.s 			page 75


 2622              	.LVL250:
 2623              		.loc 1 1467 21 view .LVU894
 2624 0340 53E0     		b	.L203
 2625              	.LVL251:
 2626              	.L354:
1289:Src/BLDC_controller.c ****   } else {
 2627              		.loc 1 1289 21 view .LVU895
 2628 0342 DFF81C80 		ldr	r8, .L469+8
 2629 0346 86E7     		b	.L185
 2630              	.LVL252:
 2631              	.L438:
1328:Src/BLDC_controller.c ****       } else {
 2632              		.loc 1 1328 9 is_stmt 1 view .LVU896
1328:Src/BLDC_controller.c ****       } else {
 2633              		.loc 1 1328 20 is_stmt 0 view .LVU897
 2634 0348 034A     		ldr	r2, .L469
 2635 034a DDF81CC0 		ldr	ip, [sp, #28]
 2636 034e 6244     		add	r2, r2, ip
 2637 0350 92F98827 		ldrsb	r2, [r2, #1928]
 2638              	.LVL253:
1328:Src/BLDC_controller.c ****       } else {
 2639              		.loc 1 1328 20 view .LVU898
 2640 0354 98E7     		b	.L190
 2641              	.L470:
 2642 0356 00BF     		.align	2
 2643              	.L469:
 2644 0358 00000000 		.word	rtConstP
 2645 035c C195FFFF 		.word	-27199
 2646 0360 C095FFFF 		.word	-27200
 2647 0364 0080FFFF 		.word	-32768
 2648              	.LVL254:
 2649              	.L187:
1336:Src/BLDC_controller.c ****         /* Switch: '<S14>/Switch3' incorporates:
 2650              		.loc 1 1336 7 is_stmt 1 view .LVU899
1336:Src/BLDC_controller.c ****         /* Switch: '<S14>/Switch3' incorporates:
 2651              		.loc 1 1336 15 is_stmt 0 view .LVU900
 2652 0368 94F98E30 		ldrsb	r3, [r4, #142]
1336:Src/BLDC_controller.c ****         /* Switch: '<S14>/Switch3' incorporates:
 2653              		.loc 1 1336 10 view .LVU901
 2654 036c 012B     		cmp	r3, #1
 2655 036e 09D0     		beq	.L442
1348:Src/BLDC_controller.c ****       }
 2656              		.loc 1 1348 9 is_stmt 1 view .LVU902
1348:Src/BLDC_controller.c ****       }
 2657              		.loc 1 1348 59 is_stmt 0 view .LVU903
 2658 0370 BC4B     		ldr	r3, .L471
 2659 0372 079A     		ldr	r2, [sp, #28]
 2660 0374 1344     		add	r3, r3, r2
 2661 0376 93F88837 		ldrb	r3, [r3, #1928]	@ zero_extendqisi2
1348:Src/BLDC_controller.c ****       }
 2662              		.loc 1 1348 65 view .LVU904
 2663 037a 0133     		adds	r3, r3, #1
1348:Src/BLDC_controller.c ****       }
 2664              		.loc 1 1348 20 view .LVU905
 2665 037c 5BB2     		sxtb	r3, r3
 2666              	.LVL255:
 2667              	.L193:
ARM GAS  /tmp/cccGHnrd.s 			page 76


1351:Src/BLDC_controller.c ****     }
 2668              		.loc 1 1351 7 is_stmt 1 view .LVU906
1351:Src/BLDC_controller.c ****     }
 2669              		.loc 1 1351 19 is_stmt 0 view .LVU907
 2670 037e 1B03     		lsls	r3, r3, #12
 2671              	.LVL256:
1351:Src/BLDC_controller.c ****     }
 2672              		.loc 1 1351 19 view .LVU908
 2673 0380 1BB2     		sxth	r3, r3
 2674              	.LVL257:
1351:Src/BLDC_controller.c ****     }
 2675              		.loc 1 1351 19 view .LVU909
 2676 0382 8DE7     		b	.L191
 2677              	.LVL258:
 2678              	.L442:
1341:Src/BLDC_controller.c ****       } else {
 2679              		.loc 1 1341 9 is_stmt 1 view .LVU910
1341:Src/BLDC_controller.c ****       } else {
 2680              		.loc 1 1341 20 is_stmt 0 view .LVU911
 2681 0384 B74B     		ldr	r3, .L471
 2682 0386 079A     		ldr	r2, [sp, #28]
 2683 0388 1344     		add	r3, r3, r2
 2684 038a 93F98837 		ldrsb	r3, [r3, #1928]
 2685              	.LVL259:
1341:Src/BLDC_controller.c ****       } else {
 2686              		.loc 1 1341 20 view .LVU912
 2687 038e F6E7     		b	.L193
 2688              	.LVL260:
 2689              	.L439:
1360:Src/BLDC_controller.c ****     }
 2690              		.loc 1 1360 19 view .LVU913
 2691 0390 0023     		movs	r3, #0
 2692              	.LVL261:
1360:Src/BLDC_controller.c ****     }
 2693              		.loc 1 1360 19 view .LVU914
 2694 0392 87E7     		b	.L194
 2695              	.LVL262:
 2696              	.L186:
1381:Src/BLDC_controller.c **** 
 2697              		.loc 1 1381 5 is_stmt 1 view .LVU915
1381:Src/BLDC_controller.c **** 
 2698              		.loc 1 1381 22 is_stmt 0 view .LVU916
 2699 0394 B6F90EB0 		ldrsh	fp, [r6, #14]
1381:Src/BLDC_controller.c **** 
 2700              		.loc 1 1381 41 view .LVU917
 2701 0398 95F8F830 		ldrb	r3, [r5, #248]	@ zero_extendqisi2
1381:Src/BLDC_controller.c **** 
 2702              		.loc 1 1381 36 view .LVU918
 2703 039c 03FB0BFB 		mul	fp, r3, fp
1381:Src/BLDC_controller.c **** 
 2704              		.loc 1 1381 17 view .LVU919
 2705 03a0 ABF5F07B 		sub	fp, fp, #480
 2706              	.LVL263:
1389:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2707              		.loc 1 1389 5 is_stmt 1 view .LVU920
1390:Src/BLDC_controller.c **** 
 2708              		.loc 1 1390 7 is_stmt 0 view .LVU921
ARM GAS  /tmp/cccGHnrd.s 			page 77


 2709 03a4 4FF4B451 		mov	r1, #5760
 2710              	.LVL264:
1390:Src/BLDC_controller.c **** 
 2711              		.loc 1 1390 7 view .LVU922
 2712 03a8 5846     		mov	r0, fp
 2713              	.LVL265:
1390:Src/BLDC_controller.c **** 
 2714              		.loc 1 1390 7 view .LVU923
 2715 03aa FFF7FEFF 		bl	div_nde_s32_floor
 2716              	.LVL266:
1389:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2717              		.loc 1 1389 64 view .LVU924
 2718 03ae 80B2     		uxth	r0, r0
1390:Src/BLDC_controller.c **** 
 2719              		.loc 1 1390 44 view .LVU925
 2720 03b0 00EB4000 		add	r0, r0, r0, lsl #1
 2721 03b4 C0EB0013 		rsb	r3, r0, r0, lsl #4
 2722 03b8 DB00     		lsls	r3, r3, #3
 2723 03ba 9BB2     		uxth	r3, r3
1390:Src/BLDC_controller.c **** 
 2724              		.loc 1 1390 51 view .LVU926
 2725 03bc 1B01     		lsls	r3, r3, #4
 2726 03be 9BB2     		uxth	r3, r3
1389:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2727              		.loc 1 1389 51 view .LVU927
 2728 03c0 ABEB030B 		sub	fp, fp, r3
 2729              	.LVL267:
1389:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2730              		.loc 1 1389 29 view .LVU928
 2731 03c4 0FFA8BFB 		sxth	fp, fp
1389:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2732              		.loc 1 1389 17 view .LVU929
 2733 03c8 4FEA8B0B 		lsl	fp, fp, #2
 2734 03cc 0FFA8BF3 		sxth	r3, fp
 2735 03d0 0893     		str	r3, [sp, #32]
 2736              	.LVL268:
1389:Src/BLDC_controller.c ****       div_nde_s32_floor(rtb_Sum1_jt, 5760) * 360) << 4)) << 2);
 2737              		.loc 1 1389 17 view .LVU930
 2738 03d2 6CE7     		b	.L195
 2739              	.LVL269:
 2740              	.L357:
1403:Src/BLDC_controller.c ****   }
 2741              		.loc 1 1403 16 view .LVU931
 2742 03d4 4FF0000B 		mov	fp, #0
 2743 03d8 72E7     		b	.L196
 2744              	.LVL270:
 2745              	.L440:
1461:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2746              		.loc 1 1461 44 discriminator 1 view .LVU932
 2747 03da 47F6FF78 		movw	r8, #32767
 2748              	.LVL271:
1461:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2749              		.loc 1 1461 44 discriminator 1 view .LVU933
 2750 03de 9EE7     		b	.L201
 2751              	.L441:
1462:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2752              		.loc 1 1462 36 discriminator 1 view .LVU934
ARM GAS  /tmp/cccGHnrd.s 			page 78


 2753 03e0 43F6FF72 		movw	r2, #16383
 2754              	.LVL272:
1462:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2755              		.loc 1 1462 36 discriminator 1 view .LVU935
 2756 03e4 A1E7     		b	.L202
 2757              	.LVL273:
 2758              	.L360:
1464:Src/BLDC_controller.c ****       } else {
 2759              		.loc 1 1464 19 view .LVU936
 2760 03e6 47F6FF73 		movw	r3, #32767
 2761              	.LVL274:
 2762              	.L203:
1468:Src/BLDC_controller.c ****         }
1469:Src/BLDC_controller.c ****       }
1470:Src/BLDC_controller.c **** 
1471:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)rtb_Gain3;
 2763              		.loc 1 1471 7 is_stmt 1 view .LVU937
 2764              		.loc 1 1471 18 is_stmt 0 view .LVU938
 2765 03ea 0FFA83F8 		sxth	r8, r3
 2766              	.LVL275:
 2767              	.L204:
1472:Src/BLDC_controller.c **** 
1473:Src/BLDC_controller.c ****       /* End of Sum: '<S53>/Sum1' */
1474:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S49>/Clarke_PhasesAB' */
1475:Src/BLDC_controller.c ****     } else if (rtP->z_selPhaCurMeasABC == 1) {
1476:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S49>/Clarke_PhasesBC' incorporates:
1477:Src/BLDC_controller.c ****        *  ActionPort: '<S55>/Action Port'
1478:Src/BLDC_controller.c ****        */
1479:Src/BLDC_controller.c ****       /* Sum: '<S55>/Sum3' */
1480:Src/BLDC_controller.c ****       rtb_Gain3 = rtb_Saturation - rtb_Saturation1;
1481:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
1482:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1483:Src/BLDC_controller.c ****       } else {
1484:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
1485:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
1486:Src/BLDC_controller.c ****         }
1487:Src/BLDC_controller.c ****       }
1488:Src/BLDC_controller.c **** 
1489:Src/BLDC_controller.c ****       /* Gain: '<S55>/Gain2' incorporates:
1490:Src/BLDC_controller.c ****        *  Sum: '<S55>/Sum3'
1491:Src/BLDC_controller.c ****        */
1492:Src/BLDC_controller.c ****       rtb_Gain3 *= 18919;
1493:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)(((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15);
1494:Src/BLDC_controller.c **** 
1495:Src/BLDC_controller.c ****       /* Sum: '<S55>/Sum1' */
1496:Src/BLDC_controller.c ****       rtb_Gain3 = -rtb_Saturation - rtb_Saturation1;
1497:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
1498:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1499:Src/BLDC_controller.c ****       } else {
1500:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
1501:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
1502:Src/BLDC_controller.c ****         }
1503:Src/BLDC_controller.c ****       }
1504:Src/BLDC_controller.c **** 
1505:Src/BLDC_controller.c ****       rtb_Saturation = (int16_T)rtb_Gain3;
1506:Src/BLDC_controller.c **** 
1507:Src/BLDC_controller.c ****       /* End of Sum: '<S55>/Sum1' */
ARM GAS  /tmp/cccGHnrd.s 			page 79


1508:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S49>/Clarke_PhasesBC' */
1509:Src/BLDC_controller.c ****     } else {
1510:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S49>/Clarke_PhasesAC' incorporates:
1511:Src/BLDC_controller.c ****        *  ActionPort: '<S54>/Action Port'
1512:Src/BLDC_controller.c ****        */
1513:Src/BLDC_controller.c ****       /* Gain: '<S54>/Gain4' */
1514:Src/BLDC_controller.c ****       rtb_Gain3 = 18919 * rtb_Saturation;
1515:Src/BLDC_controller.c **** 
1516:Src/BLDC_controller.c ****       /* Gain: '<S54>/Gain2' */
1517:Src/BLDC_controller.c ****       rtb_Sum1_jt = 18919 * rtb_Saturation1;
1518:Src/BLDC_controller.c **** 
1519:Src/BLDC_controller.c ****       /* Sum: '<S54>/Sum1' incorporates:
1520:Src/BLDC_controller.c ****        *  Gain: '<S54>/Gain2'
1521:Src/BLDC_controller.c ****        *  Gain: '<S54>/Gain4'
1522:Src/BLDC_controller.c ****        */
1523:Src/BLDC_controller.c ****       rtb_Gain3 = -(((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15) - (int16_T)
1524:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
1525:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
1526:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1527:Src/BLDC_controller.c ****       } else {
1528:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
1529:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
1530:Src/BLDC_controller.c ****         }
1531:Src/BLDC_controller.c ****       }
1532:Src/BLDC_controller.c **** 
1533:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)rtb_Gain3;
1534:Src/BLDC_controller.c **** 
1535:Src/BLDC_controller.c ****       /* End of Sum: '<S54>/Sum1' */
1536:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S49>/Clarke_PhasesAC' */
1537:Src/BLDC_controller.c ****     }
1538:Src/BLDC_controller.c **** 
1539:Src/BLDC_controller.c ****     /* End of If: '<S49>/If1' */
1540:Src/BLDC_controller.c **** 
1541:Src/BLDC_controller.c ****     /* PreLookup: '<S52>/a_elecAngle_XA' */
1542:Src/BLDC_controller.c ****     rtb_a_elecAngle_XA_g = plook_u8s16_evencka(rtb_Merge_m, 0, 128U, 180U);
 2768              		.loc 1 1542 5 is_stmt 1 view .LVU939
 2769              		.loc 1 1542 28 is_stmt 0 view .LVU940
 2770 03ee B423     		movs	r3, #180
 2771              	.LVL276:
 2772              		.loc 1 1542 28 view .LVU941
 2773 03f0 8022     		movs	r2, #128
 2774 03f2 0021     		movs	r1, #0
 2775 03f4 0898     		ldr	r0, [sp, #32]
 2776 03f6 FFF7FEFF 		bl	plook_u8s16_evencka
 2777              	.LVL277:
1543:Src/BLDC_controller.c **** 
1544:Src/BLDC_controller.c ****     /* Interpolation_n-D: '<S52>/r_sin_M1' */
1545:Src/BLDC_controller.c ****     rtDW->r_sin_M1 = rtConstP.r_sin_M1_Table[rtb_a_elecAngle_XA_g];
 2778              		.loc 1 1545 5 is_stmt 1 view .LVU942
 2779              		.loc 1 1545 45 is_stmt 0 view .LVU943
 2780 03fa 9A4B     		ldr	r3, .L471
 2781 03fc 33F91020 		ldrsh	r2, [r3, r0, lsl #1]
 2782              		.loc 1 1545 20 view .LVU944
 2783 0400 A4F87C20 		strh	r2, [r4, #124]	@ movhi
1546:Src/BLDC_controller.c **** 
1547:Src/BLDC_controller.c ****     /* Interpolation_n-D: '<S52>/r_cos_M1' */
1548:Src/BLDC_controller.c ****     rtDW->r_cos_M1 = rtConstP.r_cos_M1_Table[rtb_a_elecAngle_XA_g];
ARM GAS  /tmp/cccGHnrd.s 			page 80


 2784              		.loc 1 1548 5 is_stmt 1 view .LVU945
 2785              		.loc 1 1548 45 is_stmt 0 view .LVU946
 2786 0404 B430     		adds	r0, r0, #180
 2787              	.LVL278:
 2788              		.loc 1 1548 45 view .LVU947
 2789 0406 03EB4003 		add	r3, r3, r0, lsl #1
 2790 040a B3F90230 		ldrsh	r3, [r3, #2]
 2791              		.loc 1 1548 20 view .LVU948
 2792 040e A4F87E30 		strh	r3, [r4, #126]	@ movhi
1549:Src/BLDC_controller.c **** 
1550:Src/BLDC_controller.c ****     /* If: '<S45>/If2' incorporates:
1551:Src/BLDC_controller.c ****      *  Constant: '<S50>/cf_currFilt'
1552:Src/BLDC_controller.c ****      *  Inport: '<Root>/b_motEna'
1553:Src/BLDC_controller.c ****      */
1554:Src/BLDC_controller.c ****     rtb_Sum2_h = rtDW->If2_ActiveSubsystem_a;
 2793              		.loc 1 1554 5 is_stmt 1 view .LVU949
 2794              		.loc 1 1554 16 is_stmt 0 view .LVU950
 2795 0412 94F99830 		ldrsb	r3, [r4, #152]
 2796              	.LVL279:
1555:Src/BLDC_controller.c ****     UnitDelay3 = -1;
 2797              		.loc 1 1555 5 is_stmt 1 view .LVU951
1556:Src/BLDC_controller.c ****     if (rtU->b_motEna) {
 2798              		.loc 1 1556 5 view .LVU952
 2799              		.loc 1 1556 12 is_stmt 0 view .LVU953
 2800 0416 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 2801              		.loc 1 1556 8 view .LVU954
 2802 0418 0AB9     		cbnz	r2, .L211
1555:Src/BLDC_controller.c ****     UnitDelay3 = -1;
 2803              		.loc 1 1555 16 view .LVU955
 2804 041a 4FF0FF3B 		mov	fp, #-1
 2805              	.L211:
 2806              	.LVL280:
1557:Src/BLDC_controller.c ****       UnitDelay3 = 0;
1558:Src/BLDC_controller.c ****     }
1559:Src/BLDC_controller.c **** 
1560:Src/BLDC_controller.c ****     rtDW->If2_ActiveSubsystem_a = UnitDelay3;
 2807              		.loc 1 1560 5 is_stmt 1 view .LVU956
 2808              		.loc 1 1560 33 is_stmt 0 view .LVU957
 2809 041e 84F898B0 		strb	fp, [r4, #152]
1561:Src/BLDC_controller.c ****     if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 2810              		.loc 1 1561 5 is_stmt 1 view .LVU958
 2811              		.loc 1 1561 8 is_stmt 0 view .LVU959
 2812 0422 9B45     		cmp	fp, r3
 2813 0424 07D0     		beq	.L212
 2814              		.loc 1 1561 36 discriminator 1 view .LVU960
 2815 0426 33B9     		cbnz	r3, .L212
1562:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/iq' */
1563:Src/BLDC_controller.c ****       rtDW->DataTypeConversion[0] = 0;
 2816              		.loc 1 1563 7 is_stmt 1 view .LVU961
 2817              		.loc 1 1563 35 is_stmt 0 view .LVU962
 2818 0428 0022     		movs	r2, #0
 2819 042a A4F85220 		strh	r2, [r4, #82]	@ movhi
1564:Src/BLDC_controller.c **** 
1565:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/iqAbs' */
1566:Src/BLDC_controller.c ****       rtDW->Abs5_h = 0;
 2820              		.loc 1 1566 7 is_stmt 1 view .LVU963
 2821              		.loc 1 1566 20 is_stmt 0 view .LVU964
ARM GAS  /tmp/cccGHnrd.s 			page 81


 2822 042e A4F87820 		strh	r2, [r4, #120]	@ movhi
1567:Src/BLDC_controller.c **** 
1568:Src/BLDC_controller.c ****       /* Disable for Outport: '<S50>/id' */
1569:Src/BLDC_controller.c ****       rtDW->DataTypeConversion[1] = 0;
 2823              		.loc 1 1569 7 is_stmt 1 view .LVU965
 2824              		.loc 1 1569 35 is_stmt 0 view .LVU966
 2825 0432 A4F85420 		strh	r2, [r4, #84]	@ movhi
 2826              	.L212:
1570:Src/BLDC_controller.c ****     }
1571:Src/BLDC_controller.c **** 
1572:Src/BLDC_controller.c ****     if (UnitDelay3 == 0) {
 2827              		.loc 1 1572 5 is_stmt 1 view .LVU967
 2828              		.loc 1 1572 8 is_stmt 0 view .LVU968
 2829 0436 BBF1000F 		cmp	fp, #0
 2830 043a 40F0A380 		bne	.L199
1573:Src/BLDC_controller.c ****       if (0 != rtb_Sum2_h) {
 2831              		.loc 1 1573 7 is_stmt 1 view .LVU969
 2832              		.loc 1 1573 10 is_stmt 0 view .LVU970
 2833 043e 002B     		cmp	r3, #0
 2834 0440 73D1     		bne	.L443
 2835              	.LVL281:
 2836              	.L213:
1574:Src/BLDC_controller.c ****         /* SystemReset for IfAction SubSystem: '<S45>/Current_Filtering' incorporates:
1575:Src/BLDC_controller.c ****          *  ActionPort: '<S50>/Action Port'
1576:Src/BLDC_controller.c ****          */
1577:Src/BLDC_controller.c **** 
1578:Src/BLDC_controller.c ****         /* SystemReset for Atomic SubSystem: '<S50>/Low_Pass_Filter' */
1579:Src/BLDC_controller.c **** 
1580:Src/BLDC_controller.c ****         /* SystemReset for If: '<S45>/If2' */
1581:Src/BLDC_controller.c ****         Low_Pass_Filter_Reset(&rtDW->Low_Pass_Filter_m);
1582:Src/BLDC_controller.c **** 
1583:Src/BLDC_controller.c ****         /* End of SystemReset for SubSystem: '<S50>/Low_Pass_Filter' */
1584:Src/BLDC_controller.c **** 
1585:Src/BLDC_controller.c ****         /* End of SystemReset for SubSystem: '<S45>/Current_Filtering' */
1586:Src/BLDC_controller.c ****       }
1587:Src/BLDC_controller.c **** 
1588:Src/BLDC_controller.c ****       /* Sum: '<S51>/Sum6' incorporates:
1589:Src/BLDC_controller.c ****        *  Product: '<S51>/Divide1'
1590:Src/BLDC_controller.c ****        *  Product: '<S51>/Divide4'
1591:Src/BLDC_controller.c ****        */
1592:Src/BLDC_controller.c ****       rtb_Gain3 = (int16_T)((rtb_Merge1 * rtDW->r_cos_M1) >> 14) - (int16_T)
 2837              		.loc 1 1592 7 is_stmt 1 view .LVU971
 2838              		.loc 1 1592 41 is_stmt 0 view .LVU972
 2839 0442 4246     		mov	r2, r8
 2840              		.loc 1 1592 47 view .LVU973
 2841 0444 B4F97E30 		ldrsh	r3, [r4, #126]
 2842              		.loc 1 1592 41 view .LVU974
 2843 0448 03FB08F8 		mul	r8, r3, r8
 2844              	.LVL282:
 2845              		.loc 1 1592 19 view .LVU975
 2846 044c 48F38F38 		sbfx	r8, r8, #14, #16
1593:Src/BLDC_controller.c ****         ((rtb_Saturation * rtDW->r_sin_M1) >> 14);
 2847              		.loc 1 1593 26 view .LVU976
 2848 0450 5046     		mov	r0, r10
 2849              		.loc 1 1593 32 view .LVU977
 2850 0452 B4F97C10 		ldrsh	r1, [r4, #124]
 2851              		.loc 1 1593 26 view .LVU978
ARM GAS  /tmp/cccGHnrd.s 			page 82


 2852 0456 01FB0AFA 		mul	r10, r1, r10
 2853              	.LVL283:
1592:Src/BLDC_controller.c ****         ((rtb_Saturation * rtDW->r_sin_M1) >> 14);
 2854              		.loc 1 1592 68 view .LVU979
 2855 045a 4AF38F3A 		sbfx	r10, r10, #14, #16
1592:Src/BLDC_controller.c ****         ((rtb_Saturation * rtDW->r_sin_M1) >> 14);
 2856              		.loc 1 1592 17 view .LVU980
 2857 045e A8EB0A08 		sub	r8, r8, r10
 2858              	.LVL284:
1594:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2859              		.loc 1 1594 7 is_stmt 1 view .LVU981
 2860              		.loc 1 1594 10 is_stmt 0 view .LVU982
 2861 0462 B8F5004F 		cmp	r8, #32768
 2862 0466 65DA     		bge	.L371
1595:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1596:Src/BLDC_controller.c ****       } else {
1597:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
 2863              		.loc 1 1597 9 is_stmt 1 view .LVU983
 2864              		.loc 1 1597 12 is_stmt 0 view .LVU984
 2865 0468 18F5004F 		cmn	r8, #32768
 2866 046c 64DA     		bge	.L214
1598:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2867              		.loc 1 1598 21 view .LVU985
 2868 046e DFF8F881 		ldr	r8, .L471+4
 2869              	.LVL285:
 2870              		.loc 1 1598 21 view .LVU986
 2871 0472 61E0     		b	.L214
 2872              	.LVL286:
 2873              	.L200:
1475:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S49>/Clarke_PhasesBC' incorporates:
 2874              		.loc 1 1475 12 is_stmt 1 view .LVU987
1475:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S49>/Clarke_PhasesBC' incorporates:
 2875              		.loc 1 1475 15 is_stmt 0 view .LVU988
 2876 0474 012B     		cmp	r3, #1
 2877 0476 1ED0     		beq	.L444
1514:Src/BLDC_controller.c **** 
 2878              		.loc 1 1514 7 is_stmt 1 view .LVU989
1514:Src/BLDC_controller.c **** 
 2879              		.loc 1 1514 17 is_stmt 0 view .LVU990
 2880 0478 44F6E713 		movw	r3, #18919
 2881 047c 03FB0AF2 		mul	r2, r3, r10
 2882              	.LVL287:
1517:Src/BLDC_controller.c **** 
 2883              		.loc 1 1517 7 is_stmt 1 view .LVU991
1517:Src/BLDC_controller.c **** 
 2884              		.loc 1 1517 19 is_stmt 0 view .LVU992
 2885 0480 03FB08F3 		mul	r3, r3, r8
 2886              	.LVL288:
1523:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2887              		.loc 1 1523 7 is_stmt 1 view .LVU993
1523:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2888              		.loc 1 1523 45 is_stmt 0 view .LVU994
 2889 0484 002A     		cmp	r2, #0
 2890 0486 45DB     		blt	.L445
1523:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2891              		.loc 1 1523 45 discriminator 2 view .LVU995
 2892 0488 4FF00008 		mov	r8, #0
ARM GAS  /tmp/cccGHnrd.s 			page 83


 2893              	.LVL289:
 2894              	.L208:
1523:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2895              		.loc 1 1523 50 discriminator 4 view .LVU996
 2896 048c 9044     		add	r8, r8, r2
1523:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2897              		.loc 1 1523 63 discriminator 4 view .LVU997
 2898 048e 4FEAE838 		asr	r8, r8, #15
1523:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2899              		.loc 1 1523 19 discriminator 4 view .LVU998
 2900 0492 C8F10008 		rsb	r8, r8, #0
1524:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2901              		.loc 1 1524 36 view .LVU999
 2902 0496 002B     		cmp	r3, #0
 2903 0498 3FDB     		blt	.L446
1524:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2904              		.loc 1 1524 36 discriminator 2 view .LVU1000
 2905 049a 0022     		movs	r2, #0
 2906              	.LVL290:
 2907              	.L209:
1524:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2908              		.loc 1 1524 41 discriminator 4 view .LVU1001
 2909 049c 1344     		add	r3, r3, r2
 2910              	.LVL291:
1523:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2911              		.loc 1 1523 72 view .LVU1002
 2912 049e 43F38F33 		sbfx	r3, r3, #14, #16
1523:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 2913              		.loc 1 1523 17 view .LVU1003
 2914 04a2 A8EB0303 		sub	r3, r8, r3
 2915              	.LVL292:
1525:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 2916              		.loc 1 1525 7 is_stmt 1 view .LVU1004
1525:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 2917              		.loc 1 1525 10 is_stmt 0 view .LVU1005
 2918 04a6 B3F5004F 		cmp	r3, #32768
 2919 04aa 39DA     		bge	.L369
1528:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2920              		.loc 1 1528 9 is_stmt 1 view .LVU1006
1528:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2921              		.loc 1 1528 12 is_stmt 0 view .LVU1007
 2922 04ac 13F5004F 		cmn	r3, #32768
 2923 04b0 38DA     		bge	.L210
1529:Src/BLDC_controller.c ****         }
 2924              		.loc 1 1529 21 view .LVU1008
 2925 04b2 6D4B     		ldr	r3, .L471+4
 2926              	.LVL293:
1529:Src/BLDC_controller.c ****         }
 2927              		.loc 1 1529 21 view .LVU1009
 2928 04b4 36E0     		b	.L210
 2929              	.LVL294:
 2930              	.L444:
1480:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2931              		.loc 1 1480 7 is_stmt 1 view .LVU1010
1480:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2932              		.loc 1 1480 34 is_stmt 0 view .LVU1011
 2933 04b6 5346     		mov	r3, r10
ARM GAS  /tmp/cccGHnrd.s 			page 84


 2934 04b8 4146     		mov	r1, r8
1480:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2935              		.loc 1 1480 17 view .LVU1012
 2936 04ba AAEB0808 		sub	r8, r10, r8
 2937              	.LVL295:
1481:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 2938              		.loc 1 1481 7 is_stmt 1 view .LVU1013
1481:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 2939              		.loc 1 1481 10 is_stmt 0 view .LVU1014
 2940 04be B8F5004F 		cmp	r8, #32768
 2941 04c2 0EDA     		bge	.L362
1484:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2942              		.loc 1 1484 9 is_stmt 1 view .LVU1015
1484:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2943              		.loc 1 1484 12 is_stmt 0 view .LVU1016
 2944 04c4 18F5004F 		cmn	r8, #32768
 2945 04c8 1BDB     		blt	.L363
1492:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)(((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15);
 2946              		.loc 1 1492 7 is_stmt 1 view .LVU1017
1492:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)(((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15);
 2947              		.loc 1 1492 17 is_stmt 0 view .LVU1018
 2948 04ca 44F6E712 		movw	r2, #18919
 2949 04ce 02FB08F2 		mul	r2, r2, r8
 2950              	.LVL296:
1493:Src/BLDC_controller.c **** 
 2951              		.loc 1 1493 7 is_stmt 1 view .LVU1019
1493:Src/BLDC_controller.c **** 
 2952              		.loc 1 1493 54 is_stmt 0 view .LVU1020
 2953 04d2 002A     		cmp	r2, #0
 2954 04d4 02DB     		blt	.L447
1493:Src/BLDC_controller.c **** 
 2955              		.loc 1 1493 54 discriminator 2 view .LVU1021
 2956 04d6 4FF00008 		mov	r8, #0
 2957 04da 05E0     		b	.L206
 2958              	.L447:
1493:Src/BLDC_controller.c **** 
 2959              		.loc 1 1493 54 discriminator 1 view .LVU1022
 2960 04dc 47F6FF78 		movw	r8, #32767
 2961 04e0 02E0     		b	.L206
 2962              	.LVL297:
 2963              	.L362:
1492:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)(((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15);
 2964              		.loc 1 1492 17 view .LVU1023
 2965 04e2 624A     		ldr	r2, .L471+8
1493:Src/BLDC_controller.c **** 
 2966              		.loc 1 1493 54 discriminator 2 view .LVU1024
 2967 04e4 4FF00008 		mov	r8, #0
 2968              	.LVL298:
 2969              	.L206:
1493:Src/BLDC_controller.c **** 
 2970              		.loc 1 1493 59 discriminator 4 view .LVU1025
 2971 04e8 9044     		add	r8, r8, r2
1493:Src/BLDC_controller.c **** 
 2972              		.loc 1 1493 18 discriminator 4 view .LVU1026
 2973 04ea 48F3CF38 		sbfx	r8, r8, #15, #16
 2974              	.LVL299:
1496:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
ARM GAS  /tmp/cccGHnrd.s 			page 85


 2975              		.loc 1 1496 7 is_stmt 1 view .LVU1027
1496:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2976              		.loc 1 1496 19 is_stmt 0 view .LVU1028
 2977 04ee 5B42     		rsbs	r3, r3, #0
1496:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 2978              		.loc 1 1496 17 view .LVU1029
 2979 04f0 5B1A     		subs	r3, r3, r1
 2980              	.LVL300:
1497:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 2981              		.loc 1 1497 7 is_stmt 1 view .LVU1030
1497:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 2982              		.loc 1 1497 10 is_stmt 0 view .LVU1031
 2983 04f2 B3F5004F 		cmp	r3, #32768
 2984 04f6 08DA     		bge	.L365
1500:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2985              		.loc 1 1500 9 is_stmt 1 view .LVU1032
1500:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 2986              		.loc 1 1500 12 is_stmt 0 view .LVU1033
 2987 04f8 13F5004F 		cmn	r3, #32768
 2988 04fc 07DA     		bge	.L207
1501:Src/BLDC_controller.c ****         }
 2989              		.loc 1 1501 21 view .LVU1034
 2990 04fe 5A4B     		ldr	r3, .L471+4
 2991              	.LVL301:
1501:Src/BLDC_controller.c ****         }
 2992              		.loc 1 1501 21 view .LVU1035
 2993 0500 05E0     		b	.L207
 2994              	.LVL302:
 2995              	.L363:
1492:Src/BLDC_controller.c ****       rtb_Merge1 = (int16_T)(((rtb_Gain3 < 0 ? 32767 : 0) + rtb_Gain3) >> 15);
 2996              		.loc 1 1492 17 view .LVU1036
 2997 0502 5B4A     		ldr	r2, .L471+12
1493:Src/BLDC_controller.c **** 
 2998              		.loc 1 1493 54 discriminator 1 view .LVU1037
 2999 0504 47F6FF78 		movw	r8, #32767
 3000              	.LVL303:
1493:Src/BLDC_controller.c **** 
 3001              		.loc 1 1493 54 discriminator 1 view .LVU1038
 3002 0508 EEE7     		b	.L206
 3003              	.LVL304:
 3004              	.L365:
1498:Src/BLDC_controller.c ****       } else {
 3005              		.loc 1 1498 19 view .LVU1039
 3006 050a 47F6FF73 		movw	r3, #32767
 3007              	.LVL305:
 3008              	.L207:
1505:Src/BLDC_controller.c **** 
 3009              		.loc 1 1505 7 is_stmt 1 view .LVU1040
1505:Src/BLDC_controller.c **** 
 3010              		.loc 1 1505 22 is_stmt 0 view .LVU1041
 3011 050e 0FFA83FA 		sxth	r10, r3
 3012              	.LVL306:
1505:Src/BLDC_controller.c **** 
 3013              		.loc 1 1505 22 view .LVU1042
 3014 0512 6CE7     		b	.L204
 3015              	.LVL307:
 3016              	.L445:
ARM GAS  /tmp/cccGHnrd.s 			page 86


1523:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 3017              		.loc 1 1523 45 discriminator 1 view .LVU1043
 3018 0514 47F6FF78 		movw	r8, #32767
 3019              	.LVL308:
1523:Src/BLDC_controller.c ****         (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14);
 3020              		.loc 1 1523 45 discriminator 1 view .LVU1044
 3021 0518 B8E7     		b	.L208
 3022              	.L446:
1524:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 3023              		.loc 1 1524 36 discriminator 1 view .LVU1045
 3024 051a 43F6FF72 		movw	r2, #16383
 3025              	.LVL309:
1524:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 3026              		.loc 1 1524 36 discriminator 1 view .LVU1046
 3027 051e BDE7     		b	.L209
 3028              	.LVL310:
 3029              	.L369:
1526:Src/BLDC_controller.c ****       } else {
 3030              		.loc 1 1526 19 view .LVU1047
 3031 0520 47F6FF73 		movw	r3, #32767
 3032              	.LVL311:
 3033              	.L210:
1533:Src/BLDC_controller.c **** 
 3034              		.loc 1 1533 7 is_stmt 1 view .LVU1048
1533:Src/BLDC_controller.c **** 
 3035              		.loc 1 1533 18 is_stmt 0 view .LVU1049
 3036 0524 0FFA83F8 		sxth	r8, r3
 3037              	.LVL312:
1533:Src/BLDC_controller.c **** 
 3038              		.loc 1 1533 18 view .LVU1050
 3039 0528 61E7     		b	.L204
 3040              	.LVL313:
 3041              	.L443:
1581:Src/BLDC_controller.c **** 
 3042              		.loc 1 1581 9 is_stmt 1 view .LVU1051
 3043 052a 04F13800 		add	r0, r4, #56
 3044              	.LVL314:
1581:Src/BLDC_controller.c **** 
 3045              		.loc 1 1581 9 is_stmt 0 view .LVU1052
 3046 052e FFF7FEFF 		bl	Low_Pass_Filter_Reset
 3047              	.LVL315:
1581:Src/BLDC_controller.c **** 
 3048              		.loc 1 1581 9 view .LVU1053
 3049 0532 86E7     		b	.L213
 3050              	.LVL316:
 3051              	.L371:
1595:Src/BLDC_controller.c ****       } else {
 3052              		.loc 1 1595 19 view .LVU1054
 3053 0534 47F6FF78 		movw	r8, #32767
 3054              	.LVL317:
 3055              	.L214:
1599:Src/BLDC_controller.c ****         }
1600:Src/BLDC_controller.c ****       }
1601:Src/BLDC_controller.c **** 
1602:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S45>/Current_Filtering' incorporates:
1603:Src/BLDC_controller.c ****        *  ActionPort: '<S50>/Action Port'
1604:Src/BLDC_controller.c ****        */
ARM GAS  /tmp/cccGHnrd.s 			page 87


1605:Src/BLDC_controller.c ****       /* SignalConversion: '<S50>/TmpSignal ConversionAtLow_Pass_FilterInport1' incorporates:
1606:Src/BLDC_controller.c ****        *  Sum: '<S51>/Sum6'
1607:Src/BLDC_controller.c ****        */
1608:Src/BLDC_controller.c ****       rtb_TmpSignalConversionAtLow_Pa[0] = (int16_T)rtb_Gain3;
 3056              		.loc 1 1608 7 is_stmt 1 view .LVU1055
 3057              		.loc 1 1608 42 is_stmt 0 view .LVU1056
 3058 0538 ADF84080 		strh	r8, [sp, #64]	@ movhi
1609:Src/BLDC_controller.c **** 
1610:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S45>/Current_Filtering' */
1611:Src/BLDC_controller.c **** 
1612:Src/BLDC_controller.c ****       /* Sum: '<S51>/Sum1' incorporates:
1613:Src/BLDC_controller.c ****        *  Product: '<S51>/Divide2'
1614:Src/BLDC_controller.c ****        *  Product: '<S51>/Divide3'
1615:Src/BLDC_controller.c ****        */
1616:Src/BLDC_controller.c ****       rtb_Gain3 = (int16_T)((rtb_Saturation * rtDW->r_cos_M1) >> 14) + (int16_T)
 3059              		.loc 1 1616 7 is_stmt 1 view .LVU1057
 3060              		.loc 1 1616 45 is_stmt 0 view .LVU1058
 3061 053c 00FB03F3 		mul	r3, r0, r3
 3062              		.loc 1 1616 19 view .LVU1059
 3063 0540 43F38F33 		sbfx	r3, r3, #14, #16
1617:Src/BLDC_controller.c ****         ((rtb_Merge1 * rtDW->r_sin_M1) >> 14);
 3064              		.loc 1 1617 22 view .LVU1060
 3065 0544 01FB02F2 		mul	r2, r1, r2
1616:Src/BLDC_controller.c ****         ((rtb_Merge1 * rtDW->r_sin_M1) >> 14);
 3066              		.loc 1 1616 72 view .LVU1061
 3067 0548 42F38F32 		sbfx	r2, r2, #14, #16
1616:Src/BLDC_controller.c ****         ((rtb_Merge1 * rtDW->r_sin_M1) >> 14);
 3068              		.loc 1 1616 17 view .LVU1062
 3069 054c 1344     		add	r3, r3, r2
 3070              	.LVL318:
1618:Src/BLDC_controller.c ****       if (rtb_Gain3 > 32767) {
 3071              		.loc 1 1618 7 is_stmt 1 view .LVU1063
 3072              		.loc 1 1618 10 is_stmt 0 view .LVU1064
 3073 054e B3F5004F 		cmp	r3, #32768
 3074 0552 04DA     		bge	.L373
1619:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
1620:Src/BLDC_controller.c ****       } else {
1621:Src/BLDC_controller.c ****         if (rtb_Gain3 < -32768) {
 3075              		.loc 1 1621 9 is_stmt 1 view .LVU1065
 3076              		.loc 1 1621 12 is_stmt 0 view .LVU1066
 3077 0554 13F5004F 		cmn	r3, #32768
 3078 0558 03DA     		bge	.L215
1622:Src/BLDC_controller.c ****           rtb_Gain3 = -32768;
 3079              		.loc 1 1622 21 view .LVU1067
 3080 055a 434B     		ldr	r3, .L471+4
 3081              	.LVL319:
 3082              		.loc 1 1622 21 view .LVU1068
 3083 055c 01E0     		b	.L215
 3084              	.LVL320:
 3085              	.L373:
1619:Src/BLDC_controller.c ****         rtb_Gain3 = 32767;
 3086              		.loc 1 1619 19 view .LVU1069
 3087 055e 47F6FF73 		movw	r3, #32767
 3088              	.LVL321:
 3089              	.L215:
1623:Src/BLDC_controller.c ****         }
1624:Src/BLDC_controller.c ****       }
ARM GAS  /tmp/cccGHnrd.s 			page 88


1625:Src/BLDC_controller.c **** 
1626:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S45>/Current_Filtering' incorporates:
1627:Src/BLDC_controller.c ****        *  ActionPort: '<S50>/Action Port'
1628:Src/BLDC_controller.c ****        */
1629:Src/BLDC_controller.c ****       /* SignalConversion: '<S50>/TmpSignal ConversionAtLow_Pass_FilterInport1' incorporates:
1630:Src/BLDC_controller.c ****        *  Sum: '<S51>/Sum1'
1631:Src/BLDC_controller.c ****        */
1632:Src/BLDC_controller.c ****       rtb_TmpSignalConversionAtLow_Pa[1] = (int16_T)rtb_Gain3;
 3090              		.loc 1 1632 7 is_stmt 1 view .LVU1070
 3091              		.loc 1 1632 42 is_stmt 0 view .LVU1071
 3092 0562 ADF84230 		strh	r3, [sp, #66]	@ movhi
1633:Src/BLDC_controller.c **** 
1634:Src/BLDC_controller.c ****       /* Outputs for Atomic SubSystem: '<S50>/Low_Pass_Filter' */
1635:Src/BLDC_controller.c ****       Low_Pass_Filter(rtb_TmpSignalConversionAtLow_Pa, rtP->cf_currFilt,
 3093              		.loc 1 1635 7 is_stmt 1 view .LVU1072
 3094 0566 04F13803 		add	r3, r4, #56
 3095              	.LVL322:
 3096              		.loc 1 1635 7 is_stmt 0 view .LVU1073
 3097 056a 04F15202 		add	r2, r4, #82
 3098 056e B5F8EC10 		ldrh	r1, [r5, #236]
 3099 0572 10A8     		add	r0, sp, #64
 3100 0574 FFF7FEFF 		bl	Low_Pass_Filter
 3101              	.LVL323:
1636:Src/BLDC_controller.c ****                       rtDW->DataTypeConversion, &rtDW->Low_Pass_Filter_m);
1637:Src/BLDC_controller.c **** 
1638:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S50>/Low_Pass_Filter' */
1639:Src/BLDC_controller.c **** 
1640:Src/BLDC_controller.c ****       /* Abs: '<S50>/Abs5' incorporates:
1641:Src/BLDC_controller.c ****        *  Constant: '<S50>/cf_currFilt'
1642:Src/BLDC_controller.c ****        */
1643:Src/BLDC_controller.c ****       if (rtDW->DataTypeConversion[0] < 0) {
 3102              		.loc 1 1643 7 is_stmt 1 view .LVU1074
 3103              		.loc 1 1643 35 is_stmt 0 view .LVU1075
 3104 0578 B4F95230 		ldrsh	r3, [r4, #82]
 3105              		.loc 1 1643 10 view .LVU1076
 3106 057c 002B     		cmp	r3, #0
 3107 057e 4CDB     		blt	.L448
1644:Src/BLDC_controller.c ****         rtDW->Abs5_h = (int16_T)-rtDW->DataTypeConversion[0];
1645:Src/BLDC_controller.c ****       } else {
1646:Src/BLDC_controller.c ****         rtDW->Abs5_h = rtDW->DataTypeConversion[0];
 3108              		.loc 1 1646 9 is_stmt 1 view .LVU1077
 3109              		.loc 1 1646 22 is_stmt 0 view .LVU1078
 3110 0580 A4F87830 		strh	r3, [r4, #120]	@ movhi
 3111              	.LVL324:
 3112              	.L199:
1647:Src/BLDC_controller.c ****       }
1648:Src/BLDC_controller.c **** 
1649:Src/BLDC_controller.c ****       /* End of Abs: '<S50>/Abs5' */
1650:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S45>/Current_Filtering' */
1651:Src/BLDC_controller.c ****     }
1652:Src/BLDC_controller.c **** 
1653:Src/BLDC_controller.c ****     /* End of If: '<S45>/If2' */
1654:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S7>/Clarke_Park_Transform_Forward' */
1655:Src/BLDC_controller.c ****   }
1656:Src/BLDC_controller.c **** 
1657:Src/BLDC_controller.c ****   /* End of If: '<S7>/If1' */
1658:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 89


1659:Src/BLDC_controller.c ****   /* Chart: '<S1>/Task_Scheduler' incorporates:
1660:Src/BLDC_controller.c ****    *  UnitDelay: '<S2>/UnitDelay2'
1661:Src/BLDC_controller.c ****    *  UnitDelay: '<S2>/UnitDelay5'
1662:Src/BLDC_controller.c ****    *  UnitDelay: '<S2>/UnitDelay6'
1663:Src/BLDC_controller.c ****    */
1664:Src/BLDC_controller.c ****   if (rtDW->UnitDelay2_DSTATE_c) {
 3113              		.loc 1 1664 3 is_stmt 1 view .LVU1079
 3114              		.loc 1 1664 11 is_stmt 0 view .LVU1080
 3115 0584 94F8A330 		ldrb	r3, [r4, #163]	@ zero_extendqisi2
 3116              		.loc 1 1664 6 view .LVU1081
 3117 0588 002B     		cmp	r3, #0
 3118 058a 00F0FD81 		beq	.L217
1665:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F02_Diagnostics' */
1666:Src/BLDC_controller.c ****     /* If: '<S4>/If2' incorporates:
1667:Src/BLDC_controller.c ****      *  Constant: '<S20>/CTRL_COMM2'
1668:Src/BLDC_controller.c ****      *  Constant: '<S20>/t_errDequal'
1669:Src/BLDC_controller.c ****      *  Constant: '<S20>/t_errQual'
1670:Src/BLDC_controller.c ****      *  Constant: '<S4>/b_diagEna'
1671:Src/BLDC_controller.c ****      *  RelationalOperator: '<S20>/Relational Operator2'
1672:Src/BLDC_controller.c ****      */
1673:Src/BLDC_controller.c ****     if (rtP->b_diagEna) {
 3119              		.loc 1 1673 5 is_stmt 1 view .LVU1082
 3120              		.loc 1 1673 12 is_stmt 0 view .LVU1083
 3121 058e 95F8FD30 		ldrb	r3, [r5, #253]	@ zero_extendqisi2
 3122              		.loc 1 1673 8 view .LVU1084
 3123 0592 002B     		cmp	r3, #0
 3124 0594 35D0     		beq	.L218
1674:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S4>/Diagnostics_Enabled' incorporates:
1675:Src/BLDC_controller.c ****        *  ActionPort: '<S20>/Action Port'
1676:Src/BLDC_controller.c ****        */
1677:Src/BLDC_controller.c ****       /* Switch: '<S20>/Switch3' incorporates:
1678:Src/BLDC_controller.c ****        *  Abs: '<S20>/Abs4'
1679:Src/BLDC_controller.c ****        *  Constant: '<S13>/n_stdStillDet'
1680:Src/BLDC_controller.c ****        *  Constant: '<S20>/CTRL_COMM4'
1681:Src/BLDC_controller.c ****        *  Constant: '<S20>/r_errInpTgtThres'
1682:Src/BLDC_controller.c ****        *  Inport: '<Root>/b_motEna'
1683:Src/BLDC_controller.c ****        *  Logic: '<S20>/Logical Operator1'
1684:Src/BLDC_controller.c ****        *  RelationalOperator: '<S13>/Relational Operator9'
1685:Src/BLDC_controller.c ****        *  RelationalOperator: '<S20>/Relational Operator7'
1686:Src/BLDC_controller.c ****        *  S-Function (sfix_bitop): '<S20>/Bitwise Operator1'
1687:Src/BLDC_controller.c ****        *  UnitDelay: '<S20>/UnitDelay'
1688:Src/BLDC_controller.c ****        *  UnitDelay: '<S8>/UnitDelay4'
1689:Src/BLDC_controller.c ****        */
1690:Src/BLDC_controller.c ****       if ((rtDW->UnitDelay_DSTATE_e & 4) != 0) {
 3125              		.loc 1 1690 7 is_stmt 1 view .LVU1085
 3126              		.loc 1 1690 16 is_stmt 0 view .LVU1086
 3127 0596 94F89D30 		ldrb	r3, [r4, #157]	@ zero_extendqisi2
 3128              		.loc 1 1690 10 view .LVU1087
 3129 059a 13F0040F 		tst	r3, #4
 3130 059e 41D0     		beq	.L219
1691:Src/BLDC_controller.c ****         rtb_RelationalOperator1_mv = true;
 3131              		.loc 1 1691 9 is_stmt 1 view .LVU1088
 3132              		.loc 1 1691 36 is_stmt 0 view .LVU1089
 3133 05a0 0123     		movs	r3, #1
 3134 05a2 8DF84730 		strb	r3, [sp, #71]
 3135              	.LVL325:
 3136              	.L220:
ARM GAS  /tmp/cccGHnrd.s 			page 90


1692:Src/BLDC_controller.c ****       } else {
1693:Src/BLDC_controller.c ****         if (rtDW->UnitDelay4_DSTATE_eu < 0) {
1694:Src/BLDC_controller.c ****           /* Abs: '<S20>/Abs4' incorporates:
1695:Src/BLDC_controller.c ****            *  UnitDelay: '<S8>/UnitDelay4'
1696:Src/BLDC_controller.c ****            */
1697:Src/BLDC_controller.c ****           rtb_Saturation1 = (int16_T)-rtDW->UnitDelay4_DSTATE_eu;
1698:Src/BLDC_controller.c ****         } else {
1699:Src/BLDC_controller.c ****           /* Abs: '<S20>/Abs4' incorporates:
1700:Src/BLDC_controller.c ****            *  UnitDelay: '<S8>/UnitDelay4'
1701:Src/BLDC_controller.c ****            */
1702:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->UnitDelay4_DSTATE_eu;
1703:Src/BLDC_controller.c ****         }
1704:Src/BLDC_controller.c **** 
1705:Src/BLDC_controller.c ****         rtb_RelationalOperator1_mv = (rtU->b_motEna && (Abs5 <
1706:Src/BLDC_controller.c ****           rtP->n_stdStillDet) && (rtb_Saturation1 > rtP->r_errInpTgtThres));
1707:Src/BLDC_controller.c ****       }
1708:Src/BLDC_controller.c **** 
1709:Src/BLDC_controller.c ****       /* End of Switch: '<S20>/Switch3' */
1710:Src/BLDC_controller.c **** 
1711:Src/BLDC_controller.c ****       /* Sum: '<S20>/Sum' incorporates:
1712:Src/BLDC_controller.c ****        *  Constant: '<S20>/CTRL_COMM'
1713:Src/BLDC_controller.c ****        *  Constant: '<S20>/CTRL_COMM1'
1714:Src/BLDC_controller.c ****        *  DataTypeConversion: '<S20>/Data Type Conversion3'
1715:Src/BLDC_controller.c ****        *  Gain: '<S20>/g_Hb'
1716:Src/BLDC_controller.c ****        *  Gain: '<S20>/g_Hb1'
1717:Src/BLDC_controller.c ****        *  RelationalOperator: '<S20>/Relational Operator1'
1718:Src/BLDC_controller.c ****        *  RelationalOperator: '<S20>/Relational Operator3'
1719:Src/BLDC_controller.c ****        */
1720:Src/BLDC_controller.c ****       rtb_a_elecAngle_XA_g = (uint8_T)(((uint32_T)((Sum == 7) << 1) + (Sum == 0))
 3137              		.loc 1 1720 7 is_stmt 1 view .LVU1090
 3138              		.loc 1 1720 69 is_stmt 0 view .LVU1091
 3139 05a6 079B     		ldr	r3, [sp, #28]
 3140 05a8 072B     		cmp	r3, #7
 3141 05aa 58D0     		beq	.L449
 3142              		.loc 1 1720 69 discriminator 2 view .LVU1092
 3143 05ac 4FF00008 		mov	r8, #0
 3144              	.L223:
 3145              		.loc 1 1720 69 discriminator 4 view .LVU1093
 3146 05b0 079B     		ldr	r3, [sp, #28]
 3147 05b2 002B     		cmp	r3, #0
 3148 05b4 08BF     		it	eq
 3149 05b6 08F10108 		addeq	r8, r8, #1
1721:Src/BLDC_controller.c ****         + (rtb_RelationalOperator1_mv << 2));
 3150              		.loc 1 1721 39 view .LVU1094
 3151 05ba 9DF84730 		ldrb	r3, [sp, #71]	@ zero_extendqisi2
 3152 05be 9B00     		lsls	r3, r3, #2
 3153 05c0 DBB2     		uxtb	r3, r3
1720:Src/BLDC_controller.c ****         + (rtb_RelationalOperator1_mv << 2));
 3154              		.loc 1 1720 28 discriminator 4 view .LVU1095
 3155 05c2 9844     		add	r8, r8, r3
 3156              	.LVL326:
1722:Src/BLDC_controller.c **** 
1723:Src/BLDC_controller.c ****       /* Outputs for Atomic SubSystem: '<S20>/Debounce_Filter' */
1724:Src/BLDC_controller.c ****       Debounce_Filter(rtb_a_elecAngle_XA_g != 0, rtP->t_errQual,
 3157              		.loc 1 1724 7 is_stmt 1 view .LVU1096
 3158 05c4 EA89     		ldrh	r2, [r5, #14]
 3159 05c6 298A     		ldrh	r1, [r5, #16]
ARM GAS  /tmp/cccGHnrd.s 			page 91


 3160 05c8 18F0FF08 		ands	r8, r8, #255
 3161              	.LVL327:
 3162              		.loc 1 1724 7 is_stmt 0 view .LVU1097
 3163 05cc 04F12E03 		add	r3, r4, #46
 3164 05d0 0093     		str	r3, [sp]
 3165 05d2 04F1A103 		add	r3, r4, #161
 3166 05d6 14BF     		ite	ne
 3167 05d8 0120     		movne	r0, #1
 3168 05da 0020     		moveq	r0, #0
 3169 05dc FFF7FEFF 		bl	Debounce_Filter
 3170              	.LVL328:
1725:Src/BLDC_controller.c ****                       rtP->t_errDequal, &rtDW->Merge_p, &rtDW->Debounce_Filter_k);
1726:Src/BLDC_controller.c **** 
1727:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S20>/Debounce_Filter' */
1728:Src/BLDC_controller.c **** 
1729:Src/BLDC_controller.c ****       /* Outputs for Atomic SubSystem: '<S20>/either_edge' */
1730:Src/BLDC_controller.c ****       either_edge(rtDW->Merge_p, &rtb_RelationalOperator1_mv,
 3171              		.loc 1 1730 7 is_stmt 1 view .LVU1098
 3172 05e0 04F12C02 		add	r2, r4, #44
 3173 05e4 0DF14701 		add	r1, sp, #71
 3174 05e8 94F8A100 		ldrb	r0, [r4, #161]	@ zero_extendqisi2
 3175 05ec FFF7FEFF 		bl	either_edge
 3176              	.LVL329:
1731:Src/BLDC_controller.c ****                   &rtDW->either_edge_i);
1732:Src/BLDC_controller.c **** 
1733:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S20>/either_edge' */
1734:Src/BLDC_controller.c **** 
1735:Src/BLDC_controller.c ****       /* Switch: '<S20>/Switch1' incorporates:
1736:Src/BLDC_controller.c ****        *  Constant: '<S20>/CTRL_COMM2'
1737:Src/BLDC_controller.c ****        *  Constant: '<S20>/t_errDequal'
1738:Src/BLDC_controller.c ****        *  Constant: '<S20>/t_errQual'
1739:Src/BLDC_controller.c ****        *  RelationalOperator: '<S20>/Relational Operator2'
1740:Src/BLDC_controller.c ****        */
1741:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
 3177              		.loc 1 1741 7 view .LVU1099
 3178              		.loc 1 1741 11 is_stmt 0 view .LVU1100
 3179 05f0 9DF84730 		ldrb	r3, [sp, #71]	@ zero_extendqisi2
 3180              		.loc 1 1741 10 view .LVU1101
 3181 05f4 002B     		cmp	r3, #0
 3182 05f6 3DD0     		beq	.L224
1742:Src/BLDC_controller.c ****         /* Outport: '<Root>/z_errCode' */
1743:Src/BLDC_controller.c ****         rtY->z_errCode = rtb_a_elecAngle_XA_g;
 3183              		.loc 1 1743 9 is_stmt 1 view .LVU1102
 3184              		.loc 1 1743 24 is_stmt 0 view .LVU1103
 3185 05f8 87F80680 		strb	r8, [r7, #6]
 3186              	.L225:
1744:Src/BLDC_controller.c ****       } else {
1745:Src/BLDC_controller.c ****         /* Outport: '<Root>/z_errCode' incorporates:
1746:Src/BLDC_controller.c ****          *  UnitDelay: '<S20>/UnitDelay'
1747:Src/BLDC_controller.c ****          */
1748:Src/BLDC_controller.c ****         rtY->z_errCode = rtDW->UnitDelay_DSTATE_e;
1749:Src/BLDC_controller.c ****       }
1750:Src/BLDC_controller.c **** 
1751:Src/BLDC_controller.c ****       /* End of Switch: '<S20>/Switch1' */
1752:Src/BLDC_controller.c **** 
1753:Src/BLDC_controller.c ****       /* Update for UnitDelay: '<S20>/UnitDelay' incorporates:
1754:Src/BLDC_controller.c ****        *  Outport: '<Root>/z_errCode'
ARM GAS  /tmp/cccGHnrd.s 			page 92


1755:Src/BLDC_controller.c ****        */
1756:Src/BLDC_controller.c ****       rtDW->UnitDelay_DSTATE_e = rtY->z_errCode;
 3187              		.loc 1 1756 7 is_stmt 1 view .LVU1104
 3188              		.loc 1 1756 37 is_stmt 0 view .LVU1105
 3189 05fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3190              		.loc 1 1756 32 view .LVU1106
 3191 05fe 84F89D30 		strb	r3, [r4, #157]
 3192              	.LVL330:
 3193              	.L218:
1757:Src/BLDC_controller.c **** 
1758:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S4>/Diagnostics_Enabled' */
1759:Src/BLDC_controller.c ****     }
1760:Src/BLDC_controller.c **** 
1761:Src/BLDC_controller.c ****     /* End of If: '<S4>/If2' */
1762:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S1>/F02_Diagnostics' */
1763:Src/BLDC_controller.c **** 
1764:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F03_Control_Mode_Manager' */
1765:Src/BLDC_controller.c ****     /* Logic: '<S31>/Logical Operator4' incorporates:
1766:Src/BLDC_controller.c ****      *  Constant: '<S31>/constant8'
1767:Src/BLDC_controller.c ****      *  Inport: '<Root>/b_motEna'
1768:Src/BLDC_controller.c ****      *  Inport: '<Root>/z_ctrlModReq'
1769:Src/BLDC_controller.c ****      *  Logic: '<S31>/Logical Operator7'
1770:Src/BLDC_controller.c ****      *  RelationalOperator: '<S31>/Relational Operator10'
1771:Src/BLDC_controller.c ****      */
1772:Src/BLDC_controller.c ****     rtb_RelationalOperator1_mv = (rtDW->Merge_p || (!rtU->b_motEna) ||
 3194              		.loc 1 1772 5 is_stmt 1 view .LVU1107
 3195              		.loc 1 1772 39 is_stmt 0 view .LVU1108
 3196 0602 94F8A130 		ldrb	r3, [r4, #161]	@ zero_extendqisi2
 3197              		.loc 1 1772 69 view .LVU1109
 3198 0606 002B     		cmp	r3, #0
 3199 0608 38D1     		bne	.L379
 3200              		.loc 1 1772 57 discriminator 2 view .LVU1110
 3201 060a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 3202              		.loc 1 1772 49 discriminator 2 view .LVU1111
 3203 060c 002B     		cmp	r3, #0
 3204 060e 41D0     		beq	.L380
1773:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3205              		.loc 1 1773 11 view .LVU1112
 3206 0610 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
1772:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3207              		.loc 1 1772 69 discriminator 4 view .LVU1113
 3208 0612 002B     		cmp	r3, #0
 3209 0614 40D1     		bne	.L381
1772:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3210              		.loc 1 1772 69 discriminator 5 view .LVU1114
 3211 0616 0123     		movs	r3, #1
 3212 0618 31E0     		b	.L226
 3213              	.LVL331:
 3214              	.L448:
1644:Src/BLDC_controller.c ****       } else {
 3215              		.loc 1 1644 9 is_stmt 1 view .LVU1115
1644:Src/BLDC_controller.c ****       } else {
 3216              		.loc 1 1644 58 is_stmt 0 view .LVU1116
 3217 061a 9BB2     		uxth	r3, r3
1644:Src/BLDC_controller.c ****       } else {
 3218              		.loc 1 1644 24 view .LVU1117
 3219 061c 5B42     		rsbs	r3, r3, #0
ARM GAS  /tmp/cccGHnrd.s 			page 93


1644:Src/BLDC_controller.c ****       } else {
 3220              		.loc 1 1644 22 view .LVU1118
 3221 061e A4F87830 		strh	r3, [r4, #120]	@ movhi
 3222 0622 AFE7     		b	.L199
 3223              	.LVL332:
 3224              	.L219:
1693:Src/BLDC_controller.c ****           /* Abs: '<S20>/Abs4' incorporates:
 3225              		.loc 1 1693 9 is_stmt 1 view .LVU1119
1693:Src/BLDC_controller.c ****           /* Abs: '<S20>/Abs4' incorporates:
 3226              		.loc 1 1693 17 is_stmt 0 view .LVU1120
 3227 0624 B4F98C30 		ldrsh	r3, [r4, #140]
1693:Src/BLDC_controller.c ****           /* Abs: '<S20>/Abs4' incorporates:
 3228              		.loc 1 1693 12 view .LVU1121
 3229 0628 002B     		cmp	r3, #0
 3230 062a 0CDB     		blt	.L450
 3231              	.LVL333:
 3232              	.L221:
1705:Src/BLDC_controller.c ****           rtP->n_stdStillDet) && (rtb_Saturation1 > rtP->r_errInpTgtThres));
 3233              		.loc 1 1705 9 is_stmt 1 view .LVU1122
1705:Src/BLDC_controller.c ****           rtP->n_stdStillDet) && (rtb_Saturation1 > rtP->r_errInpTgtThres));
 3234              		.loc 1 1705 42 is_stmt 0 view .LVU1123
 3235 062c 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
1706:Src/BLDC_controller.c ****       }
 3236              		.loc 1 1706 31 view .LVU1124
 3237 062e 72B1     		cbz	r2, .L375
1706:Src/BLDC_controller.c ****       }
 3238              		.loc 1 1706 14 discriminator 1 view .LVU1125
 3239 0630 B5F9DC20 		ldrsh	r2, [r5, #220]
1705:Src/BLDC_controller.c ****           rtP->n_stdStillDet) && (rtb_Saturation1 > rtP->r_errInpTgtThres));
 3240              		.loc 1 1705 53 view .LVU1126
 3241 0634 0699     		ldr	r1, [sp, #24]
 3242 0636 8A42     		cmp	r2, r1
 3243 0638 0DDD     		ble	.L376
1706:Src/BLDC_controller.c ****       }
 3244              		.loc 1 1706 56 discriminator 4 view .LVU1127
 3245 063a B5F9DE20 		ldrsh	r2, [r5, #222]
1706:Src/BLDC_controller.c ****       }
 3246              		.loc 1 1706 31 discriminator 4 view .LVU1128
 3247 063e 9A42     		cmp	r2, r3
 3248 0640 0BDB     		blt	.L377
1706:Src/BLDC_controller.c ****       }
 3249              		.loc 1 1706 31 discriminator 2 view .LVU1129
 3250 0642 0023     		movs	r3, #0
 3251              	.LVL334:
1706:Src/BLDC_controller.c ****       }
 3252              		.loc 1 1706 31 discriminator 2 view .LVU1130
 3253 0644 04E0     		b	.L222
 3254              	.L450:
1697:Src/BLDC_controller.c ****         } else {
 3255              		.loc 1 1697 11 is_stmt 1 view .LVU1131
1697:Src/BLDC_controller.c ****         } else {
 3256              		.loc 1 1697 43 is_stmt 0 view .LVU1132
 3257 0646 9BB2     		uxth	r3, r3
1697:Src/BLDC_controller.c ****         } else {
 3258              		.loc 1 1697 29 view .LVU1133
 3259 0648 5B42     		rsbs	r3, r3, #0
1697:Src/BLDC_controller.c ****         } else {
ARM GAS  /tmp/cccGHnrd.s 			page 94


 3260              		.loc 1 1697 27 view .LVU1134
 3261 064a 1BB2     		sxth	r3, r3
 3262              	.LVL335:
1697:Src/BLDC_controller.c ****         } else {
 3263              		.loc 1 1697 27 view .LVU1135
 3264 064c EEE7     		b	.L221
 3265              	.L375:
1706:Src/BLDC_controller.c ****       }
 3266              		.loc 1 1706 31 discriminator 2 view .LVU1136
 3267 064e 0023     		movs	r3, #0
 3268              	.LVL336:
 3269              	.L222:
1705:Src/BLDC_controller.c ****           rtP->n_stdStillDet) && (rtb_Saturation1 > rtP->r_errInpTgtThres));
 3270              		.loc 1 1705 36 view .LVU1137
 3271 0650 8DF84730 		strb	r3, [sp, #71]
 3272 0654 A7E7     		b	.L220
 3273              	.LVL337:
 3274              	.L376:
1706:Src/BLDC_controller.c ****       }
 3275              		.loc 1 1706 31 discriminator 2 view .LVU1138
 3276 0656 0023     		movs	r3, #0
 3277              	.LVL338:
1706:Src/BLDC_controller.c ****       }
 3278              		.loc 1 1706 31 discriminator 2 view .LVU1139
 3279 0658 FAE7     		b	.L222
 3280              	.LVL339:
 3281              	.L377:
1706:Src/BLDC_controller.c ****       }
 3282              		.loc 1 1706 31 discriminator 3 view .LVU1140
 3283 065a 0123     		movs	r3, #1
 3284              	.LVL340:
1706:Src/BLDC_controller.c ****       }
 3285              		.loc 1 1706 31 discriminator 3 view .LVU1141
 3286 065c F8E7     		b	.L222
 3287              	.LVL341:
 3288              	.L449:
1720:Src/BLDC_controller.c ****         + (rtb_RelationalOperator1_mv << 2));
 3289              		.loc 1 1720 69 discriminator 1 view .LVU1142
 3290 065e 4FF00208 		mov	r8, #2
 3291 0662 A5E7     		b	.L223
 3292              	.L472:
 3293              		.align	2
 3294              	.L471:
 3295 0664 00000000 		.word	rtConstP
 3296 0668 0080FFFF 		.word	-32768
 3297 066c 1936F324 		.word	619918873
 3298 0670 00800CDB 		.word	-619937792
 3299              	.LVL342:
 3300              	.L224:
1748:Src/BLDC_controller.c ****       }
 3301              		.loc 1 1748 9 is_stmt 1 view .LVU1143
1748:Src/BLDC_controller.c ****       }
 3302              		.loc 1 1748 30 is_stmt 0 view .LVU1144
 3303 0674 94F89D30 		ldrb	r3, [r4, #157]	@ zero_extendqisi2
1748:Src/BLDC_controller.c ****       }
 3304              		.loc 1 1748 24 view .LVU1145
 3305 0678 BB71     		strb	r3, [r7, #6]
ARM GAS  /tmp/cccGHnrd.s 			page 95


 3306 067a BFE7     		b	.L225
 3307              	.LVL343:
 3308              	.L379:
1772:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3309              		.loc 1 1772 69 discriminator 5 view .LVU1146
 3310 067c 0123     		movs	r3, #1
 3311              	.L226:
1772:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3312              		.loc 1 1772 32 discriminator 8 view .LVU1147
 3313 067e DBB2     		uxtb	r3, r3
 3314 0680 8DF84730 		strb	r3, [sp, #71]
1774:Src/BLDC_controller.c **** 
1775:Src/BLDC_controller.c ****     /* Logic: '<S31>/Logical Operator1' incorporates:
1776:Src/BLDC_controller.c ****      *  Constant: '<S1>/b_cruiseCtrlEna'
1777:Src/BLDC_controller.c ****      *  Constant: '<S31>/constant1'
1778:Src/BLDC_controller.c ****      *  Inport: '<Root>/z_ctrlModReq'
1779:Src/BLDC_controller.c ****      *  RelationalOperator: '<S31>/Relational Operator1'
1780:Src/BLDC_controller.c ****      */
1781:Src/BLDC_controller.c ****     rtb_LogicalOperator1_j = ((rtU->z_ctrlModReq == 2) || rtP->b_cruiseCtrlEna);
 3315              		.loc 1 1781 5 is_stmt 1 view .LVU1148
 3316              		.loc 1 1781 35 is_stmt 0 view .LVU1149
 3317 0684 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 3318              		.loc 1 1781 56 view .LVU1150
 3319 0686 022A     		cmp	r2, #2
 3320 0688 08D0     		beq	.L382
 3321              		.loc 1 1781 62 discriminator 2 view .LVU1151
 3322 068a 95F8FC10 		ldrb	r1, [r5, #252]	@ zero_extendqisi2
 3323              		.loc 1 1781 56 discriminator 2 view .LVU1152
 3324 068e 39B3     		cbz	r1, .L383
 3325              		.loc 1 1781 56 discriminator 3 view .LVU1153
 3326 0690 0121     		movs	r1, #1
 3327 0692 04E0     		b	.L227
 3328              	.L380:
1772:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3329              		.loc 1 1772 69 discriminator 5 view .LVU1154
 3330 0694 0123     		movs	r3, #1
 3331 0696 F2E7     		b	.L226
 3332              	.L381:
1772:Src/BLDC_controller.c ****       (rtU->z_ctrlModReq == 0));
 3333              		.loc 1 1772 69 discriminator 6 view .LVU1155
 3334 0698 0023     		movs	r3, #0
 3335 069a F0E7     		b	.L226
 3336              	.L382:
 3337              		.loc 1 1781 56 discriminator 3 view .LVU1156
 3338 069c 0121     		movs	r1, #1
 3339              	.L227:
 3340              		.loc 1 1781 28 discriminator 6 view .LVU1157
 3341 069e C8B2     		uxtb	r0, r1
 3342              	.LVL344:
1782:Src/BLDC_controller.c **** 
1783:Src/BLDC_controller.c ****     /* Logic: '<S31>/Logical Operator2' incorporates:
1784:Src/BLDC_controller.c ****      *  Constant: '<S1>/b_cruiseCtrlEna'
1785:Src/BLDC_controller.c ****      *  Constant: '<S31>/constant'
1786:Src/BLDC_controller.c ****      *  Inport: '<Root>/z_ctrlModReq'
1787:Src/BLDC_controller.c ****      *  Logic: '<S31>/Logical Operator5'
1788:Src/BLDC_controller.c ****      *  RelationalOperator: '<S31>/Relational Operator4'
1789:Src/BLDC_controller.c ****      */
ARM GAS  /tmp/cccGHnrd.s 			page 96


1790:Src/BLDC_controller.c ****     rtb_LogicalOperator2_p = ((rtU->z_ctrlModReq == 3) && (!rtP->b_cruiseCtrlEna));
 3343              		.loc 1 1790 5 is_stmt 1 view .LVU1158
 3344              		.loc 1 1790 56 is_stmt 0 view .LVU1159
 3345 06a0 032A     		cmp	r2, #3
 3346 06a2 1FD0     		beq	.L451
 3347              		.loc 1 1790 56 discriminator 4 view .LVU1160
 3348 06a4 0022     		movs	r2, #0
 3349              	.L228:
 3350              		.loc 1 1790 28 discriminator 6 view .LVU1161
 3351 06a6 D1B2     		uxtb	r1, r2
 3352              	.LVL345:
1791:Src/BLDC_controller.c **** 
1792:Src/BLDC_controller.c ****     /* Chart: '<S5>/F03_02_Control_Mode_Manager' incorporates:
1793:Src/BLDC_controller.c ****      *  Constant: '<S31>/constant5'
1794:Src/BLDC_controller.c ****      *  Inport: '<Root>/z_ctrlModReq'
1795:Src/BLDC_controller.c ****      *  Logic: '<S31>/Logical Operator3'
1796:Src/BLDC_controller.c ****      *  Logic: '<S31>/Logical Operator6'
1797:Src/BLDC_controller.c ****      *  Logic: '<S31>/Logical Operator9'
1798:Src/BLDC_controller.c ****      *  RelationalOperator: '<S31>/Relational Operator5'
1799:Src/BLDC_controller.c ****      */
1800:Src/BLDC_controller.c ****     if (rtDW->is_active_c1_BLDC_controller == 0U) {
 3353              		.loc 1 1800 5 is_stmt 1 view .LVU1162
 3354              		.loc 1 1800 13 is_stmt 0 view .LVU1163
 3355 06a8 94F89E20 		ldrb	r2, [r4, #158]	@ zero_extendqisi2
 3356              		.loc 1 1800 8 view .LVU1164
 3357 06ac 0ABB     		cbnz	r2, .L229
1801:Src/BLDC_controller.c ****       rtDW->is_active_c1_BLDC_controller = 1U;
 3358              		.loc 1 1801 7 is_stmt 1 view .LVU1165
 3359              		.loc 1 1801 42 is_stmt 0 view .LVU1166
 3360 06ae 0123     		movs	r3, #1
 3361 06b0 84F89E30 		strb	r3, [r4, #158]
1802:Src/BLDC_controller.c ****       rtDW->is_c1_BLDC_controller = IN_OPEN;
 3362              		.loc 1 1802 7 is_stmt 1 view .LVU1167
 3363              		.loc 1 1802 35 is_stmt 0 view .LVU1168
 3364 06b4 0223     		movs	r3, #2
 3365 06b6 84F89F30 		strb	r3, [r4, #159]
1803:Src/BLDC_controller.c ****       rtDW->z_ctrlMod = OPEN_MODE;
 3366              		.loc 1 1803 7 is_stmt 1 view .LVU1169
 3367              		.loc 1 1803 23 is_stmt 0 view .LVU1170
 3368 06ba 0023     		movs	r3, #0
 3369 06bc 84F89930 		strb	r3, [r4, #153]
 3370              	.L230:
1804:Src/BLDC_controller.c ****     } else if (rtDW->is_c1_BLDC_controller == IN_ACTIVE) {
1805:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
1806:Src/BLDC_controller.c ****         rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
1807:Src/BLDC_controller.c ****         rtDW->is_c1_BLDC_controller = IN_OPEN;
1808:Src/BLDC_controller.c ****         rtDW->z_ctrlMod = OPEN_MODE;
1809:Src/BLDC_controller.c ****       } else {
1810:Src/BLDC_controller.c ****         switch (rtDW->is_ACTIVE) {
1811:Src/BLDC_controller.c ****          case IN_SPEED_MODE:
1812:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = SPD_MODE;
1813:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator1_j) {
1814:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
1815:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
1816:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
1817:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
1818:Src/BLDC_controller.c ****             } else {
ARM GAS  /tmp/cccGHnrd.s 			page 97


1819:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_VOLTAGE_MODE;
1820:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
1821:Src/BLDC_controller.c ****             }
1822:Src/BLDC_controller.c ****           }
1823:Src/BLDC_controller.c ****           break;
1824:Src/BLDC_controller.c **** 
1825:Src/BLDC_controller.c ****          case IN_TORQUE_MODE:
1826:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = TRQ_MODE;
1827:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator2_p) {
1828:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
1829:Src/BLDC_controller.c ****             if (rtb_LogicalOperator1_j) {
1830:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_SPEED_MODE;
1831:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
1832:Src/BLDC_controller.c ****             } else {
1833:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_VOLTAGE_MODE;
1834:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
1835:Src/BLDC_controller.c ****             }
1836:Src/BLDC_controller.c ****           }
1837:Src/BLDC_controller.c ****           break;
1838:Src/BLDC_controller.c **** 
1839:Src/BLDC_controller.c ****          default:
1840:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = VLT_MODE;
1841:Src/BLDC_controller.c ****           if (rtb_LogicalOperator2_p || rtb_LogicalOperator1_j) {
1842:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
1843:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
1844:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
1845:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
1846:Src/BLDC_controller.c ****             } else if (rtb_LogicalOperator1_j) {
1847:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_SPEED_MODE;
1848:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
1849:Src/BLDC_controller.c ****             } else {
1850:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_VOLTAGE_MODE;
1851:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
1852:Src/BLDC_controller.c ****             }
1853:Src/BLDC_controller.c ****           }
1854:Src/BLDC_controller.c ****           break;
1855:Src/BLDC_controller.c ****         }
1856:Src/BLDC_controller.c ****       }
1857:Src/BLDC_controller.c ****     } else {
1858:Src/BLDC_controller.c ****       rtDW->z_ctrlMod = OPEN_MODE;
1859:Src/BLDC_controller.c ****       if ((!rtb_RelationalOperator1_mv) && ((rtU->z_ctrlModReq == 1) ||
1860:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
1861:Src/BLDC_controller.c ****         rtDW->is_c1_BLDC_controller = IN_ACTIVE;
1862:Src/BLDC_controller.c ****         if (rtb_LogicalOperator2_p) {
1863:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_TORQUE_MODE;
1864:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = TRQ_MODE;
1865:Src/BLDC_controller.c ****         } else if (rtb_LogicalOperator1_j) {
1866:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_SPEED_MODE;
1867:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = SPD_MODE;
1868:Src/BLDC_controller.c ****         } else {
1869:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_VOLTAGE_MODE;
1870:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = VLT_MODE;
1871:Src/BLDC_controller.c ****         }
1872:Src/BLDC_controller.c ****       }
1873:Src/BLDC_controller.c ****     }
1874:Src/BLDC_controller.c **** 
1875:Src/BLDC_controller.c ****     /* End of Chart: '<S5>/F03_02_Control_Mode_Manager' */
ARM GAS  /tmp/cccGHnrd.s 			page 98


1876:Src/BLDC_controller.c **** 
1877:Src/BLDC_controller.c ****     /* If: '<S33>/If1' incorporates:
1878:Src/BLDC_controller.c ****      *  Constant: '<S1>/z_ctrlTypSel'
1879:Src/BLDC_controller.c ****      *  Inport: '<S34>/r_inpTgt'
1880:Src/BLDC_controller.c ****      *  Saturate: '<S33>/Saturation'
1881:Src/BLDC_controller.c ****      */
1882:Src/BLDC_controller.c ****     if (rtP->z_ctrlTypSel == 2) {
 3371              		.loc 1 1882 5 is_stmt 1 view .LVU1171
 3372              		.loc 1 1882 12 is_stmt 0 view .LVU1172
 3373 06c0 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
 3374              		.loc 1 1882 8 view .LVU1173
 3375 06c4 022B     		cmp	r3, #2
 3376 06c6 00F09A80 		beq	.L452
1883:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/FOC_Control_Type' incorporates:
1884:Src/BLDC_controller.c ****        *  ActionPort: '<S36>/Action Port'
1885:Src/BLDC_controller.c ****        */
1886:Src/BLDC_controller.c ****       /* SignalConversion: '<S36>/TmpSignal ConversionAtSelectorInport1' incorporates:
1887:Src/BLDC_controller.c ****        *  Constant: '<S36>/Vd_max'
1888:Src/BLDC_controller.c ****        *  Constant: '<S36>/constant1'
1889:Src/BLDC_controller.c ****        *  Constant: '<S36>/i_max'
1890:Src/BLDC_controller.c ****        *  Constant: '<S36>/n_max'
1891:Src/BLDC_controller.c ****        */
1892:Src/BLDC_controller.c ****       tmp[0] = 0;
1893:Src/BLDC_controller.c ****       tmp[1] = rtP->Vd_max;
1894:Src/BLDC_controller.c ****       tmp[2] = rtP->n_max;
1895:Src/BLDC_controller.c ****       tmp[3] = rtP->i_max;
1896:Src/BLDC_controller.c **** 
1897:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/FOC_Control_Type' */
1898:Src/BLDC_controller.c **** 
1899:Src/BLDC_controller.c ****       /* Saturate: '<S33>/Saturation' */
1900:Src/BLDC_controller.c ****       if (DataTypeConversion2 > 16000) {
1901:Src/BLDC_controller.c ****         DataTypeConversion2 = 16000;
1902:Src/BLDC_controller.c ****       } else {
1903:Src/BLDC_controller.c ****         if (DataTypeConversion2 < -16000) {
1904:Src/BLDC_controller.c ****           DataTypeConversion2 = -16000;
1905:Src/BLDC_controller.c ****         }
1906:Src/BLDC_controller.c ****       }
1907:Src/BLDC_controller.c **** 
1908:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/FOC_Control_Type' incorporates:
1909:Src/BLDC_controller.c ****        *  ActionPort: '<S36>/Action Port'
1910:Src/BLDC_controller.c ****        */
1911:Src/BLDC_controller.c ****       /* Product: '<S36>/Divide1' incorporates:
1912:Src/BLDC_controller.c ****        *  Inport: '<Root>/z_ctrlModReq'
1913:Src/BLDC_controller.c ****        *  Product: '<S36>/Divide4'
1914:Src/BLDC_controller.c ****        *  Selector: '<S36>/Selector'
1915:Src/BLDC_controller.c ****        */
1916:Src/BLDC_controller.c ****       rtb_Saturation = (int16_T)(((uint16_T)((tmp[rtU->z_ctrlModReq] << 5) / 125)
1917:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
1918:Src/BLDC_controller.c **** 
1919:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/FOC_Control_Type' */
1920:Src/BLDC_controller.c ****     } else if (DataTypeConversion2 > 16000) {
 3377              		.loc 1 1920 12 is_stmt 1 view .LVU1174
 3378              		.loc 1 1920 15 is_stmt 0 view .LVU1175
 3379 06ca B9F57A5F 		cmp	r9, #16000
 3380 06ce 00F3D280 		bgt	.L388
1921:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/Default_Control_Type' incorporates:
1922:Src/BLDC_controller.c ****        *  ActionPort: '<S34>/Action Port'
ARM GAS  /tmp/cccGHnrd.s 			page 99


1923:Src/BLDC_controller.c ****        */
1924:Src/BLDC_controller.c ****       /* Saturate: '<S33>/Saturation' incorporates:
1925:Src/BLDC_controller.c ****        *  Inport: '<S34>/r_inpTgt'
1926:Src/BLDC_controller.c ****        */
1927:Src/BLDC_controller.c ****       rtb_Saturation = 16000;
1928:Src/BLDC_controller.c **** 
1929:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/Default_Control_Type' */
1930:Src/BLDC_controller.c ****     } else if (DataTypeConversion2 < -16000) {
 3381              		.loc 1 1930 12 is_stmt 1 view .LVU1176
 3382              		.loc 1 1930 15 is_stmt 0 view .LVU1177
 3383 06d2 19F57A5F 		cmn	r9, #16000
 3384 06d6 80F2BE80 		bge	.L245
1931:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/Default_Control_Type' incorporates:
1932:Src/BLDC_controller.c ****        *  ActionPort: '<S34>/Action Port'
1933:Src/BLDC_controller.c ****        */
1934:Src/BLDC_controller.c ****       /* Saturate: '<S33>/Saturation' incorporates:
1935:Src/BLDC_controller.c ****        *  Inport: '<S34>/r_inpTgt'
1936:Src/BLDC_controller.c ****        */
1937:Src/BLDC_controller.c ****       rtb_Saturation = -16000;
 3385              		.loc 1 1937 22 view .LVU1178
 3386 06da DFF8E492 		ldr	r9, .L473
 3387              	.LVL346:
 3388              		.loc 1 1937 22 view .LVU1179
 3389 06de BAE0     		b	.L245
 3390              	.LVL347:
 3391              	.L383:
1781:Src/BLDC_controller.c **** 
 3392              		.loc 1 1781 56 discriminator 4 view .LVU1180
 3393 06e0 0021     		movs	r1, #0
 3394 06e2 DCE7     		b	.L227
 3395              	.LVL348:
 3396              	.L451:
1790:Src/BLDC_controller.c **** 
 3397              		.loc 1 1790 64 discriminator 1 view .LVU1181
 3398 06e4 95F8FC20 		ldrb	r2, [r5, #252]	@ zero_extendqisi2
1790:Src/BLDC_controller.c **** 
 3399              		.loc 1 1790 56 discriminator 1 view .LVU1182
 3400 06e8 0AB1     		cbz	r2, .L385
1790:Src/BLDC_controller.c **** 
 3401              		.loc 1 1790 56 discriminator 4 view .LVU1183
 3402 06ea 0022     		movs	r2, #0
 3403 06ec DBE7     		b	.L228
 3404              	.L385:
1790:Src/BLDC_controller.c **** 
 3405              		.loc 1 1790 56 discriminator 3 view .LVU1184
 3406 06ee 0122     		movs	r2, #1
 3407 06f0 D9E7     		b	.L228
 3408              	.LVL349:
 3409              	.L229:
1804:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
 3410              		.loc 1 1804 12 is_stmt 1 view .LVU1185
1804:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
 3411              		.loc 1 1804 20 is_stmt 0 view .LVU1186
 3412 06f2 94F89F20 		ldrb	r2, [r4, #159]	@ zero_extendqisi2
1804:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
 3413              		.loc 1 1804 15 view .LVU1187
 3414 06f6 012A     		cmp	r2, #1
ARM GAS  /tmp/cccGHnrd.s 			page 100


 3415 06f8 0FD0     		beq	.L453
1858:Src/BLDC_controller.c ****       if ((!rtb_RelationalOperator1_mv) && ((rtU->z_ctrlModReq == 1) ||
 3416              		.loc 1 1858 7 is_stmt 1 view .LVU1188
1858:Src/BLDC_controller.c ****       if ((!rtb_RelationalOperator1_mv) && ((rtU->z_ctrlModReq == 1) ||
 3417              		.loc 1 1858 23 is_stmt 0 view .LVU1189
 3418 06fa 0022     		movs	r2, #0
 3419 06fc 84F89920 		strb	r2, [r4, #153]
1859:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
 3420              		.loc 1 1859 7 is_stmt 1 view .LVU1190
1859:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
 3421              		.loc 1 1859 10 is_stmt 0 view .LVU1191
 3422 0700 002B     		cmp	r3, #0
 3423 0702 DDD1     		bne	.L230
1859:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
 3424              		.loc 1 1859 49 discriminator 1 view .LVU1192
 3425 0704 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
1859:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
 3426              		.loc 1 1859 41 discriminator 1 view .LVU1193
 3427 0706 012B     		cmp	r3, #1
 3428 0708 5FD0     		beq	.L239
1859:Src/BLDC_controller.c ****            rtb_LogicalOperator1_j || rtb_LogicalOperator2_p)) {
 3429              		.loc 1 1859 70 discriminator 2 view .LVU1194
 3430 070a 0028     		cmp	r0, #0
 3431 070c 5DD1     		bne	.L239
1860:Src/BLDC_controller.c ****         rtDW->is_c1_BLDC_controller = IN_ACTIVE;
 3432              		.loc 1 1860 35 view .LVU1195
 3433 070e 0029     		cmp	r1, #0
 3434 0710 D6D0     		beq	.L230
1861:Src/BLDC_controller.c ****         if (rtb_LogicalOperator2_p) {
 3435              		.loc 1 1861 9 is_stmt 1 view .LVU1196
1861:Src/BLDC_controller.c ****         if (rtb_LogicalOperator2_p) {
 3436              		.loc 1 1861 37 is_stmt 0 view .LVU1197
 3437 0712 0123     		movs	r3, #1
 3438 0714 84F89F30 		strb	r3, [r4, #159]
1862:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3439              		.loc 1 1862 9 is_stmt 1 view .LVU1198
 3440 0718 5BE0     		b	.L240
 3441              	.L453:
1805:Src/BLDC_controller.c ****         rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3442              		.loc 1 1805 7 view .LVU1199
1805:Src/BLDC_controller.c ****         rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3443              		.loc 1 1805 10 is_stmt 0 view .LVU1200
 3444 071a 43B1     		cbz	r3, .L232
1806:Src/BLDC_controller.c ****         rtDW->is_c1_BLDC_controller = IN_OPEN;
 3445              		.loc 1 1806 9 is_stmt 1 view .LVU1201
1806:Src/BLDC_controller.c ****         rtDW->is_c1_BLDC_controller = IN_OPEN;
 3446              		.loc 1 1806 25 is_stmt 0 view .LVU1202
 3447 071c 0023     		movs	r3, #0
 3448 071e 84F8A030 		strb	r3, [r4, #160]
1807:Src/BLDC_controller.c ****         rtDW->z_ctrlMod = OPEN_MODE;
 3449              		.loc 1 1807 9 is_stmt 1 view .LVU1203
1807:Src/BLDC_controller.c ****         rtDW->z_ctrlMod = OPEN_MODE;
 3450              		.loc 1 1807 37 is_stmt 0 view .LVU1204
 3451 0722 0222     		movs	r2, #2
 3452 0724 84F89F20 		strb	r2, [r4, #159]
1808:Src/BLDC_controller.c ****       } else {
 3453              		.loc 1 1808 9 is_stmt 1 view .LVU1205
ARM GAS  /tmp/cccGHnrd.s 			page 101


1808:Src/BLDC_controller.c ****       } else {
 3454              		.loc 1 1808 25 is_stmt 0 view .LVU1206
 3455 0728 84F89930 		strb	r3, [r4, #153]
 3456 072c C8E7     		b	.L230
 3457              	.L232:
1810:Src/BLDC_controller.c ****          case IN_SPEED_MODE:
 3458              		.loc 1 1810 9 is_stmt 1 view .LVU1207
1810:Src/BLDC_controller.c ****          case IN_SPEED_MODE:
 3459              		.loc 1 1810 21 is_stmt 0 view .LVU1208
 3460 072e 94F8A030 		ldrb	r3, [r4, #160]	@ zero_extendqisi2
1810:Src/BLDC_controller.c ****          case IN_SPEED_MODE:
 3461              		.loc 1 1810 9 view .LVU1209
 3462 0732 012B     		cmp	r3, #1
 3463 0734 0FD0     		beq	.L233
 3464 0736 022B     		cmp	r3, #2
 3465 0738 24D0     		beq	.L234
1840:Src/BLDC_controller.c ****           if (rtb_LogicalOperator2_p || rtb_LogicalOperator1_j) {
 3466              		.loc 1 1840 11 is_stmt 1 view .LVU1210
1840:Src/BLDC_controller.c ****           if (rtb_LogicalOperator2_p || rtb_LogicalOperator1_j) {
 3467              		.loc 1 1840 27 is_stmt 0 view .LVU1211
 3468 073a 0123     		movs	r3, #1
 3469 073c 84F89930 		strb	r3, [r4, #153]
1841:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3470              		.loc 1 1841 11 is_stmt 1 view .LVU1212
1841:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3471              		.loc 1 1841 14 is_stmt 0 view .LVU1213
 3472 0740 B9B3     		cbz	r1, .L238
1842:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
 3473              		.loc 1 1842 13 is_stmt 1 view .LVU1214
1842:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
 3474              		.loc 1 1842 29 is_stmt 0 view .LVU1215
 3475 0742 0023     		movs	r3, #0
 3476 0744 84F8A030 		strb	r3, [r4, #160]
1843:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3477              		.loc 1 1843 13 is_stmt 1 view .LVU1216
1844:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
 3478              		.loc 1 1844 15 view .LVU1217
1844:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
 3479              		.loc 1 1844 31 is_stmt 0 view .LVU1218
 3480 0748 0223     		movs	r3, #2
 3481 074a 84F8A030 		strb	r3, [r4, #160]
1845:Src/BLDC_controller.c ****             } else if (rtb_LogicalOperator1_j) {
 3482              		.loc 1 1845 15 is_stmt 1 view .LVU1219
1845:Src/BLDC_controller.c ****             } else if (rtb_LogicalOperator1_j) {
 3483              		.loc 1 1845 31 is_stmt 0 view .LVU1220
 3484 074e 0323     		movs	r3, #3
 3485 0750 84F89930 		strb	r3, [r4, #153]
 3486 0754 B4E7     		b	.L230
 3487              	.L233:
1812:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator1_j) {
 3488              		.loc 1 1812 11 is_stmt 1 view .LVU1221
1812:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator1_j) {
 3489              		.loc 1 1812 27 is_stmt 0 view .LVU1222
 3490 0756 0223     		movs	r3, #2
 3491 0758 84F89930 		strb	r3, [r4, #153]
1813:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3492              		.loc 1 1813 11 is_stmt 1 view .LVU1223
ARM GAS  /tmp/cccGHnrd.s 			page 102


1813:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3493              		.loc 1 1813 14 is_stmt 0 view .LVU1224
 3494 075c 0028     		cmp	r0, #0
 3495 075e AFD1     		bne	.L230
1814:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
 3496              		.loc 1 1814 13 is_stmt 1 view .LVU1225
1814:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
 3497              		.loc 1 1814 29 is_stmt 0 view .LVU1226
 3498 0760 0023     		movs	r3, #0
 3499 0762 84F8A030 		strb	r3, [r4, #160]
1815:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3500              		.loc 1 1815 13 is_stmt 1 view .LVU1227
1815:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3501              		.loc 1 1815 16 is_stmt 0 view .LVU1228
 3502 0766 31B1     		cbz	r1, .L236
1816:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
 3503              		.loc 1 1816 15 is_stmt 1 view .LVU1229
1816:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = TRQ_MODE;
 3504              		.loc 1 1816 31 is_stmt 0 view .LVU1230
 3505 0768 0223     		movs	r3, #2
 3506 076a 84F8A030 		strb	r3, [r4, #160]
1817:Src/BLDC_controller.c ****             } else {
 3507              		.loc 1 1817 15 is_stmt 1 view .LVU1231
1817:Src/BLDC_controller.c ****             } else {
 3508              		.loc 1 1817 31 is_stmt 0 view .LVU1232
 3509 076e 0323     		movs	r3, #3
 3510 0770 84F89930 		strb	r3, [r4, #153]
 3511 0774 A4E7     		b	.L230
 3512              	.L236:
1819:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
 3513              		.loc 1 1819 15 is_stmt 1 view .LVU1233
1819:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
 3514              		.loc 1 1819 31 is_stmt 0 view .LVU1234
 3515 0776 0323     		movs	r3, #3
 3516 0778 84F8A030 		strb	r3, [r4, #160]
1820:Src/BLDC_controller.c ****             }
 3517              		.loc 1 1820 15 is_stmt 1 view .LVU1235
1820:Src/BLDC_controller.c ****             }
 3518              		.loc 1 1820 31 is_stmt 0 view .LVU1236
 3519 077c 0123     		movs	r3, #1
 3520 077e 84F89930 		strb	r3, [r4, #153]
 3521 0782 9DE7     		b	.L230
 3522              	.L234:
1826:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator2_p) {
 3523              		.loc 1 1826 11 is_stmt 1 view .LVU1237
1826:Src/BLDC_controller.c ****           if (!rtb_LogicalOperator2_p) {
 3524              		.loc 1 1826 27 is_stmt 0 view .LVU1238
 3525 0784 0323     		movs	r3, #3
 3526 0786 84F89930 		strb	r3, [r4, #153]
1827:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3527              		.loc 1 1827 11 is_stmt 1 view .LVU1239
1827:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3528              		.loc 1 1827 14 is_stmt 0 view .LVU1240
 3529 078a 0029     		cmp	r1, #0
 3530 078c 98D1     		bne	.L230
1828:Src/BLDC_controller.c ****             if (rtb_LogicalOperator1_j) {
 3531              		.loc 1 1828 13 is_stmt 1 view .LVU1241
ARM GAS  /tmp/cccGHnrd.s 			page 103


1828:Src/BLDC_controller.c ****             if (rtb_LogicalOperator1_j) {
 3532              		.loc 1 1828 29 is_stmt 0 view .LVU1242
 3533 078e 0023     		movs	r3, #0
 3534 0790 84F8A030 		strb	r3, [r4, #160]
1829:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_SPEED_MODE;
 3535              		.loc 1 1829 13 is_stmt 1 view .LVU1243
1829:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_SPEED_MODE;
 3536              		.loc 1 1829 16 is_stmt 0 view .LVU1244
 3537 0794 30B1     		cbz	r0, .L237
1830:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
 3538              		.loc 1 1830 15 is_stmt 1 view .LVU1245
1830:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
 3539              		.loc 1 1830 31 is_stmt 0 view .LVU1246
 3540 0796 0123     		movs	r3, #1
 3541 0798 84F8A030 		strb	r3, [r4, #160]
1831:Src/BLDC_controller.c ****             } else {
 3542              		.loc 1 1831 15 is_stmt 1 view .LVU1247
1831:Src/BLDC_controller.c ****             } else {
 3543              		.loc 1 1831 31 is_stmt 0 view .LVU1248
 3544 079c 0223     		movs	r3, #2
 3545 079e 84F89930 		strb	r3, [r4, #153]
 3546 07a2 8DE7     		b	.L230
 3547              	.L237:
1833:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
 3548              		.loc 1 1833 15 is_stmt 1 view .LVU1249
1833:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = VLT_MODE;
 3549              		.loc 1 1833 31 is_stmt 0 view .LVU1250
 3550 07a4 0323     		movs	r3, #3
 3551 07a6 84F8A030 		strb	r3, [r4, #160]
1834:Src/BLDC_controller.c ****             }
 3552              		.loc 1 1834 15 is_stmt 1 view .LVU1251
1834:Src/BLDC_controller.c ****             }
 3553              		.loc 1 1834 31 is_stmt 0 view .LVU1252
 3554 07aa 0123     		movs	r3, #1
 3555 07ac 84F89930 		strb	r3, [r4, #153]
 3556 07b0 86E7     		b	.L230
 3557              	.L238:
1841:Src/BLDC_controller.c ****             rtDW->is_ACTIVE = IN_NO_ACTIVE_CHILD;
 3558              		.loc 1 1841 38 discriminator 1 view .LVU1253
 3559 07b2 0028     		cmp	r0, #0
 3560 07b4 84D0     		beq	.L230
1842:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
 3561              		.loc 1 1842 13 is_stmt 1 view .LVU1254
1842:Src/BLDC_controller.c ****             if (rtb_LogicalOperator2_p) {
 3562              		.loc 1 1842 29 is_stmt 0 view .LVU1255
 3563 07b6 0023     		movs	r3, #0
 3564 07b8 84F8A030 		strb	r3, [r4, #160]
1843:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3565              		.loc 1 1843 13 is_stmt 1 view .LVU1256
1846:Src/BLDC_controller.c ****               rtDW->is_ACTIVE = IN_SPEED_MODE;
 3566              		.loc 1 1846 20 view .LVU1257
1847:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
 3567              		.loc 1 1847 15 view .LVU1258
1847:Src/BLDC_controller.c ****               rtDW->z_ctrlMod = SPD_MODE;
 3568              		.loc 1 1847 31 is_stmt 0 view .LVU1259
 3569 07bc 0123     		movs	r3, #1
 3570 07be 84F8A030 		strb	r3, [r4, #160]
ARM GAS  /tmp/cccGHnrd.s 			page 104


1848:Src/BLDC_controller.c ****             } else {
 3571              		.loc 1 1848 15 is_stmt 1 view .LVU1260
1848:Src/BLDC_controller.c ****             } else {
 3572              		.loc 1 1848 31 is_stmt 0 view .LVU1261
 3573 07c2 0223     		movs	r3, #2
 3574 07c4 84F89930 		strb	r3, [r4, #153]
 3575 07c8 7AE7     		b	.L230
 3576              	.L239:
1861:Src/BLDC_controller.c ****         if (rtb_LogicalOperator2_p) {
 3577              		.loc 1 1861 9 is_stmt 1 view .LVU1262
1861:Src/BLDC_controller.c ****         if (rtb_LogicalOperator2_p) {
 3578              		.loc 1 1861 37 is_stmt 0 view .LVU1263
 3579 07ca 0123     		movs	r3, #1
 3580 07cc 84F89F30 		strb	r3, [r4, #159]
1862:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3581              		.loc 1 1862 9 is_stmt 1 view .LVU1264
1862:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_TORQUE_MODE;
 3582              		.loc 1 1862 12 is_stmt 0 view .LVU1265
 3583 07d0 31B1     		cbz	r1, .L241
 3584              	.L240:
1863:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = TRQ_MODE;
 3585              		.loc 1 1863 11 is_stmt 1 view .LVU1266
1863:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = TRQ_MODE;
 3586              		.loc 1 1863 27 is_stmt 0 view .LVU1267
 3587 07d2 0223     		movs	r3, #2
 3588 07d4 84F8A030 		strb	r3, [r4, #160]
1864:Src/BLDC_controller.c ****         } else if (rtb_LogicalOperator1_j) {
 3589              		.loc 1 1864 11 is_stmt 1 view .LVU1268
1864:Src/BLDC_controller.c ****         } else if (rtb_LogicalOperator1_j) {
 3590              		.loc 1 1864 27 is_stmt 0 view .LVU1269
 3591 07d8 0323     		movs	r3, #3
 3592 07da 84F89930 		strb	r3, [r4, #153]
 3593 07de 6FE7     		b	.L230
 3594              	.L241:
1865:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_SPEED_MODE;
 3595              		.loc 1 1865 16 is_stmt 1 view .LVU1270
1865:Src/BLDC_controller.c ****           rtDW->is_ACTIVE = IN_SPEED_MODE;
 3596              		.loc 1 1865 19 is_stmt 0 view .LVU1271
 3597 07e0 30B1     		cbz	r0, .L242
1866:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = SPD_MODE;
 3598              		.loc 1 1866 11 is_stmt 1 view .LVU1272
1866:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = SPD_MODE;
 3599              		.loc 1 1866 27 is_stmt 0 view .LVU1273
 3600 07e2 0123     		movs	r3, #1
 3601 07e4 84F8A030 		strb	r3, [r4, #160]
1867:Src/BLDC_controller.c ****         } else {
 3602              		.loc 1 1867 11 is_stmt 1 view .LVU1274
1867:Src/BLDC_controller.c ****         } else {
 3603              		.loc 1 1867 27 is_stmt 0 view .LVU1275
 3604 07e8 0223     		movs	r3, #2
 3605 07ea 84F89930 		strb	r3, [r4, #153]
 3606 07ee 67E7     		b	.L230
 3607              	.L242:
1869:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = VLT_MODE;
 3608              		.loc 1 1869 11 is_stmt 1 view .LVU1276
1869:Src/BLDC_controller.c ****           rtDW->z_ctrlMod = VLT_MODE;
 3609              		.loc 1 1869 27 is_stmt 0 view .LVU1277
ARM GAS  /tmp/cccGHnrd.s 			page 105


 3610 07f0 0323     		movs	r3, #3
 3611 07f2 84F8A030 		strb	r3, [r4, #160]
1870:Src/BLDC_controller.c ****         }
 3612              		.loc 1 1870 11 is_stmt 1 view .LVU1278
1870:Src/BLDC_controller.c ****         }
 3613              		.loc 1 1870 27 is_stmt 0 view .LVU1279
 3614 07f6 0123     		movs	r3, #1
 3615 07f8 84F89930 		strb	r3, [r4, #153]
 3616 07fc 60E7     		b	.L230
 3617              	.L452:
1892:Src/BLDC_controller.c ****       tmp[1] = rtP->Vd_max;
 3618              		.loc 1 1892 7 is_stmt 1 view .LVU1280
1892:Src/BLDC_controller.c ****       tmp[1] = rtP->Vd_max;
 3619              		.loc 1 1892 14 is_stmt 0 view .LVU1281
 3620 07fe 0023     		movs	r3, #0
 3621 0800 ADF83830 		strh	r3, [sp, #56]	@ movhi
1893:Src/BLDC_controller.c ****       tmp[2] = rtP->n_max;
 3622              		.loc 1 1893 7 is_stmt 1 view .LVU1282
1893:Src/BLDC_controller.c ****       tmp[2] = rtP->n_max;
 3623              		.loc 1 1893 19 is_stmt 0 view .LVU1283
 3624 0804 B5F91230 		ldrsh	r3, [r5, #18]
1893:Src/BLDC_controller.c ****       tmp[2] = rtP->n_max;
 3625              		.loc 1 1893 14 view .LVU1284
 3626 0808 ADF83A30 		strh	r3, [sp, #58]	@ movhi
1894:Src/BLDC_controller.c ****       tmp[3] = rtP->i_max;
 3627              		.loc 1 1894 7 is_stmt 1 view .LVU1285
1894:Src/BLDC_controller.c ****       tmp[3] = rtP->i_max;
 3628              		.loc 1 1894 19 is_stmt 0 view .LVU1286
 3629 080c B5F9DA30 		ldrsh	r3, [r5, #218]
1894:Src/BLDC_controller.c ****       tmp[3] = rtP->i_max;
 3630              		.loc 1 1894 14 view .LVU1287
 3631 0810 ADF83C30 		strh	r3, [sp, #60]	@ movhi
1895:Src/BLDC_controller.c **** 
 3632              		.loc 1 1895 7 is_stmt 1 view .LVU1288
1895:Src/BLDC_controller.c **** 
 3633              		.loc 1 1895 19 is_stmt 0 view .LVU1289
 3634 0814 B5F9CE30 		ldrsh	r3, [r5, #206]
1895:Src/BLDC_controller.c **** 
 3635              		.loc 1 1895 14 view .LVU1290
 3636 0818 ADF83E30 		strh	r3, [sp, #62]	@ movhi
1900:Src/BLDC_controller.c ****         DataTypeConversion2 = 16000;
 3637              		.loc 1 1900 7 is_stmt 1 view .LVU1291
1900:Src/BLDC_controller.c ****         DataTypeConversion2 = 16000;
 3638              		.loc 1 1900 10 is_stmt 0 view .LVU1292
 3639 081c B9F57A5F 		cmp	r9, #16000
 3640 0820 05DC     		bgt	.L386
1903:Src/BLDC_controller.c ****           DataTypeConversion2 = -16000;
 3641              		.loc 1 1903 9 is_stmt 1 view .LVU1293
1903:Src/BLDC_controller.c ****           DataTypeConversion2 = -16000;
 3642              		.loc 1 1903 12 is_stmt 0 view .LVU1294
 3643 0822 19F57A5F 		cmn	r9, #16000
 3644 0826 04DA     		bge	.L244
1904:Src/BLDC_controller.c ****         }
 3645              		.loc 1 1904 31 view .LVU1295
 3646 0828 DFF89491 		ldr	r9, .L473
 3647              	.LVL350:
1904:Src/BLDC_controller.c ****         }
ARM GAS  /tmp/cccGHnrd.s 			page 106


 3648              		.loc 1 1904 31 view .LVU1296
 3649 082c 01E0     		b	.L244
 3650              	.LVL351:
 3651              	.L386:
1901:Src/BLDC_controller.c ****       } else {
 3652              		.loc 1 1901 29 view .LVU1297
 3653 082e 4FF47A59 		mov	r9, #16000
 3654              	.LVL352:
 3655              	.L244:
1916:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3656              		.loc 1 1916 7 is_stmt 1 view .LVU1298
1916:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3657              		.loc 1 1916 54 is_stmt 0 view .LVU1299
 3658 0832 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
1916:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3659              		.loc 1 1916 50 view .LVU1300
 3660 0834 12AA     		add	r2, sp, #72
 3661 0836 02EB4303 		add	r3, r2, r3, lsl #1
 3662 083a 33F9103C 		ldrsh	r3, [r3, #-16]
1916:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3663              		.loc 1 1916 70 view .LVU1301
 3664 083e 5B01     		lsls	r3, r3, #5
1916:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3665              		.loc 1 1916 76 view .LVU1302
 3666 0840 604A     		ldr	r2, .L473+4
 3667 0842 82FB0312 		smull	r1, r2, r2, r3
 3668              	.LVL353:
1916:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3669              		.loc 1 1916 76 view .LVU1303
 3670 0846 DB17     		asrs	r3, r3, #31
 3671 0848 C3EBE203 		rsb	r3, r3, r2, asr #3
1917:Src/BLDC_controller.c **** 
 3672              		.loc 1 1917 9 view .LVU1304
 3673 084c 9BB2     		uxth	r3, r3
 3674 084e 09FB03F3 		mul	r3, r9, r3
1916:Src/BLDC_controller.c ****         * DataTypeConversion2) >> 12);
 3675              		.loc 1 1916 22 view .LVU1305
 3676 0852 43F30F39 		sbfx	r9, r3, #12, #16
 3677              	.LVL354:
 3678              	.L245:
1938:Src/BLDC_controller.c **** 
1939:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/Default_Control_Type' */
1940:Src/BLDC_controller.c ****     } else {
1941:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/Default_Control_Type' incorporates:
1942:Src/BLDC_controller.c ****        *  ActionPort: '<S34>/Action Port'
1943:Src/BLDC_controller.c ****        */
1944:Src/BLDC_controller.c ****       rtb_Saturation = DataTypeConversion2;
1945:Src/BLDC_controller.c **** 
1946:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/Default_Control_Type' */
1947:Src/BLDC_controller.c ****     }
1948:Src/BLDC_controller.c **** 
1949:Src/BLDC_controller.c ****     /* End of If: '<S33>/If1' */
1950:Src/BLDC_controller.c **** 
1951:Src/BLDC_controller.c ****     /* If: '<S33>/If2' incorporates:
1952:Src/BLDC_controller.c ****      *  Inport: '<S35>/r_inpTgtScaRaw'
1953:Src/BLDC_controller.c ****      */
1954:Src/BLDC_controller.c ****     rtb_Sum2_h = rtDW->If2_ActiveSubsystem_f;
ARM GAS  /tmp/cccGHnrd.s 			page 107


 3679              		.loc 1 1954 5 is_stmt 1 view .LVU1306
 3680              		.loc 1 1954 16 is_stmt 0 view .LVU1307
 3681 0856 94F99710 		ldrsb	r1, [r4, #151]
 3682              	.LVL355:
1955:Src/BLDC_controller.c ****     UnitDelay3 = (int8_T)!(rtDW->z_ctrlMod == 0);
 3683              		.loc 1 1955 5 is_stmt 1 view .LVU1308
 3684              		.loc 1 1955 32 is_stmt 0 view .LVU1309
 3685 085a 94F89930 		ldrb	r3, [r4, #153]	@ zero_extendqisi2
 3686              		.loc 1 1955 18 view .LVU1310
 3687 085e 003B     		subs	r3, r3, #0
 3688 0860 18BF     		it	ne
 3689 0862 0123     		movne	r3, #1
 3690              		.loc 1 1955 16 view .LVU1311
 3691 0864 5AB2     		sxtb	r2, r3
 3692              	.LVL356:
1956:Src/BLDC_controller.c ****     rtDW->If2_ActiveSubsystem_f = UnitDelay3;
 3693              		.loc 1 1956 5 is_stmt 1 view .LVU1312
 3694              		.loc 1 1956 33 is_stmt 0 view .LVU1313
 3695 0866 84F89720 		strb	r2, [r4, #151]
1957:Src/BLDC_controller.c ****     switch (UnitDelay3) {
 3696              		.loc 1 1957 5 is_stmt 1 view .LVU1314
 3697 086a 3BB1     		cbz	r3, .L246
 3698 086c 002B     		cmp	r3, #0
 3699 086e 3BD0     		beq	.L248
1958:Src/BLDC_controller.c ****      case 0:
1959:Src/BLDC_controller.c ****       if (UnitDelay3 != rtb_Sum2_h) {
1960:Src/BLDC_controller.c ****         /* SystemReset for IfAction SubSystem: '<S33>/Open_Mode' incorporates:
1961:Src/BLDC_controller.c ****          *  ActionPort: '<S37>/Action Port'
1962:Src/BLDC_controller.c ****          */
1963:Src/BLDC_controller.c ****         /* SystemReset for Atomic SubSystem: '<S37>/rising_edge_init' */
1964:Src/BLDC_controller.c ****         /* SystemReset for If: '<S33>/If2' incorporates:
1965:Src/BLDC_controller.c ****          *  UnitDelay: '<S39>/UnitDelay'
1966:Src/BLDC_controller.c ****          *  UnitDelay: '<S40>/UnitDelay'
1967:Src/BLDC_controller.c ****          */
1968:Src/BLDC_controller.c ****         rtDW->UnitDelay_DSTATE_b = true;
1969:Src/BLDC_controller.c **** 
1970:Src/BLDC_controller.c ****         /* End of SystemReset for SubSystem: '<S37>/rising_edge_init' */
1971:Src/BLDC_controller.c **** 
1972:Src/BLDC_controller.c ****         /* SystemReset for Atomic SubSystem: '<S37>/Rate_Limiter' */
1973:Src/BLDC_controller.c ****         rtDW->UnitDelay_DSTATE = 0;
1974:Src/BLDC_controller.c **** 
1975:Src/BLDC_controller.c ****         /* End of SystemReset for SubSystem: '<S37>/Rate_Limiter' */
1976:Src/BLDC_controller.c ****         /* End of SystemReset for SubSystem: '<S33>/Open_Mode' */
1977:Src/BLDC_controller.c ****       }
1978:Src/BLDC_controller.c **** 
1979:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/Open_Mode' incorporates:
1980:Src/BLDC_controller.c ****        *  ActionPort: '<S37>/Action Port'
1981:Src/BLDC_controller.c ****        */
1982:Src/BLDC_controller.c ****       /* DataTypeConversion: '<S37>/Data Type Conversion' incorporates:
1983:Src/BLDC_controller.c ****        *  UnitDelay: '<S8>/UnitDelay4'
1984:Src/BLDC_controller.c ****        */
1985:Src/BLDC_controller.c ****       rtb_Gain3 = rtDW->UnitDelay4_DSTATE_eu << 12;
1986:Src/BLDC_controller.c ****       rtb_Sum1_jt = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
1987:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
1988:Src/BLDC_controller.c **** 
1989:Src/BLDC_controller.c ****       /* Outputs for Atomic SubSystem: '<S37>/rising_edge_init' */
1990:Src/BLDC_controller.c ****       /* UnitDelay: '<S39>/UnitDelay' */
ARM GAS  /tmp/cccGHnrd.s 			page 108


1991:Src/BLDC_controller.c ****       rtb_RelationalOperator1_mv = rtDW->UnitDelay_DSTATE_b;
1992:Src/BLDC_controller.c **** 
1993:Src/BLDC_controller.c ****       /* Update for UnitDelay: '<S39>/UnitDelay' incorporates:
1994:Src/BLDC_controller.c ****        *  Constant: '<S39>/Constant'
1995:Src/BLDC_controller.c ****        */
1996:Src/BLDC_controller.c ****       rtDW->UnitDelay_DSTATE_b = false;
1997:Src/BLDC_controller.c **** 
1998:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S37>/rising_edge_init' */
1999:Src/BLDC_controller.c **** 
2000:Src/BLDC_controller.c ****       /* Outputs for Atomic SubSystem: '<S37>/Rate_Limiter' */
2001:Src/BLDC_controller.c ****       /* Switch: '<S40>/Switch1' incorporates:
2002:Src/BLDC_controller.c ****        *  UnitDelay: '<S40>/UnitDelay'
2003:Src/BLDC_controller.c ****        */
2004:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
2005:Src/BLDC_controller.c ****         rtb_Switch1 = rtb_Sum1_jt;
2006:Src/BLDC_controller.c ****       } else {
2007:Src/BLDC_controller.c ****         rtb_Switch1 = rtDW->UnitDelay_DSTATE;
2008:Src/BLDC_controller.c ****       }
2009:Src/BLDC_controller.c **** 
2010:Src/BLDC_controller.c ****       /* End of Switch: '<S40>/Switch1' */
2011:Src/BLDC_controller.c **** 
2012:Src/BLDC_controller.c ****       /* Sum: '<S38>/Sum1' */
2013:Src/BLDC_controller.c ****       rtb_Gain3 = -rtb_Switch1;
2014:Src/BLDC_controller.c ****       rtb_Sum1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
2015:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
2016:Src/BLDC_controller.c **** 
2017:Src/BLDC_controller.c ****       /* Switch: '<S41>/Switch2' incorporates:
2018:Src/BLDC_controller.c ****        *  Constant: '<S37>/dV_openRate'
2019:Src/BLDC_controller.c ****        *  RelationalOperator: '<S41>/LowerRelop1'
2020:Src/BLDC_controller.c ****        */
2021:Src/BLDC_controller.c ****       if (rtb_Sum1 > rtP->dV_openRate) {
2022:Src/BLDC_controller.c ****         rtb_Sum1 = rtP->dV_openRate;
2023:Src/BLDC_controller.c ****       } else {
2024:Src/BLDC_controller.c ****         /* Gain: '<S37>/Gain3' */
2025:Src/BLDC_controller.c ****         rtb_Gain3 = -rtP->dV_openRate;
2026:Src/BLDC_controller.c ****         rtb_Gain3 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
2027:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
2028:Src/BLDC_controller.c **** 
2029:Src/BLDC_controller.c ****         /* Switch: '<S41>/Switch' incorporates:
2030:Src/BLDC_controller.c ****          *  RelationalOperator: '<S41>/UpperRelop'
2031:Src/BLDC_controller.c ****          */
2032:Src/BLDC_controller.c ****         if (rtb_Sum1 < rtb_Gain3) {
2033:Src/BLDC_controller.c ****           rtb_Sum1 = rtb_Gain3;
2034:Src/BLDC_controller.c ****         }
2035:Src/BLDC_controller.c **** 
2036:Src/BLDC_controller.c ****         /* End of Switch: '<S41>/Switch' */
2037:Src/BLDC_controller.c ****       }
2038:Src/BLDC_controller.c **** 
2039:Src/BLDC_controller.c ****       /* End of Switch: '<S41>/Switch2' */
2040:Src/BLDC_controller.c **** 
2041:Src/BLDC_controller.c ****       /* Sum: '<S38>/Sum2' */
2042:Src/BLDC_controller.c ****       rtb_Gain3 = rtb_Sum1 + rtb_Switch1;
2043:Src/BLDC_controller.c ****       rtb_Switch1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
2044:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
2045:Src/BLDC_controller.c **** 
2046:Src/BLDC_controller.c ****       /* Switch: '<S40>/Switch2' */
2047:Src/BLDC_controller.c ****       if (rtb_RelationalOperator1_mv) {
ARM GAS  /tmp/cccGHnrd.s 			page 109


2048:Src/BLDC_controller.c ****         /* Update for UnitDelay: '<S40>/UnitDelay' */
2049:Src/BLDC_controller.c ****         rtDW->UnitDelay_DSTATE = rtb_Sum1_jt;
2050:Src/BLDC_controller.c ****       } else {
2051:Src/BLDC_controller.c ****         /* Update for UnitDelay: '<S40>/UnitDelay' */
2052:Src/BLDC_controller.c ****         rtDW->UnitDelay_DSTATE = rtb_Switch1;
2053:Src/BLDC_controller.c ****       }
2054:Src/BLDC_controller.c **** 
2055:Src/BLDC_controller.c ****       /* End of Switch: '<S40>/Switch2' */
2056:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S37>/Rate_Limiter' */
2057:Src/BLDC_controller.c **** 
2058:Src/BLDC_controller.c ****       /* DataTypeConversion: '<S37>/Data Type Conversion1' */
2059:Src/BLDC_controller.c ****       rtDW->Merge1 = (int16_T)(rtb_Switch1 >> 12);
2060:Src/BLDC_controller.c **** 
2061:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/Open_Mode' */
2062:Src/BLDC_controller.c ****       break;
2063:Src/BLDC_controller.c **** 
2064:Src/BLDC_controller.c ****      case 1:
2065:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S33>/Default_Mode' incorporates:
2066:Src/BLDC_controller.c ****        *  ActionPort: '<S35>/Action Port'
2067:Src/BLDC_controller.c ****        */
2068:Src/BLDC_controller.c ****       rtDW->Merge1 = rtb_Saturation;
 3700              		.loc 1 2068 7 view .LVU1315
 3701              		.loc 1 2068 20 is_stmt 0 view .LVU1316
 3702 0870 A4F87490 		strh	r9, [r4, #116]	@ movhi
2069:Src/BLDC_controller.c **** 
2070:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S33>/Default_Mode' */
2071:Src/BLDC_controller.c ****       break;
 3703              		.loc 1 2071 7 is_stmt 1 view .LVU1317
 3704 0874 38E0     		b	.L248
 3705              	.LVL357:
 3706              	.L388:
1927:Src/BLDC_controller.c **** 
 3707              		.loc 1 1927 22 is_stmt 0 view .LVU1318
 3708 0876 4FF47A59 		mov	r9, #16000
 3709              	.LVL358:
1927:Src/BLDC_controller.c **** 
 3710              		.loc 1 1927 22 view .LVU1319
 3711 087a ECE7     		b	.L245
 3712              	.LVL359:
 3713              	.L246:
1959:Src/BLDC_controller.c ****         /* SystemReset for IfAction SubSystem: '<S33>/Open_Mode' incorporates:
 3714              		.loc 1 1959 7 is_stmt 1 view .LVU1320
1959:Src/BLDC_controller.c ****         /* SystemReset for IfAction SubSystem: '<S33>/Open_Mode' incorporates:
 3715              		.loc 1 1959 10 is_stmt 0 view .LVU1321
 3716 087c 9142     		cmp	r1, r2
 3717 087e 04D0     		beq	.L249
1968:Src/BLDC_controller.c **** 
 3718              		.loc 1 1968 9 is_stmt 1 view .LVU1322
1968:Src/BLDC_controller.c **** 
 3719              		.loc 1 1968 34 is_stmt 0 view .LVU1323
 3720 0880 0123     		movs	r3, #1
 3721 0882 84F8A630 		strb	r3, [r4, #166]
1973:Src/BLDC_controller.c **** 
 3722              		.loc 1 1973 9 is_stmt 1 view .LVU1324
1973:Src/BLDC_controller.c **** 
 3723              		.loc 1 1973 32 is_stmt 0 view .LVU1325
 3724 0886 0023     		movs	r3, #0
ARM GAS  /tmp/cccGHnrd.s 			page 110


 3725 0888 A364     		str	r3, [r4, #72]
 3726              	.L249:
1985:Src/BLDC_controller.c ****       rtb_Sum1_jt = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3727              		.loc 1 1985 7 is_stmt 1 view .LVU1326
1985:Src/BLDC_controller.c ****       rtb_Sum1_jt = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3728              		.loc 1 1985 23 is_stmt 0 view .LVU1327
 3729 088a B4F98C30 		ldrsh	r3, [r4, #140]
1985:Src/BLDC_controller.c ****       rtb_Sum1_jt = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3730              		.loc 1 1985 17 view .LVU1328
 3731 088e 1903     		lsls	r1, r3, #12
 3732              	.LVL360:
1986:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3733              		.loc 1 1986 7 is_stmt 1 view .LVU1329
1986:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3734              		.loc 1 1986 75 is_stmt 0 view .LVU1330
 3735 0890 002B     		cmp	r3, #0
 3736 0892 64DA     		bge	.L250
1986:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3737              		.loc 1 1986 75 discriminator 1 view .LVU1331
 3738 0894 41F07841 		orr	r1, r1, #-134217728
 3739              	.LVL361:
 3740              	.L251:
1991:Src/BLDC_controller.c **** 
 3741              		.loc 1 1991 7 is_stmt 1 view .LVU1332
1991:Src/BLDC_controller.c **** 
 3742              		.loc 1 1991 40 is_stmt 0 view .LVU1333
 3743 0898 94F8A600 		ldrb	r0, [r4, #166]	@ zero_extendqisi2
 3744              	.LVL362:
1991:Src/BLDC_controller.c **** 
 3745              		.loc 1 1991 34 view .LVU1334
 3746 089c 8DF84700 		strb	r0, [sp, #71]
1996:Src/BLDC_controller.c **** 
 3747              		.loc 1 1996 7 is_stmt 1 view .LVU1335
1996:Src/BLDC_controller.c **** 
 3748              		.loc 1 1996 32 is_stmt 0 view .LVU1336
 3749 08a0 0023     		movs	r3, #0
 3750              	.LVL363:
1996:Src/BLDC_controller.c **** 
 3751              		.loc 1 1996 32 view .LVU1337
 3752 08a2 84F8A630 		strb	r3, [r4, #166]
2004:Src/BLDC_controller.c ****         rtb_Switch1 = rtb_Sum1_jt;
 3753              		.loc 1 2004 7 is_stmt 1 view .LVU1338
2004:Src/BLDC_controller.c ****         rtb_Switch1 = rtb_Sum1_jt;
 3754              		.loc 1 2004 10 is_stmt 0 view .LVU1339
 3755 08a6 0028     		cmp	r0, #0
 3756 08a8 5CD1     		bne	.L389
2007:Src/BLDC_controller.c ****       }
 3757              		.loc 1 2007 9 is_stmt 1 view .LVU1340
2007:Src/BLDC_controller.c ****       }
 3758              		.loc 1 2007 21 is_stmt 0 view .LVU1341
 3759 08aa A36C     		ldr	r3, [r4, #72]
 3760              	.LVL364:
 3761              	.L252:
2013:Src/BLDC_controller.c ****       rtb_Sum1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3762              		.loc 1 2013 7 is_stmt 1 view .LVU1342
2013:Src/BLDC_controller.c ****       rtb_Sum1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3763              		.loc 1 2013 17 is_stmt 0 view .LVU1343
ARM GAS  /tmp/cccGHnrd.s 			page 111


 3764 08ac 5A42     		rsbs	r2, r3, #0
 3765              	.LVL365:
2014:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3766              		.loc 1 2014 7 is_stmt 1 view .LVU1344
2014:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3767              		.loc 1 2014 72 is_stmt 0 view .LVU1345
 3768 08ae 12F0006F 		tst	r2, #134217728
 3769 08b2 59D0     		beq	.L253
2014:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3770              		.loc 1 2014 72 discriminator 1 view .LVU1346
 3771 08b4 42F0784C 		orr	ip, r2, #-134217728
 3772              	.L254:
 3773              	.LVL366:
2021:Src/BLDC_controller.c ****         rtb_Sum1 = rtP->dV_openRate;
 3774              		.loc 1 2021 7 is_stmt 1 view .LVU1347
2021:Src/BLDC_controller.c ****         rtb_Sum1 = rtP->dV_openRate;
 3775              		.loc 1 2021 25 is_stmt 0 view .LVU1348
 3776 08b8 2A68     		ldr	r2, [r5]
 3777              	.LVL367:
2021:Src/BLDC_controller.c ****         rtb_Sum1 = rtP->dV_openRate;
 3778              		.loc 1 2021 10 view .LVU1349
 3779 08ba 6245     		cmp	r2, ip
 3780 08bc 08DB     		blt	.L255
2025:Src/BLDC_controller.c ****         rtb_Gain3 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3781              		.loc 1 2025 9 is_stmt 1 view .LVU1350
2025:Src/BLDC_controller.c ****         rtb_Gain3 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3782              		.loc 1 2025 19 is_stmt 0 view .LVU1351
 3783 08be 5242     		rsbs	r2, r2, #0
 3784              	.LVL368:
2026:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
 3785              		.loc 1 2026 9 is_stmt 1 view .LVU1352
2026:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
 3786              		.loc 1 2026 75 is_stmt 0 view .LVU1353
 3787 08c0 12F0006F 		tst	r2, #134217728
 3788 08c4 53D0     		beq	.L256
2026:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
 3789              		.loc 1 2026 75 discriminator 1 view .LVU1354
 3790 08c6 42F07842 		orr	r2, r2, #-134217728
 3791              	.LVL369:
 3792              	.L257:
2032:Src/BLDC_controller.c ****           rtb_Sum1 = rtb_Gain3;
 3793              		.loc 1 2032 9 is_stmt 1 view .LVU1355
2032:Src/BLDC_controller.c ****           rtb_Sum1 = rtb_Gain3;
 3794              		.loc 1 2032 12 is_stmt 0 view .LVU1356
 3795 08ca 9445     		cmp	ip, r2
 3796 08cc 00DB     		blt	.L255
2014:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3797              		.loc 1 2014 16 discriminator 4 view .LVU1357
 3798 08ce 6246     		mov	r2, ip
 3799              	.LVL370:
 3800              	.L255:
2042:Src/BLDC_controller.c ****       rtb_Switch1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3801              		.loc 1 2042 7 is_stmt 1 view .LVU1358
2042:Src/BLDC_controller.c ****       rtb_Switch1 = (rtb_Gain3 & 134217728) != 0 ? rtb_Gain3 | -134217728 :
 3802              		.loc 1 2042 17 is_stmt 0 view .LVU1359
 3803 08d0 1344     		add	r3, r3, r2
 3804              	.LVL371:
ARM GAS  /tmp/cccGHnrd.s 			page 112


2043:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3805              		.loc 1 2043 7 is_stmt 1 view .LVU1360
2043:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3806              		.loc 1 2043 75 is_stmt 0 view .LVU1361
 3807 08d2 13F0006F 		tst	r3, #134217728
 3808 08d6 4DD0     		beq	.L258
2043:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3809              		.loc 1 2043 75 discriminator 1 view .LVU1362
 3810 08d8 43F07843 		orr	r3, r3, #-134217728
 3811              	.LVL372:
 3812              	.L259:
2047:Src/BLDC_controller.c ****         /* Update for UnitDelay: '<S40>/UnitDelay' */
 3813              		.loc 1 2047 7 is_stmt 1 view .LVU1363
2047:Src/BLDC_controller.c ****         /* Update for UnitDelay: '<S40>/UnitDelay' */
 3814              		.loc 1 2047 10 is_stmt 0 view .LVU1364
 3815 08dc 0028     		cmp	r0, #0
 3816 08de 4CD0     		beq	.L260
2049:Src/BLDC_controller.c ****       } else {
 3817              		.loc 1 2049 9 is_stmt 1 view .LVU1365
2049:Src/BLDC_controller.c ****       } else {
 3818              		.loc 1 2049 32 is_stmt 0 view .LVU1366
 3819 08e0 A164     		str	r1, [r4, #72]
 3820              	.L261:
2059:Src/BLDC_controller.c **** 
 3821              		.loc 1 2059 7 is_stmt 1 view .LVU1367
2059:Src/BLDC_controller.c **** 
 3822              		.loc 1 2059 22 is_stmt 0 view .LVU1368
 3823 08e2 1B13     		asrs	r3, r3, #12
 3824              	.LVL373:
2059:Src/BLDC_controller.c **** 
 3825              		.loc 1 2059 20 view .LVU1369
 3826 08e4 A4F87430 		strh	r3, [r4, #116]	@ movhi
2062:Src/BLDC_controller.c **** 
 3827              		.loc 1 2062 7 is_stmt 1 view .LVU1370
 3828              	.LVL374:
 3829              	.L248:
2072:Src/BLDC_controller.c ****     }
2073:Src/BLDC_controller.c **** 
2074:Src/BLDC_controller.c ****     /* End of If: '<S33>/If2' */
2075:Src/BLDC_controller.c **** 
2076:Src/BLDC_controller.c ****     /* Abs: '<S5>/Abs1' */
2077:Src/BLDC_controller.c ****     if (rtDW->Merge1 < 0) {
 3830              		.loc 1 2077 5 view .LVU1371
 3831              		.loc 1 2077 13 is_stmt 0 view .LVU1372
 3832 08e8 B4F97430 		ldrsh	r3, [r4, #116]
 3833              		.loc 1 2077 8 view .LVU1373
 3834 08ec 002B     		cmp	r3, #0
 3835 08ee 46DB     		blt	.L454
2078:Src/BLDC_controller.c ****       rtDW->Abs1 = (int16_T)-rtDW->Merge1;
2079:Src/BLDC_controller.c ****     } else {
2080:Src/BLDC_controller.c ****       rtDW->Abs1 = rtDW->Merge1;
 3836              		.loc 1 2080 7 is_stmt 1 view .LVU1374
 3837              		.loc 1 2080 18 is_stmt 0 view .LVU1375
 3838 08f0 A4F87630 		strh	r3, [r4, #118]	@ movhi
 3839              	.LVL375:
 3840              	.L263:
2081:Src/BLDC_controller.c ****     }
ARM GAS  /tmp/cccGHnrd.s 			page 113


2082:Src/BLDC_controller.c **** 
2083:Src/BLDC_controller.c ****     /* End of Abs: '<S5>/Abs1' */
2084:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S1>/F03_Control_Mode_Manager' */
2085:Src/BLDC_controller.c ****   } else if (rtDW->UnitDelay5_DSTATE_m) {
2086:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F04_Field_Weakening' */
2087:Src/BLDC_controller.c ****     /* If: '<S6>/If3' incorporates:
2088:Src/BLDC_controller.c ****      *  Constant: '<S6>/b_fieldWeakEna'
2089:Src/BLDC_controller.c ****      */
2090:Src/BLDC_controller.c ****     if (rtP->b_fieldWeakEna) {
2091:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S6>/Field_Weakening_Enabled' incorporates:
2092:Src/BLDC_controller.c ****        *  ActionPort: '<S42>/Action Port'
2093:Src/BLDC_controller.c ****        */
2094:Src/BLDC_controller.c ****       /* Abs: '<S42>/Abs5' */
2095:Src/BLDC_controller.c ****       if (DataTypeConversion2 < 0) {
2096:Src/BLDC_controller.c ****         DataTypeConversion2 = (int16_T)-DataTypeConversion2;
2097:Src/BLDC_controller.c ****       }
2098:Src/BLDC_controller.c **** 
2099:Src/BLDC_controller.c ****       /* End of Abs: '<S42>/Abs5' */
2100:Src/BLDC_controller.c **** 
2101:Src/BLDC_controller.c ****       /* Switch: '<S44>/Switch2' incorporates:
2102:Src/BLDC_controller.c ****        *  Constant: '<S42>/r_fieldWeakHi'
2103:Src/BLDC_controller.c ****        *  Constant: '<S42>/r_fieldWeakLo'
2104:Src/BLDC_controller.c ****        *  RelationalOperator: '<S44>/LowerRelop1'
2105:Src/BLDC_controller.c ****        *  RelationalOperator: '<S44>/UpperRelop'
2106:Src/BLDC_controller.c ****        *  Switch: '<S44>/Switch'
2107:Src/BLDC_controller.c ****        */
2108:Src/BLDC_controller.c ****       if (DataTypeConversion2 > rtP->r_fieldWeakHi) {
2109:Src/BLDC_controller.c ****         DataTypeConversion2 = rtP->r_fieldWeakHi;
2110:Src/BLDC_controller.c ****       } else {
2111:Src/BLDC_controller.c ****         if (DataTypeConversion2 < rtP->r_fieldWeakLo) {
2112:Src/BLDC_controller.c ****           /* Switch: '<S44>/Switch' incorporates:
2113:Src/BLDC_controller.c ****            *  Constant: '<S42>/r_fieldWeakLo'
2114:Src/BLDC_controller.c ****            */
2115:Src/BLDC_controller.c ****           DataTypeConversion2 = rtP->r_fieldWeakLo;
2116:Src/BLDC_controller.c ****         }
2117:Src/BLDC_controller.c ****       }
2118:Src/BLDC_controller.c **** 
2119:Src/BLDC_controller.c ****       /* End of Switch: '<S44>/Switch2' */
2120:Src/BLDC_controller.c **** 
2121:Src/BLDC_controller.c ****       /* Product: '<S42>/Divide14' incorporates:
2122:Src/BLDC_controller.c ****        *  Constant: '<S42>/r_fieldWeakHi'
2123:Src/BLDC_controller.c ****        *  Constant: '<S42>/r_fieldWeakLo'
2124:Src/BLDC_controller.c ****        *  Sum: '<S42>/Sum1'
2125:Src/BLDC_controller.c ****        *  Sum: '<S42>/Sum3'
2126:Src/BLDC_controller.c ****        */
2127:Src/BLDC_controller.c ****       rtb_Divide14_e = (uint16_T)(((int16_T)(DataTypeConversion2 -
2128:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo) << 15) / (int16_T)(rtP->r_fieldWeakHi -
2129:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo));
2130:Src/BLDC_controller.c **** 
2131:Src/BLDC_controller.c ****       /* Switch: '<S43>/Switch2' incorporates:
2132:Src/BLDC_controller.c ****        *  Constant: '<S42>/n_fieldWeakAuthHi'
2133:Src/BLDC_controller.c ****        *  Constant: '<S42>/n_fieldWeakAuthLo'
2134:Src/BLDC_controller.c ****        *  RelationalOperator: '<S43>/LowerRelop1'
2135:Src/BLDC_controller.c ****        *  RelationalOperator: '<S43>/UpperRelop'
2136:Src/BLDC_controller.c ****        *  Switch: '<S43>/Switch'
2137:Src/BLDC_controller.c ****        */
2138:Src/BLDC_controller.c ****       if (Abs5 > rtP->n_fieldWeakAuthHi) {
ARM GAS  /tmp/cccGHnrd.s 			page 114


2139:Src/BLDC_controller.c ****         rtb_Saturation = rtP->n_fieldWeakAuthHi;
2140:Src/BLDC_controller.c ****       } else if (Abs5 < rtP->n_fieldWeakAuthLo) {
2141:Src/BLDC_controller.c ****         /* Switch: '<S43>/Switch' incorporates:
2142:Src/BLDC_controller.c ****          *  Constant: '<S42>/n_fieldWeakAuthLo'
2143:Src/BLDC_controller.c ****          */
2144:Src/BLDC_controller.c ****         rtb_Saturation = rtP->n_fieldWeakAuthLo;
2145:Src/BLDC_controller.c ****       } else {
2146:Src/BLDC_controller.c ****         rtb_Saturation = Abs5;
2147:Src/BLDC_controller.c ****       }
2148:Src/BLDC_controller.c **** 
2149:Src/BLDC_controller.c ****       /* End of Switch: '<S43>/Switch2' */
2150:Src/BLDC_controller.c **** 
2151:Src/BLDC_controller.c ****       /* Product: '<S42>/Divide1' incorporates:
2152:Src/BLDC_controller.c ****        *  Constant: '<S42>/n_fieldWeakAuthHi'
2153:Src/BLDC_controller.c ****        *  Constant: '<S42>/n_fieldWeakAuthLo'
2154:Src/BLDC_controller.c ****        *  Sum: '<S42>/Sum2'
2155:Src/BLDC_controller.c ****        *  Sum: '<S42>/Sum4'
2156:Src/BLDC_controller.c ****        */
2157:Src/BLDC_controller.c ****       rtb_Divide1_f = (uint16_T)(((int16_T)(rtb_Saturation -
2158:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo) << 15) / (int16_T)(rtP->n_fieldWeakAuthHi -
2159:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo));
2160:Src/BLDC_controller.c **** 
2161:Src/BLDC_controller.c ****       /* Switch: '<S42>/Switch1' incorporates:
2162:Src/BLDC_controller.c ****        *  MinMax: '<S42>/MinMax1'
2163:Src/BLDC_controller.c ****        *  RelationalOperator: '<S42>/Relational Operator6'
2164:Src/BLDC_controller.c ****        */
2165:Src/BLDC_controller.c ****       if (rtb_Divide14_e < rtb_Divide1_f) {
2166:Src/BLDC_controller.c ****         /* MinMax: '<S42>/MinMax' */
2167:Src/BLDC_controller.c ****         if (!(rtb_Divide14_e > rtb_Divide1_f)) {
2168:Src/BLDC_controller.c ****           rtb_Divide14_e = rtb_Divide1_f;
2169:Src/BLDC_controller.c ****         }
2170:Src/BLDC_controller.c **** 
2171:Src/BLDC_controller.c ****         /* End of MinMax: '<S42>/MinMax' */
2172:Src/BLDC_controller.c ****       } else {
2173:Src/BLDC_controller.c ****         if (rtb_Divide1_f < rtb_Divide14_e) {
2174:Src/BLDC_controller.c ****           /* MinMax: '<S42>/MinMax1' */
2175:Src/BLDC_controller.c ****           rtb_Divide14_e = rtb_Divide1_f;
2176:Src/BLDC_controller.c ****         }
2177:Src/BLDC_controller.c ****       }
2178:Src/BLDC_controller.c **** 
2179:Src/BLDC_controller.c ****       /* End of Switch: '<S42>/Switch1' */
2180:Src/BLDC_controller.c **** 
2181:Src/BLDC_controller.c ****       /* Switch: '<S42>/Switch2' incorporates:
2182:Src/BLDC_controller.c ****        *  Constant: '<S1>/z_ctrlTypSel'
2183:Src/BLDC_controller.c ****        *  Constant: '<S42>/CTRL_COMM2'
2184:Src/BLDC_controller.c ****        *  Constant: '<S42>/a_phaAdvMax'
2185:Src/BLDC_controller.c ****        *  Constant: '<S42>/id_fieldWeakMax'
2186:Src/BLDC_controller.c ****        *  RelationalOperator: '<S42>/Relational Operator1'
2187:Src/BLDC_controller.c ****        */
2188:Src/BLDC_controller.c ****       if (rtP->z_ctrlTypSel == 2) {
2189:Src/BLDC_controller.c ****         rtb_Saturation1 = rtP->id_fieldWeakMax;
2190:Src/BLDC_controller.c ****       } else {
2191:Src/BLDC_controller.c ****         rtb_Saturation1 = rtP->a_phaAdvMax;
2192:Src/BLDC_controller.c ****       }
2193:Src/BLDC_controller.c **** 
2194:Src/BLDC_controller.c ****       /* End of Switch: '<S42>/Switch2' */
2195:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 115


2196:Src/BLDC_controller.c ****       /* Product: '<S42>/Divide3' */
2197:Src/BLDC_controller.c ****       rtDW->Divide3 = (int16_T)((rtb_Saturation1 * rtb_Divide14_e) >> 15);
2198:Src/BLDC_controller.c **** 
2199:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S6>/Field_Weakening_Enabled' */
2200:Src/BLDC_controller.c ****     }
2201:Src/BLDC_controller.c **** 
2202:Src/BLDC_controller.c ****     /* End of If: '<S6>/If3' */
2203:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S1>/F04_Field_Weakening' */
2204:Src/BLDC_controller.c **** 
2205:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S7>/Motor_Limitations' */
2206:Src/BLDC_controller.c ****     /* If: '<S48>/If1' incorporates:
2207:Src/BLDC_controller.c ****      *  Constant: '<S1>/z_ctrlTypSel'
2208:Src/BLDC_controller.c ****      *  Constant: '<S80>/Vd_max1'
2209:Src/BLDC_controller.c ****      *  Constant: '<S80>/i_max'
2210:Src/BLDC_controller.c ****      */
2211:Src/BLDC_controller.c ****     rtb_Sum2_h = rtDW->If1_ActiveSubsystem_o;
2212:Src/BLDC_controller.c ****     UnitDelay3 = -1;
2213:Src/BLDC_controller.c ****     if (rtP->z_ctrlTypSel == 2) {
2214:Src/BLDC_controller.c ****       UnitDelay3 = 0;
2215:Src/BLDC_controller.c ****     }
2216:Src/BLDC_controller.c **** 
2217:Src/BLDC_controller.c ****     rtDW->If1_ActiveSubsystem_o = UnitDelay3;
2218:Src/BLDC_controller.c ****     if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
2219:Src/BLDC_controller.c ****       /* Disable for SwitchCase: '<S80>/Switch Case' */
2220:Src/BLDC_controller.c ****       rtDW->SwitchCase_ActiveSubsystem_d = -1;
2221:Src/BLDC_controller.c ****     }
2222:Src/BLDC_controller.c **** 
2223:Src/BLDC_controller.c ****     if (UnitDelay3 == 0) {
2224:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S48>/Motor_Limitations_Enabled' incorporates:
2225:Src/BLDC_controller.c ****        *  ActionPort: '<S80>/Action Port'
2226:Src/BLDC_controller.c ****        */
2227:Src/BLDC_controller.c ****       rtDW->Vd_max1 = rtP->Vd_max;
2228:Src/BLDC_controller.c **** 
2229:Src/BLDC_controller.c ****       /* Gain: '<S80>/Gain3' incorporates:
2230:Src/BLDC_controller.c ****        *  Constant: '<S80>/Vd_max1'
2231:Src/BLDC_controller.c ****        */
2232:Src/BLDC_controller.c ****       rtDW->Gain3 = (int16_T)-rtDW->Vd_max1;
2233:Src/BLDC_controller.c **** 
2234:Src/BLDC_controller.c ****       /* Interpolation_n-D: '<S80>/Vq_max_M1' incorporates:
2235:Src/BLDC_controller.c ****        *  Abs: '<S80>/Abs5'
2236:Src/BLDC_controller.c ****        *  PreLookup: '<S80>/Vq_max_XA'
2237:Src/BLDC_controller.c ****        *  UnitDelay: '<S7>/UnitDelay4'
2238:Src/BLDC_controller.c ****        */
2239:Src/BLDC_controller.c ****       if (rtDW->Switch1 < 0) {
2240:Src/BLDC_controller.c ****         rtb_Saturation1 = (int16_T)-rtDW->Switch1;
2241:Src/BLDC_controller.c ****       } else {
2242:Src/BLDC_controller.c ****         rtb_Saturation1 = rtDW->Switch1;
2243:Src/BLDC_controller.c ****       }
2244:Src/BLDC_controller.c **** 
2245:Src/BLDC_controller.c ****       rtDW->Vq_max_M1 = rtP->Vq_max_M1[plook_u8s16_evencka(rtb_Saturation1,
2246:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
2247:Src/BLDC_controller.c ****         45U)];
2248:Src/BLDC_controller.c **** 
2249:Src/BLDC_controller.c ****       /* End of Interpolation_n-D: '<S80>/Vq_max_M1' */
2250:Src/BLDC_controller.c **** 
2251:Src/BLDC_controller.c ****       /* Gain: '<S80>/Gain5' */
2252:Src/BLDC_controller.c ****       rtDW->Gain5 = (int16_T)-rtDW->Vq_max_M1;
ARM GAS  /tmp/cccGHnrd.s 			page 116


2253:Src/BLDC_controller.c ****       rtDW->i_max = rtP->i_max;
2254:Src/BLDC_controller.c **** 
2255:Src/BLDC_controller.c ****       /* Interpolation_n-D: '<S80>/iq_maxSca_M1' incorporates:
2256:Src/BLDC_controller.c ****        *  Constant: '<S80>/i_max'
2257:Src/BLDC_controller.c ****        *  Product: '<S80>/Divide4'
2258:Src/BLDC_controller.c ****        */
2259:Src/BLDC_controller.c ****       rtb_Gain3 = rtDW->Divide3 << 16;
2260:Src/BLDC_controller.c ****       rtb_Gain3 = (rtb_Gain3 == MIN_int32_T) && (rtDW->i_max == -1) ?
2261:Src/BLDC_controller.c ****         MAX_int32_T : rtb_Gain3 / rtDW->i_max;
2262:Src/BLDC_controller.c ****       if (rtb_Gain3 < 0) {
2263:Src/BLDC_controller.c ****         rtb_Gain3 = 0;
2264:Src/BLDC_controller.c ****       } else {
2265:Src/BLDC_controller.c ****         if (rtb_Gain3 > 65535) {
2266:Src/BLDC_controller.c ****           rtb_Gain3 = 65535;
2267:Src/BLDC_controller.c ****         }
2268:Src/BLDC_controller.c ****       }
2269:Src/BLDC_controller.c **** 
2270:Src/BLDC_controller.c ****       /* Product: '<S80>/Divide1' incorporates:
2271:Src/BLDC_controller.c ****        *  Interpolation_n-D: '<S80>/iq_maxSca_M1'
2272:Src/BLDC_controller.c ****        *  PreLookup: '<S80>/iq_maxSca_XA'
2273:Src/BLDC_controller.c ****        *  Product: '<S80>/Divide4'
2274:Src/BLDC_controller.c ****        */
2275:Src/BLDC_controller.c ****       rtDW->Divide1_n = (int16_T)
2276:Src/BLDC_controller.c ****         ((rtConstP.iq_maxSca_M1_Table[plook_u8u16_evencka((uint16_T)rtb_Gain3,
2277:Src/BLDC_controller.c ****            0U, 1311U, 49U)] * rtDW->i_max) >> 16);
2278:Src/BLDC_controller.c **** 
2279:Src/BLDC_controller.c ****       /* Gain: '<S80>/Gain1' */
2280:Src/BLDC_controller.c ****       rtDW->Gain1 = (int16_T)-rtDW->Divide1_n;
2281:Src/BLDC_controller.c **** 
2282:Src/BLDC_controller.c ****       /* SwitchCase: '<S80>/Switch Case' incorporates:
2283:Src/BLDC_controller.c ****        *  Constant: '<S80>/n_max1'
2284:Src/BLDC_controller.c ****        *  Constant: '<S82>/Constant1'
2285:Src/BLDC_controller.c ****        *  Constant: '<S82>/cf_KbLimProt'
2286:Src/BLDC_controller.c ****        *  Constant: '<S82>/cf_nKiLimProt'
2287:Src/BLDC_controller.c ****        *  Constant: '<S83>/Constant'
2288:Src/BLDC_controller.c ****        *  Constant: '<S83>/Constant1'
2289:Src/BLDC_controller.c ****        *  Constant: '<S83>/cf_KbLimProt'
2290:Src/BLDC_controller.c ****        *  Constant: '<S83>/cf_iqKiLimProt'
2291:Src/BLDC_controller.c ****        *  Constant: '<S83>/cf_nKiLimProt'
2292:Src/BLDC_controller.c ****        *  Sum: '<S82>/Sum1'
2293:Src/BLDC_controller.c ****        *  Sum: '<S83>/Sum1'
2294:Src/BLDC_controller.c ****        *  Sum: '<S83>/Sum2'
2295:Src/BLDC_controller.c ****        */
2296:Src/BLDC_controller.c ****       rtb_Sum2_h = rtDW->SwitchCase_ActiveSubsystem_d;
2297:Src/BLDC_controller.c ****       UnitDelay3 = -1;
2298:Src/BLDC_controller.c ****       switch (rtDW->z_ctrlMod) {
2299:Src/BLDC_controller.c ****        case 1:
2300:Src/BLDC_controller.c ****         UnitDelay3 = 0;
2301:Src/BLDC_controller.c ****         break;
2302:Src/BLDC_controller.c **** 
2303:Src/BLDC_controller.c ****        case 2:
2304:Src/BLDC_controller.c ****         UnitDelay3 = 1;
2305:Src/BLDC_controller.c ****         break;
2306:Src/BLDC_controller.c **** 
2307:Src/BLDC_controller.c ****        case 3:
2308:Src/BLDC_controller.c ****         UnitDelay3 = 2;
2309:Src/BLDC_controller.c ****         break;
ARM GAS  /tmp/cccGHnrd.s 			page 117


2310:Src/BLDC_controller.c ****       }
2311:Src/BLDC_controller.c **** 
2312:Src/BLDC_controller.c ****       rtDW->SwitchCase_ActiveSubsystem_d = UnitDelay3;
2313:Src/BLDC_controller.c ****       switch (UnitDelay3) {
2314:Src/BLDC_controller.c ****        case 0:
2315:Src/BLDC_controller.c ****         if (UnitDelay3 != rtb_Sum2_h) {
2316:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Voltage_Mode_Protection' incorporates:
2317:Src/BLDC_controller.c ****            *  ActionPort: '<S83>/Action Port'
2318:Src/BLDC_controller.c ****            */
2319:Src/BLDC_controller.c **** 
2320:Src/BLDC_controller.c ****           /* SystemReset for Atomic SubSystem: '<S83>/I_backCalc_fixdt' */
2321:Src/BLDC_controller.c **** 
2322:Src/BLDC_controller.c ****           /* SystemReset for SwitchCase: '<S80>/Switch Case' */
2323:Src/BLDC_controller.c ****           I_backCalc_fixdt_Reset(&rtDW->I_backCalc_fixdt_i, 65536000);
2324:Src/BLDC_controller.c **** 
2325:Src/BLDC_controller.c ****           /* End of SystemReset for SubSystem: '<S83>/I_backCalc_fixdt' */
2326:Src/BLDC_controller.c **** 
2327:Src/BLDC_controller.c ****           /* SystemReset for Atomic SubSystem: '<S83>/I_backCalc_fixdt1' */
2328:Src/BLDC_controller.c ****           I_backCalc_fixdt_Reset(&rtDW->I_backCalc_fixdt1, 65536000);
2329:Src/BLDC_controller.c **** 
2330:Src/BLDC_controller.c ****           /* End of SystemReset for SubSystem: '<S83>/I_backCalc_fixdt1' */
2331:Src/BLDC_controller.c **** 
2332:Src/BLDC_controller.c ****           /* End of SystemReset for SubSystem: '<S80>/Voltage_Mode_Protection' */
2333:Src/BLDC_controller.c ****         }
2334:Src/BLDC_controller.c **** 
2335:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S80>/Voltage_Mode_Protection' incorporates:
2336:Src/BLDC_controller.c ****          *  ActionPort: '<S83>/Action Port'
2337:Src/BLDC_controller.c ****          */
2338:Src/BLDC_controller.c **** 
2339:Src/BLDC_controller.c ****         /* Outputs for Atomic SubSystem: '<S83>/I_backCalc_fixdt' */
2340:Src/BLDC_controller.c ****         I_backCalc_fixdt((int16_T)(rtDW->Divide1_n - rtDW->Abs5_h),
2341:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
2342:Src/BLDC_controller.c ****                          &rtDW->Switch2_a, &rtDW->I_backCalc_fixdt_i);
2343:Src/BLDC_controller.c **** 
2344:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S83>/I_backCalc_fixdt' */
2345:Src/BLDC_controller.c **** 
2346:Src/BLDC_controller.c ****         /* Outputs for Atomic SubSystem: '<S83>/I_backCalc_fixdt1' */
2347:Src/BLDC_controller.c ****         I_backCalc_fixdt((int16_T)(rtP->n_max - Abs5), rtP->cf_nKiLimProt,
2348:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Abs1, 0, &rtDW->Switch2_o,
2349:Src/BLDC_controller.c ****                          &rtDW->I_backCalc_fixdt1);
2350:Src/BLDC_controller.c **** 
2351:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S83>/I_backCalc_fixdt1' */
2352:Src/BLDC_controller.c **** 
2353:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S80>/Voltage_Mode_Protection' */
2354:Src/BLDC_controller.c ****         break;
2355:Src/BLDC_controller.c **** 
2356:Src/BLDC_controller.c ****        case 1:
2357:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S80>/Speed_Mode_Protection' incorporates:
2358:Src/BLDC_controller.c ****          *  ActionPort: '<S81>/Action Port'
2359:Src/BLDC_controller.c ****          */
2360:Src/BLDC_controller.c ****         /* Switch: '<S84>/Switch2' incorporates:
2361:Src/BLDC_controller.c ****          *  RelationalOperator: '<S84>/LowerRelop1'
2362:Src/BLDC_controller.c ****          *  RelationalOperator: '<S84>/UpperRelop'
2363:Src/BLDC_controller.c ****          *  Switch: '<S84>/Switch'
2364:Src/BLDC_controller.c ****          */
2365:Src/BLDC_controller.c ****         if (rtDW->DataTypeConversion[0] > rtDW->Divide1_n) {
2366:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->Divide1_n;
ARM GAS  /tmp/cccGHnrd.s 			page 118


2367:Src/BLDC_controller.c ****         } else if (rtDW->DataTypeConversion[0] < rtDW->Gain1) {
2368:Src/BLDC_controller.c ****           /* Switch: '<S84>/Switch' */
2369:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->Gain1;
2370:Src/BLDC_controller.c ****         } else {
2371:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->DataTypeConversion[0];
2372:Src/BLDC_controller.c ****         }
2373:Src/BLDC_controller.c **** 
2374:Src/BLDC_controller.c ****         /* End of Switch: '<S84>/Switch2' */
2375:Src/BLDC_controller.c **** 
2376:Src/BLDC_controller.c ****         /* Product: '<S81>/Divide1' incorporates:
2377:Src/BLDC_controller.c ****          *  Constant: '<S81>/cf_iqKiLimProt'
2378:Src/BLDC_controller.c ****          *  Sum: '<S81>/Sum3'
2379:Src/BLDC_controller.c ****          */
2380:Src/BLDC_controller.c ****         rtDW->Divide1 = (int16_T)(rtb_Saturation1 - rtDW->DataTypeConversion[0])
2381:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
2382:Src/BLDC_controller.c **** 
2383:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S80>/Speed_Mode_Protection' */
2384:Src/BLDC_controller.c ****         break;
2385:Src/BLDC_controller.c **** 
2386:Src/BLDC_controller.c ****        case 2:
2387:Src/BLDC_controller.c ****         if (UnitDelay3 != rtb_Sum2_h) {
2388:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Torque_Mode_Protection' incorporates:
2389:Src/BLDC_controller.c ****            *  ActionPort: '<S82>/Action Port'
2390:Src/BLDC_controller.c ****            */
2391:Src/BLDC_controller.c **** 
2392:Src/BLDC_controller.c ****           /* SystemReset for Atomic SubSystem: '<S82>/I_backCalc_fixdt' */
2393:Src/BLDC_controller.c **** 
2394:Src/BLDC_controller.c ****           /* SystemReset for SwitchCase: '<S80>/Switch Case' */
2395:Src/BLDC_controller.c ****           I_backCalc_fixdt_Reset(&rtDW->I_backCalc_fixdt_j, 58982400);
2396:Src/BLDC_controller.c **** 
2397:Src/BLDC_controller.c ****           /* End of SystemReset for SubSystem: '<S82>/I_backCalc_fixdt' */
2398:Src/BLDC_controller.c **** 
2399:Src/BLDC_controller.c ****           /* End of SystemReset for SubSystem: '<S80>/Torque_Mode_Protection' */
2400:Src/BLDC_controller.c ****         }
2401:Src/BLDC_controller.c **** 
2402:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S80>/Torque_Mode_Protection' incorporates:
2403:Src/BLDC_controller.c ****          *  ActionPort: '<S82>/Action Port'
2404:Src/BLDC_controller.c ****          */
2405:Src/BLDC_controller.c **** 
2406:Src/BLDC_controller.c ****         /* Outputs for Atomic SubSystem: '<S82>/I_backCalc_fixdt' */
2407:Src/BLDC_controller.c ****         I_backCalc_fixdt((int16_T)(rtP->n_max - Abs5), rtP->cf_nKiLimProt,
2408:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Vq_max_M1, 0, &rtDW->Switch2_i,
2409:Src/BLDC_controller.c ****                          &rtDW->I_backCalc_fixdt_j);
2410:Src/BLDC_controller.c **** 
2411:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S82>/I_backCalc_fixdt' */
2412:Src/BLDC_controller.c **** 
2413:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S80>/Torque_Mode_Protection' */
2414:Src/BLDC_controller.c ****         break;
2415:Src/BLDC_controller.c ****       }
2416:Src/BLDC_controller.c **** 
2417:Src/BLDC_controller.c ****       /* End of SwitchCase: '<S80>/Switch Case' */
2418:Src/BLDC_controller.c **** 
2419:Src/BLDC_controller.c ****       /* Gain: '<S80>/Gain4' */
2420:Src/BLDC_controller.c ****       rtDW->Gain4 = (int16_T)-rtDW->i_max;
2421:Src/BLDC_controller.c **** 
2422:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S48>/Motor_Limitations_Enabled' */
2423:Src/BLDC_controller.c ****     }
ARM GAS  /tmp/cccGHnrd.s 			page 119


2424:Src/BLDC_controller.c **** 
2425:Src/BLDC_controller.c ****     /* End of If: '<S48>/If1' */
2426:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S7>/Motor_Limitations' */
2427:Src/BLDC_controller.c ****   } else {
2428:Src/BLDC_controller.c ****     if (rtDW->UnitDelay6_DSTATE) {
2429:Src/BLDC_controller.c ****       /* Outputs for Function Call SubSystem: '<S7>/FOC' */
2430:Src/BLDC_controller.c ****       /* If: '<S47>/If1' incorporates:
2431:Src/BLDC_controller.c ****        *  Constant: '<S1>/z_ctrlTypSel'
2432:Src/BLDC_controller.c ****        */
2433:Src/BLDC_controller.c ****       rtb_Sum2_h = rtDW->If1_ActiveSubsystem_j;
2434:Src/BLDC_controller.c ****       UnitDelay3 = -1;
2435:Src/BLDC_controller.c ****       if (rtP->z_ctrlTypSel == 2) {
2436:Src/BLDC_controller.c ****         UnitDelay3 = 0;
2437:Src/BLDC_controller.c ****       }
2438:Src/BLDC_controller.c **** 
2439:Src/BLDC_controller.c ****       rtDW->If1_ActiveSubsystem_j = UnitDelay3;
2440:Src/BLDC_controller.c ****       if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
2441:Src/BLDC_controller.c ****         /* Disable for SwitchCase: '<S59>/Switch Case' */
2442:Src/BLDC_controller.c ****         rtDW->SwitchCase_ActiveSubsystem = -1;
2443:Src/BLDC_controller.c **** 
2444:Src/BLDC_controller.c ****         /* Disable for If: '<S59>/If1' */
2445:Src/BLDC_controller.c ****         rtDW->If1_ActiveSubsystem_a = -1;
2446:Src/BLDC_controller.c ****       }
2447:Src/BLDC_controller.c **** 
2448:Src/BLDC_controller.c ****       if (UnitDelay3 == 0) {
2449:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S47>/FOC_Enabled' incorporates:
2450:Src/BLDC_controller.c ****          *  ActionPort: '<S59>/Action Port'
2451:Src/BLDC_controller.c ****          */
2452:Src/BLDC_controller.c ****         /* SwitchCase: '<S59>/Switch Case' incorporates:
2453:Src/BLDC_controller.c ****          *  Constant: '<S61>/cf_nKi'
2454:Src/BLDC_controller.c ****          *  Constant: '<S61>/cf_nKp'
2455:Src/BLDC_controller.c ****          *  Inport: '<S60>/r_inpTgtSca'
2456:Src/BLDC_controller.c ****          *  Sum: '<S61>/Sum3'
2457:Src/BLDC_controller.c ****          *  UnitDelay: '<S8>/UnitDelay4'
2458:Src/BLDC_controller.c ****          */
2459:Src/BLDC_controller.c ****         rtb_Sum2_h = rtDW->SwitchCase_ActiveSubsystem;
2460:Src/BLDC_controller.c ****         switch (rtDW->z_ctrlMod) {
2461:Src/BLDC_controller.c ****          case 1:
2462:Src/BLDC_controller.c ****           break;
2463:Src/BLDC_controller.c **** 
2464:Src/BLDC_controller.c ****          case 2:
2465:Src/BLDC_controller.c ****           UnitDelay3 = 1;
2466:Src/BLDC_controller.c ****           break;
2467:Src/BLDC_controller.c **** 
2468:Src/BLDC_controller.c ****          case 3:
2469:Src/BLDC_controller.c ****           UnitDelay3 = 2;
2470:Src/BLDC_controller.c ****           break;
2471:Src/BLDC_controller.c **** 
2472:Src/BLDC_controller.c ****          default:
2473:Src/BLDC_controller.c ****           UnitDelay3 = 3;
2474:Src/BLDC_controller.c ****           break;
2475:Src/BLDC_controller.c ****         }
2476:Src/BLDC_controller.c **** 
2477:Src/BLDC_controller.c ****         rtDW->SwitchCase_ActiveSubsystem = UnitDelay3;
2478:Src/BLDC_controller.c ****         switch (UnitDelay3) {
2479:Src/BLDC_controller.c ****          case 0:
2480:Src/BLDC_controller.c ****           /* Outputs for IfAction SubSystem: '<S59>/Voltage_Mode' incorporates:
ARM GAS  /tmp/cccGHnrd.s 			page 120


2481:Src/BLDC_controller.c ****            *  ActionPort: '<S64>/Action Port'
2482:Src/BLDC_controller.c ****            */
2483:Src/BLDC_controller.c ****           /* MinMax: '<S64>/MinMax' */
2484:Src/BLDC_controller.c ****           if (rtDW->Abs1 < rtDW->Switch2_a) {
2485:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Abs1;
2486:Src/BLDC_controller.c ****           } else {
2487:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Switch2_a;
2488:Src/BLDC_controller.c ****           }
2489:Src/BLDC_controller.c **** 
2490:Src/BLDC_controller.c ****           if (!(DataTypeConversion2 < rtDW->Switch2_o)) {
2491:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Switch2_o;
2492:Src/BLDC_controller.c ****           }
2493:Src/BLDC_controller.c **** 
2494:Src/BLDC_controller.c ****           /* End of MinMax: '<S64>/MinMax' */
2495:Src/BLDC_controller.c **** 
2496:Src/BLDC_controller.c ****           /* Signum: '<S64>/SignDeltaU2' */
2497:Src/BLDC_controller.c ****           if (rtDW->Merge1 < 0) {
2498:Src/BLDC_controller.c ****             rtb_Saturation1 = -1;
2499:Src/BLDC_controller.c ****           } else {
2500:Src/BLDC_controller.c ****             rtb_Saturation1 = (int16_T)(rtDW->Merge1 > 0);
2501:Src/BLDC_controller.c ****           }
2502:Src/BLDC_controller.c **** 
2503:Src/BLDC_controller.c ****           /* End of Signum: '<S64>/SignDeltaU2' */
2504:Src/BLDC_controller.c **** 
2505:Src/BLDC_controller.c ****           /* Product: '<S64>/Divide1' */
2506:Src/BLDC_controller.c ****           rtb_Saturation = (int16_T)(DataTypeConversion2 * rtb_Saturation1);
2507:Src/BLDC_controller.c **** 
2508:Src/BLDC_controller.c ****           /* Switch: '<S79>/Switch2' incorporates:
2509:Src/BLDC_controller.c ****            *  RelationalOperator: '<S79>/LowerRelop1'
2510:Src/BLDC_controller.c ****            *  RelationalOperator: '<S79>/UpperRelop'
2511:Src/BLDC_controller.c ****            *  Switch: '<S79>/Switch'
2512:Src/BLDC_controller.c ****            */
2513:Src/BLDC_controller.c ****           if (rtb_Saturation > rtDW->Vq_max_M1) {
2514:Src/BLDC_controller.c ****             /* SignalConversion: '<S64>/Signal Conversion2' */
2515:Src/BLDC_controller.c ****             rtDW->Merge = rtDW->Vq_max_M1;
2516:Src/BLDC_controller.c ****           } else if (rtb_Saturation < rtDW->Gain5) {
2517:Src/BLDC_controller.c ****             /* Switch: '<S79>/Switch' incorporates:
2518:Src/BLDC_controller.c ****              *  SignalConversion: '<S64>/Signal Conversion2'
2519:Src/BLDC_controller.c ****              */
2520:Src/BLDC_controller.c ****             rtDW->Merge = rtDW->Gain5;
2521:Src/BLDC_controller.c ****           } else {
2522:Src/BLDC_controller.c ****             /* SignalConversion: '<S64>/Signal Conversion2' incorporates:
2523:Src/BLDC_controller.c ****              *  Switch: '<S79>/Switch'
2524:Src/BLDC_controller.c ****              */
2525:Src/BLDC_controller.c ****             rtDW->Merge = rtb_Saturation;
2526:Src/BLDC_controller.c ****           }
2527:Src/BLDC_controller.c **** 
2528:Src/BLDC_controller.c ****           /* End of Switch: '<S79>/Switch2' */
2529:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S59>/Voltage_Mode' */
2530:Src/BLDC_controller.c ****           break;
2531:Src/BLDC_controller.c **** 
2532:Src/BLDC_controller.c ****          case 1:
2533:Src/BLDC_controller.c ****           if (UnitDelay3 != rtb_Sum2_h) {
2534:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Speed_Mode' incorporates:
2535:Src/BLDC_controller.c ****              *  ActionPort: '<S61>/Action Port'
2536:Src/BLDC_controller.c ****              */
2537:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 121


2538:Src/BLDC_controller.c ****             /* SystemReset for Atomic SubSystem: '<S61>/PI_clamp_fixdt' */
2539:Src/BLDC_controller.c **** 
2540:Src/BLDC_controller.c ****             /* SystemReset for SwitchCase: '<S59>/Switch Case' */
2541:Src/BLDC_controller.c ****             PI_clamp_fixdt_b_Reset(&rtDW->PI_clamp_fixdt_l4);
2542:Src/BLDC_controller.c **** 
2543:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S61>/PI_clamp_fixdt' */
2544:Src/BLDC_controller.c **** 
2545:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S59>/Speed_Mode' */
2546:Src/BLDC_controller.c ****           }
2547:Src/BLDC_controller.c **** 
2548:Src/BLDC_controller.c ****           /* Outputs for IfAction SubSystem: '<S59>/Speed_Mode' incorporates:
2549:Src/BLDC_controller.c ****            *  ActionPort: '<S61>/Action Port'
2550:Src/BLDC_controller.c ****            */
2551:Src/BLDC_controller.c ****           /* DataTypeConversion: '<S61>/Data Type Conversion2' incorporates:
2552:Src/BLDC_controller.c ****            *  Constant: '<S61>/n_cruiseMotTgt'
2553:Src/BLDC_controller.c ****            */
2554:Src/BLDC_controller.c ****           rtb_Saturation = (int16_T)(rtP->n_cruiseMotTgt << 4);
2555:Src/BLDC_controller.c **** 
2556:Src/BLDC_controller.c ****           /* Switch: '<S61>/Switch4' incorporates:
2557:Src/BLDC_controller.c ****            *  Constant: '<S1>/b_cruiseCtrlEna'
2558:Src/BLDC_controller.c ****            *  Logic: '<S61>/Logical Operator1'
2559:Src/BLDC_controller.c ****            *  RelationalOperator: '<S61>/Relational Operator3'
2560:Src/BLDC_controller.c ****            */
2561:Src/BLDC_controller.c ****           if (rtP->b_cruiseCtrlEna && (rtb_Saturation != 0)) {
2562:Src/BLDC_controller.c ****             /* Switch: '<S61>/Switch3' incorporates:
2563:Src/BLDC_controller.c ****              *  MinMax: '<S61>/MinMax4'
2564:Src/BLDC_controller.c ****              */
2565:Src/BLDC_controller.c ****             if (rtb_Saturation > 0) {
2566:Src/BLDC_controller.c ****               rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Vq_max_M1;
2567:Src/BLDC_controller.c **** 
2568:Src/BLDC_controller.c ****               /* MinMax: '<S61>/MinMax3' */
2569:Src/BLDC_controller.c ****               if (rtDW->Merge1 > rtDW->Gain5) {
2570:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Merge1;
2571:Src/BLDC_controller.c ****               } else {
2572:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
2573:Src/BLDC_controller.c ****               }
2574:Src/BLDC_controller.c **** 
2575:Src/BLDC_controller.c ****               /* End of MinMax: '<S61>/MinMax3' */
2576:Src/BLDC_controller.c ****             } else {
2577:Src/BLDC_controller.c ****               if (rtDW->Vq_max_M1 < rtDW->Merge1) {
2578:Src/BLDC_controller.c ****                 /* MinMax: '<S61>/MinMax4' */
2579:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Vq_max_M1;
2580:Src/BLDC_controller.c ****               } else {
2581:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Merge1;
2582:Src/BLDC_controller.c ****               }
2583:Src/BLDC_controller.c **** 
2584:Src/BLDC_controller.c ****               rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
2585:Src/BLDC_controller.c ****             }
2586:Src/BLDC_controller.c **** 
2587:Src/BLDC_controller.c ****             /* End of Switch: '<S61>/Switch3' */
2588:Src/BLDC_controller.c ****           } else {
2589:Src/BLDC_controller.c ****             rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Vq_max_M1;
2590:Src/BLDC_controller.c ****             rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
2591:Src/BLDC_controller.c ****           }
2592:Src/BLDC_controller.c **** 
2593:Src/BLDC_controller.c ****           /* End of Switch: '<S61>/Switch4' */
2594:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 122


2595:Src/BLDC_controller.c ****           /* Switch: '<S61>/Switch2' incorporates:
2596:Src/BLDC_controller.c ****            *  Constant: '<S1>/b_cruiseCtrlEna'
2597:Src/BLDC_controller.c ****            */
2598:Src/BLDC_controller.c ****           if (!rtP->b_cruiseCtrlEna) {
2599:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Merge1;
2600:Src/BLDC_controller.c ****           }
2601:Src/BLDC_controller.c **** 
2602:Src/BLDC_controller.c ****           /* End of Switch: '<S61>/Switch2' */
2603:Src/BLDC_controller.c **** 
2604:Src/BLDC_controller.c ****           /* Sum: '<S61>/Sum3' */
2605:Src/BLDC_controller.c ****           rtb_Gain3 = rtb_Saturation - Switch2;
2606:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
2607:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
2608:Src/BLDC_controller.c ****           } else {
2609:Src/BLDC_controller.c ****             if (rtb_Gain3 < -32768) {
2610:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
2611:Src/BLDC_controller.c ****             }
2612:Src/BLDC_controller.c ****           }
2613:Src/BLDC_controller.c **** 
2614:Src/BLDC_controller.c ****           /* Outputs for Atomic SubSystem: '<S61>/PI_clamp_fixdt' */
2615:Src/BLDC_controller.c ****           PI_clamp_fixdt_l((int16_T)rtb_Gain3, rtP->cf_nKp, rtP->cf_nKi,
2616:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu,
2617:Src/BLDC_controller.c ****                            rtb_TmpSignalConversionAtLow_Pa[0],
2618:Src/BLDC_controller.c ****                            rtb_TmpSignalConversionAtLow_Pa[1], rtDW->Divide1,
2619:Src/BLDC_controller.c ****                            &rtDW->Merge, &rtDW->PI_clamp_fixdt_l4);
2620:Src/BLDC_controller.c **** 
2621:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S61>/PI_clamp_fixdt' */
2622:Src/BLDC_controller.c **** 
2623:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S59>/Speed_Mode' */
2624:Src/BLDC_controller.c ****           break;
2625:Src/BLDC_controller.c **** 
2626:Src/BLDC_controller.c ****          case 2:
2627:Src/BLDC_controller.c ****           if (UnitDelay3 != rtb_Sum2_h) {
2628:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Torque_Mode' incorporates:
2629:Src/BLDC_controller.c ****              *  ActionPort: '<S62>/Action Port'
2630:Src/BLDC_controller.c ****              */
2631:Src/BLDC_controller.c **** 
2632:Src/BLDC_controller.c ****             /* SystemReset for Atomic SubSystem: '<S62>/PI_clamp_fixdt' */
2633:Src/BLDC_controller.c **** 
2634:Src/BLDC_controller.c ****             /* SystemReset for SwitchCase: '<S59>/Switch Case' */
2635:Src/BLDC_controller.c ****             PI_clamp_fixdt_g_Reset(&rtDW->PI_clamp_fixdt_kh);
2636:Src/BLDC_controller.c **** 
2637:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S62>/PI_clamp_fixdt' */
2638:Src/BLDC_controller.c **** 
2639:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S59>/Torque_Mode' */
2640:Src/BLDC_controller.c ****           }
2641:Src/BLDC_controller.c **** 
2642:Src/BLDC_controller.c ****           /* Outputs for IfAction SubSystem: '<S59>/Torque_Mode' incorporates:
2643:Src/BLDC_controller.c ****            *  ActionPort: '<S62>/Action Port'
2644:Src/BLDC_controller.c ****            */
2645:Src/BLDC_controller.c ****           /* Gain: '<S62>/Gain4' */
2646:Src/BLDC_controller.c ****           rtb_Saturation = (int16_T)-rtDW->Switch2_i;
2647:Src/BLDC_controller.c **** 
2648:Src/BLDC_controller.c ****           /* Switch: '<S70>/Switch2' incorporates:
2649:Src/BLDC_controller.c ****            *  RelationalOperator: '<S70>/LowerRelop1'
2650:Src/BLDC_controller.c ****            *  RelationalOperator: '<S70>/UpperRelop'
2651:Src/BLDC_controller.c ****            *  Switch: '<S70>/Switch'
ARM GAS  /tmp/cccGHnrd.s 			page 123


2652:Src/BLDC_controller.c ****            */
2653:Src/BLDC_controller.c ****           if (rtDW->Merge1 > rtDW->Divide1_n) {
2654:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Divide1_n;
2655:Src/BLDC_controller.c ****           } else if (rtDW->Merge1 < rtDW->Gain1) {
2656:Src/BLDC_controller.c ****             /* Switch: '<S70>/Switch' */
2657:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Gain1;
2658:Src/BLDC_controller.c ****           } else {
2659:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Merge1;
2660:Src/BLDC_controller.c ****           }
2661:Src/BLDC_controller.c **** 
2662:Src/BLDC_controller.c ****           /* End of Switch: '<S70>/Switch2' */
2663:Src/BLDC_controller.c **** 
2664:Src/BLDC_controller.c ****           /* Sum: '<S62>/Sum2' */
2665:Src/BLDC_controller.c ****           rtb_Gain3 = rtb_Saturation1 - rtDW->DataTypeConversion[0];
2666:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
2667:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
2668:Src/BLDC_controller.c ****           } else {
2669:Src/BLDC_controller.c ****             if (rtb_Gain3 < -32768) {
2670:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
2671:Src/BLDC_controller.c ****             }
2672:Src/BLDC_controller.c ****           }
2673:Src/BLDC_controller.c **** 
2674:Src/BLDC_controller.c ****           /* MinMax: '<S62>/MinMax1' */
2675:Src/BLDC_controller.c ****           if (rtDW->Vq_max_M1 < rtDW->Switch2_i) {
2676:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Vq_max_M1;
2677:Src/BLDC_controller.c ****           } else {
2678:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Switch2_i;
2679:Src/BLDC_controller.c ****           }
2680:Src/BLDC_controller.c **** 
2681:Src/BLDC_controller.c ****           /* End of MinMax: '<S62>/MinMax1' */
2682:Src/BLDC_controller.c **** 
2683:Src/BLDC_controller.c ****           /* MinMax: '<S62>/MinMax2' */
2684:Src/BLDC_controller.c ****           if (!(rtb_Saturation > rtDW->Gain5)) {
2685:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Gain5;
2686:Src/BLDC_controller.c ****           }
2687:Src/BLDC_controller.c **** 
2688:Src/BLDC_controller.c ****           /* End of MinMax: '<S62>/MinMax2' */
2689:Src/BLDC_controller.c **** 
2690:Src/BLDC_controller.c ****           /* Outputs for Atomic SubSystem: '<S62>/PI_clamp_fixdt' */
2691:Src/BLDC_controller.c **** 
2692:Src/BLDC_controller.c ****           /* SignalConversion: '<S62>/Signal Conversion2' incorporates:
2693:Src/BLDC_controller.c ****            *  Constant: '<S62>/cf_iqKi'
2694:Src/BLDC_controller.c ****            *  Constant: '<S62>/cf_iqKp'
2695:Src/BLDC_controller.c ****            *  Constant: '<S62>/constant2'
2696:Src/BLDC_controller.c ****            *  Sum: '<S62>/Sum2'
2697:Src/BLDC_controller.c ****            *  UnitDelay: '<S8>/UnitDelay4'
2698:Src/BLDC_controller.c ****            */
2699:Src/BLDC_controller.c ****           PI_clamp_fixdt_k((int16_T)rtb_Gain3, rtP->cf_iqKp, rtP->cf_iqKi,
2700:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu, rtb_Saturation1,
2701:Src/BLDC_controller.c ****                            rtb_Saturation, 0, &rtDW->Merge,
2702:Src/BLDC_controller.c ****                            &rtDW->PI_clamp_fixdt_kh);
2703:Src/BLDC_controller.c **** 
2704:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S62>/PI_clamp_fixdt' */
2705:Src/BLDC_controller.c **** 
2706:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S59>/Torque_Mode' */
2707:Src/BLDC_controller.c ****           break;
2708:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 124


2709:Src/BLDC_controller.c ****          case 3:
2710:Src/BLDC_controller.c ****           /* Outputs for IfAction SubSystem: '<S59>/Open_Mode' incorporates:
2711:Src/BLDC_controller.c ****            *  ActionPort: '<S60>/Action Port'
2712:Src/BLDC_controller.c ****            */
2713:Src/BLDC_controller.c ****           rtDW->Merge = rtDW->Merge1;
2714:Src/BLDC_controller.c **** 
2715:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S59>/Open_Mode' */
2716:Src/BLDC_controller.c ****           break;
2717:Src/BLDC_controller.c ****         }
2718:Src/BLDC_controller.c **** 
2719:Src/BLDC_controller.c ****         /* End of SwitchCase: '<S59>/Switch Case' */
2720:Src/BLDC_controller.c **** 
2721:Src/BLDC_controller.c ****         /* If: '<S59>/If1' incorporates:
2722:Src/BLDC_controller.c ****          *  Constant: '<S63>/cf_idKi1'
2723:Src/BLDC_controller.c ****          *  Constant: '<S63>/cf_idKp1'
2724:Src/BLDC_controller.c ****          *  Constant: '<S63>/constant1'
2725:Src/BLDC_controller.c ****          *  Constant: '<S63>/constant2'
2726:Src/BLDC_controller.c ****          *  Sum: '<S63>/Sum3'
2727:Src/BLDC_controller.c ****          */
2728:Src/BLDC_controller.c ****         rtb_Sum2_h = rtDW->If1_ActiveSubsystem_a;
2729:Src/BLDC_controller.c ****         UnitDelay3 = -1;
2730:Src/BLDC_controller.c ****         if (rtb_LogicalOperator) {
2731:Src/BLDC_controller.c ****           UnitDelay3 = 0;
2732:Src/BLDC_controller.c ****         }
2733:Src/BLDC_controller.c **** 
2734:Src/BLDC_controller.c ****         rtDW->If1_ActiveSubsystem_a = UnitDelay3;
2735:Src/BLDC_controller.c ****         if (UnitDelay3 == 0) {
2736:Src/BLDC_controller.c ****           if (0 != rtb_Sum2_h) {
2737:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Vd_Calculation' incorporates:
2738:Src/BLDC_controller.c ****              *  ActionPort: '<S63>/Action Port'
2739:Src/BLDC_controller.c ****              */
2740:Src/BLDC_controller.c **** 
2741:Src/BLDC_controller.c ****             /* SystemReset for Atomic SubSystem: '<S63>/PI_clamp_fixdt' */
2742:Src/BLDC_controller.c **** 
2743:Src/BLDC_controller.c ****             /* SystemReset for If: '<S59>/If1' */
2744:Src/BLDC_controller.c ****             PI_clamp_fixdt_Reset(&rtDW->PI_clamp_fixdt_i);
2745:Src/BLDC_controller.c **** 
2746:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S63>/PI_clamp_fixdt' */
2747:Src/BLDC_controller.c **** 
2748:Src/BLDC_controller.c ****             /* End of SystemReset for SubSystem: '<S59>/Vd_Calculation' */
2749:Src/BLDC_controller.c ****           }
2750:Src/BLDC_controller.c **** 
2751:Src/BLDC_controller.c ****           /* Outputs for IfAction SubSystem: '<S59>/Vd_Calculation' incorporates:
2752:Src/BLDC_controller.c ****            *  ActionPort: '<S63>/Action Port'
2753:Src/BLDC_controller.c ****            */
2754:Src/BLDC_controller.c ****           /* Gain: '<S63>/toNegative' */
2755:Src/BLDC_controller.c ****           rtb_Saturation = (int16_T)-rtDW->Divide3;
2756:Src/BLDC_controller.c **** 
2757:Src/BLDC_controller.c ****           /* Switch: '<S75>/Switch2' incorporates:
2758:Src/BLDC_controller.c ****            *  RelationalOperator: '<S75>/LowerRelop1'
2759:Src/BLDC_controller.c ****            *  RelationalOperator: '<S75>/UpperRelop'
2760:Src/BLDC_controller.c ****            *  Switch: '<S75>/Switch'
2761:Src/BLDC_controller.c ****            */
2762:Src/BLDC_controller.c ****           if (rtb_Saturation > rtDW->i_max) {
2763:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->i_max;
2764:Src/BLDC_controller.c ****           } else {
2765:Src/BLDC_controller.c ****             if (rtb_Saturation < rtDW->Gain4) {
ARM GAS  /tmp/cccGHnrd.s 			page 125


2766:Src/BLDC_controller.c ****               /* Switch: '<S75>/Switch' */
2767:Src/BLDC_controller.c ****               rtb_Saturation = rtDW->Gain4;
2768:Src/BLDC_controller.c ****             }
2769:Src/BLDC_controller.c ****           }
2770:Src/BLDC_controller.c **** 
2771:Src/BLDC_controller.c ****           /* End of Switch: '<S75>/Switch2' */
2772:Src/BLDC_controller.c **** 
2773:Src/BLDC_controller.c ****           /* Sum: '<S63>/Sum3' */
2774:Src/BLDC_controller.c ****           rtb_Gain3 = rtb_Saturation - rtDW->DataTypeConversion[1];
2775:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
2776:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
2777:Src/BLDC_controller.c ****           } else {
2778:Src/BLDC_controller.c ****             if (rtb_Gain3 < -32768) {
2779:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
2780:Src/BLDC_controller.c ****             }
2781:Src/BLDC_controller.c ****           }
2782:Src/BLDC_controller.c **** 
2783:Src/BLDC_controller.c ****           /* Outputs for Atomic SubSystem: '<S63>/PI_clamp_fixdt' */
2784:Src/BLDC_controller.c ****           PI_clamp_fixdt((int16_T)rtb_Gain3, rtP->cf_idKp, rtP->cf_idKi, 0,
2785:Src/BLDC_controller.c ****                          rtDW->Vd_max1, rtDW->Gain3, 0, &rtDW->Switch1,
2786:Src/BLDC_controller.c ****                          &rtDW->PI_clamp_fixdt_i);
2787:Src/BLDC_controller.c **** 
2788:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S63>/PI_clamp_fixdt' */
2789:Src/BLDC_controller.c **** 
2790:Src/BLDC_controller.c ****           /* End of Outputs for SubSystem: '<S59>/Vd_Calculation' */
2791:Src/BLDC_controller.c ****         }
2792:Src/BLDC_controller.c **** 
2793:Src/BLDC_controller.c ****         /* End of If: '<S59>/If1' */
2794:Src/BLDC_controller.c ****         /* End of Outputs for SubSystem: '<S47>/FOC_Enabled' */
2795:Src/BLDC_controller.c ****       }
2796:Src/BLDC_controller.c **** 
2797:Src/BLDC_controller.c ****       /* End of If: '<S47>/If1' */
2798:Src/BLDC_controller.c ****       /* End of Outputs for SubSystem: '<S7>/FOC' */
2799:Src/BLDC_controller.c ****     }
2800:Src/BLDC_controller.c ****   }
2801:Src/BLDC_controller.c **** 
2802:Src/BLDC_controller.c ****   /* End of Chart: '<S1>/Task_Scheduler' */
2803:Src/BLDC_controller.c **** 
2804:Src/BLDC_controller.c ****   /* If: '<S7>/If2' incorporates:
2805:Src/BLDC_controller.c ****    *  Constant: '<S1>/z_ctrlTypSel'
2806:Src/BLDC_controller.c ****    *  Constant: '<S8>/CTRL_COMM1'
2807:Src/BLDC_controller.c ****    *  RelationalOperator: '<S8>/Relational Operator6'
2808:Src/BLDC_controller.c ****    *  Switch: '<S8>/Switch2'
2809:Src/BLDC_controller.c ****    */
2810:Src/BLDC_controller.c ****   rtb_Sum2_h = rtDW->If2_ActiveSubsystem;
 3841              		.loc 1 2810 3 is_stmt 1 view .LVU1376
 3842              		.loc 1 2810 14 is_stmt 0 view .LVU1377
 3843 08f4 94F99120 		ldrsb	r2, [r4, #145]
 3844              	.LVL376:
2811:Src/BLDC_controller.c ****   UnitDelay3 = -1;
 3845              		.loc 1 2811 3 is_stmt 1 view .LVU1378
2812:Src/BLDC_controller.c ****   if (rtP->z_ctrlTypSel == 2) {
 3846              		.loc 1 2812 3 view .LVU1379
 3847              		.loc 1 2812 10 is_stmt 0 view .LVU1380
 3848 08f8 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
 3849              		.loc 1 2812 6 view .LVU1381
 3850 08fc 022B     		cmp	r3, #2
ARM GAS  /tmp/cccGHnrd.s 			page 126


 3851 08fe 00F00083 		beq	.L455
2813:Src/BLDC_controller.c ****     rtb_Saturation = rtDW->Merge;
2814:Src/BLDC_controller.c ****     UnitDelay3 = 0;
2815:Src/BLDC_controller.c ****   } else {
2816:Src/BLDC_controller.c ****     rtb_Saturation = rtDW->Merge1;
 3852              		.loc 1 2816 5 is_stmt 1 view .LVU1382
 3853              		.loc 1 2816 20 is_stmt 0 view .LVU1383
 3854 0902 B4F97480 		ldrsh	r8, [r4, #116]
 3855              	.LVL377:
2811:Src/BLDC_controller.c ****   if (rtP->z_ctrlTypSel == 2) {
 3856              		.loc 1 2811 14 view .LVU1384
 3857 0906 4FF0FF33 		mov	r3, #-1
 3858              	.LVL378:
 3859              	.L325:
2817:Src/BLDC_controller.c ****   }
2818:Src/BLDC_controller.c **** 
2819:Src/BLDC_controller.c ****   rtDW->If2_ActiveSubsystem = UnitDelay3;
 3860              		.loc 1 2819 3 is_stmt 1 view .LVU1385
 3861              		.loc 1 2819 29 is_stmt 0 view .LVU1386
 3862 090a 84F89130 		strb	r3, [r4, #145]
2820:Src/BLDC_controller.c ****   if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 3863              		.loc 1 2820 3 is_stmt 1 view .LVU1387
 3864              		.loc 1 2820 6 is_stmt 0 view .LVU1388
 3865 090e 9342     		cmp	r3, r2
 3866 0910 06D0     		beq	.L326
 3867              		.loc 1 2820 34 discriminator 1 view .LVU1389
 3868 0912 2AB9     		cbnz	r2, .L326
2821:Src/BLDC_controller.c ****     /* Disable for Outport: '<S46>/V_phaABC_FOC' */
2822:Src/BLDC_controller.c ****     rtDW->Gain4_e[0] = 0;
 3869              		.loc 1 2822 5 is_stmt 1 view .LVU1390
 3870              		.loc 1 2822 22 is_stmt 0 view .LVU1391
 3871 0914 A4F84C20 		strh	r2, [r4, #76]	@ movhi
2823:Src/BLDC_controller.c ****     rtDW->Gain4_e[1] = 0;
 3872              		.loc 1 2823 5 is_stmt 1 view .LVU1392
 3873              		.loc 1 2823 22 is_stmt 0 view .LVU1393
 3874 0918 A4F84E20 		strh	r2, [r4, #78]	@ movhi
2824:Src/BLDC_controller.c ****     rtDW->Gain4_e[2] = 0;
 3875              		.loc 1 2824 5 is_stmt 1 view .LVU1394
 3876              		.loc 1 2824 22 is_stmt 0 view .LVU1395
 3877 091c A4F85020 		strh	r2, [r4, #80]	@ movhi
 3878              	.L326:
2825:Src/BLDC_controller.c ****   }
2826:Src/BLDC_controller.c **** 
2827:Src/BLDC_controller.c ****   if (UnitDelay3 == 0) {
 3879              		.loc 1 2827 3 is_stmt 1 view .LVU1396
 3880              		.loc 1 2827 6 is_stmt 0 view .LVU1397
 3881 0920 002B     		cmp	r3, #0
 3882 0922 40F08B83 		bne	.L327
2828:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S7>/Clarke_Park_Transform_Inverse' incorporates:
2829:Src/BLDC_controller.c ****      *  ActionPort: '<S46>/Action Port'
2830:Src/BLDC_controller.c ****      */
2831:Src/BLDC_controller.c ****     /* Sum: '<S58>/Sum6' incorporates:
2832:Src/BLDC_controller.c ****      *  Product: '<S58>/Divide1'
2833:Src/BLDC_controller.c ****      *  Product: '<S58>/Divide4'
2834:Src/BLDC_controller.c ****      */
2835:Src/BLDC_controller.c ****     rtb_Gain3 = (int16_T)((rtDW->Switch1 * rtDW->r_cos_M1) >> 14) - (int16_T)
 3883              		.loc 1 2835 5 is_stmt 1 view .LVU1398
ARM GAS  /tmp/cccGHnrd.s 			page 127


 3884              		.loc 1 2835 32 is_stmt 0 view .LVU1399
 3885 0926 B4F95A20 		ldrsh	r2, [r4, #90]
 3886              	.LVL379:
 3887              		.loc 1 2835 48 view .LVU1400
 3888 092a B4F97E10 		ldrsh	r1, [r4, #126]
 3889              		.loc 1 2835 42 view .LVU1401
 3890 092e 01FB02F3 		mul	r3, r1, r2
 3891              	.LVL380:
 3892              		.loc 1 2835 17 view .LVU1402
 3893 0932 43F38F33 		sbfx	r3, r3, #14, #16
2836:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_sin_M1) >> 14);
 3894              		.loc 1 2836 13 view .LVU1403
 3895 0936 B4F95800 		ldrsh	r0, [r4, #88]
 3896              		.loc 1 2836 27 view .LVU1404
 3897 093a B4F97CE0 		ldrsh	lr, [r4, #124]
 3898              		.loc 1 2836 21 view .LVU1405
 3899 093e 0EFB00FC 		mul	ip, lr, r0
2835:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_sin_M1) >> 14);
 3900              		.loc 1 2835 69 view .LVU1406
 3901 0942 4CF38F3C 		sbfx	ip, ip, #14, #16
2835:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_sin_M1) >> 14);
 3902              		.loc 1 2835 15 view .LVU1407
 3903 0946 A3EB0C03 		sub	r3, r3, ip
 3904              	.LVL381:
2837:Src/BLDC_controller.c ****     if (rtb_Gain3 > 32767) {
 3905              		.loc 1 2837 5 is_stmt 1 view .LVU1408
 3906              		.loc 1 2837 8 is_stmt 0 view .LVU1409
 3907 094a B3F5004F 		cmp	r3, #32768
 3908 094e 80F2DC82 		bge	.L406
2838:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
2839:Src/BLDC_controller.c ****     } else {
2840:Src/BLDC_controller.c ****       if (rtb_Gain3 < -32768) {
 3909              		.loc 1 2840 7 is_stmt 1 view .LVU1410
 3910              		.loc 1 2840 10 is_stmt 0 view .LVU1411
 3911 0952 13F5004F 		cmn	r3, #32768
 3912 0956 80F2DA82 		bge	.L328
2841:Src/BLDC_controller.c ****         rtb_Gain3 = -32768;
 3913              		.loc 1 2841 19 view .LVU1412
 3914 095a 1B4B     		ldr	r3, .L473+8
 3915              	.LVL382:
 3916              		.loc 1 2841 19 view .LVU1413
 3917 095c D7E2     		b	.L328
 3918              	.LVL383:
 3919              	.L250:
1986:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3920              		.loc 1 1986 75 discriminator 2 view .LVU1414
 3921 095e 21F07841 		bic	r1, r1, #-134217728
 3922              	.LVL384:
1986:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3923              		.loc 1 1986 75 discriminator 2 view .LVU1415
 3924 0962 99E7     		b	.L251
 3925              	.LVL385:
 3926              	.L389:
2005:Src/BLDC_controller.c ****       } else {
 3927              		.loc 1 2005 21 view .LVU1416
 3928 0964 0B46     		mov	r3, r1
 3929 0966 A1E7     		b	.L252
ARM GAS  /tmp/cccGHnrd.s 			page 128


 3930              	.LVL386:
 3931              	.L253:
2014:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3932              		.loc 1 2014 72 discriminator 2 view .LVU1417
 3933 0968 22F0784C 		bic	ip, r2, #-134217728
 3934 096c A4E7     		b	.L254
 3935              	.LVL387:
 3936              	.L256:
2026:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
 3937              		.loc 1 2026 75 discriminator 2 view .LVU1418
 3938 096e 22F07842 		bic	r2, r2, #-134217728
 3939              	.LVL388:
2026:Src/BLDC_controller.c ****           rtb_Gain3 & 134217727;
 3940              		.loc 1 2026 75 discriminator 2 view .LVU1419
 3941 0972 AAE7     		b	.L257
 3942              	.LVL389:
 3943              	.L258:
2043:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3944              		.loc 1 2043 75 discriminator 2 view .LVU1420
 3945 0974 23F07843 		bic	r3, r3, #-134217728
 3946              	.LVL390:
2043:Src/BLDC_controller.c ****         rtb_Gain3 & 134217727;
 3947              		.loc 1 2043 75 discriminator 2 view .LVU1421
 3948 0978 B0E7     		b	.L259
 3949              	.LVL391:
 3950              	.L260:
2052:Src/BLDC_controller.c ****       }
 3951              		.loc 1 2052 9 is_stmt 1 view .LVU1422
2052:Src/BLDC_controller.c ****       }
 3952              		.loc 1 2052 32 is_stmt 0 view .LVU1423
 3953 097a A364     		str	r3, [r4, #72]
 3954 097c B1E7     		b	.L261
 3955              	.LVL392:
 3956              	.L454:
2078:Src/BLDC_controller.c ****     } else {
 3957              		.loc 1 2078 7 is_stmt 1 view .LVU1424
2078:Src/BLDC_controller.c ****     } else {
 3958              		.loc 1 2078 34 is_stmt 0 view .LVU1425
 3959 097e 9BB2     		uxth	r3, r3
2078:Src/BLDC_controller.c ****     } else {
 3960              		.loc 1 2078 20 view .LVU1426
 3961 0980 5B42     		rsbs	r3, r3, #0
2078:Src/BLDC_controller.c ****     } else {
 3962              		.loc 1 2078 18 view .LVU1427
 3963 0982 A4F87630 		strh	r3, [r4, #118]	@ movhi
 3964 0986 B5E7     		b	.L263
 3965              	.LVL393:
 3966              	.L217:
2085:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F04_Field_Weakening' */
 3967              		.loc 1 2085 10 is_stmt 1 view .LVU1428
2085:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F04_Field_Weakening' */
 3968              		.loc 1 2085 18 is_stmt 0 view .LVU1429
 3969 0988 94F8A430 		ldrb	r3, [r4, #164]	@ zero_extendqisi2
2085:Src/BLDC_controller.c ****     /* Outputs for Function Call SubSystem: '<S1>/F04_Field_Weakening' */
 3970              		.loc 1 2085 13 view .LVU1430
 3971 098c 002B     		cmp	r3, #0
 3972 098e 00F05081 		beq	.L264
ARM GAS  /tmp/cccGHnrd.s 			page 129


2090:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S6>/Field_Weakening_Enabled' incorporates:
 3973              		.loc 1 2090 5 is_stmt 1 view .LVU1431
2090:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S6>/Field_Weakening_Enabled' incorporates:
 3974              		.loc 1 2090 12 is_stmt 0 view .LVU1432
 3975 0992 95F8FE30 		ldrb	r3, [r5, #254]	@ zero_extendqisi2
2090:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S6>/Field_Weakening_Enabled' incorporates:
 3976              		.loc 1 2090 8 view .LVU1433
 3977 0996 002B     		cmp	r3, #0
 3978 0998 4BD0     		beq	.L265
2095:Src/BLDC_controller.c ****         DataTypeConversion2 = (int16_T)-DataTypeConversion2;
 3979              		.loc 1 2095 7 is_stmt 1 view .LVU1434
2095:Src/BLDC_controller.c ****         DataTypeConversion2 = (int16_T)-DataTypeConversion2;
 3980              		.loc 1 2095 10 is_stmt 0 view .LVU1435
 3981 099a B9F1000F 		cmp	r9, #0
 3982 099e 09DB     		blt	.L456
 3983              	.L266:
2108:Src/BLDC_controller.c ****         DataTypeConversion2 = rtP->r_fieldWeakHi;
 3984              		.loc 1 2108 7 is_stmt 1 view .LVU1436
2108:Src/BLDC_controller.c ****         DataTypeConversion2 = rtP->r_fieldWeakHi;
 3985              		.loc 1 2108 36 is_stmt 0 view .LVU1437
 3986 09a0 B5F9E020 		ldrsh	r2, [r5, #224]
2108:Src/BLDC_controller.c ****         DataTypeConversion2 = rtP->r_fieldWeakHi;
 3987              		.loc 1 2108 10 view .LVU1438
 3988 09a4 4A45     		cmp	r2, r9
 3989 09a6 11DB     		blt	.L390
2111:Src/BLDC_controller.c ****           /* Switch: '<S44>/Switch' incorporates:
 3990              		.loc 1 2111 9 is_stmt 1 view .LVU1439
2111:Src/BLDC_controller.c ****           /* Switch: '<S44>/Switch' incorporates:
 3991              		.loc 1 2111 38 is_stmt 0 view .LVU1440
 3992 09a8 B5F9E230 		ldrsh	r3, [r5, #226]
2111:Src/BLDC_controller.c ****           /* Switch: '<S44>/Switch' incorporates:
 3993              		.loc 1 2111 12 view .LVU1441
 3994 09ac 4B45     		cmp	r3, r9
 3995 09ae 0EDC     		bgt	.L267
 3996 09b0 4B46     		mov	r3, r9
 3997 09b2 0CE0     		b	.L267
 3998              	.L456:
2096:Src/BLDC_controller.c ****       }
 3999              		.loc 1 2096 9 is_stmt 1 view .LVU1442
2096:Src/BLDC_controller.c ****       }
 4000              		.loc 1 2096 31 is_stmt 0 view .LVU1443
 4001 09b4 C9F10009 		rsb	r9, r9, #0
 4002              	.LVL394:
2096:Src/BLDC_controller.c ****       }
 4003              		.loc 1 2096 29 view .LVU1444
 4004 09b8 0FFA89F9 		sxth	r9, r9
 4005              	.LVL395:
2096:Src/BLDC_controller.c ****       }
 4006              		.loc 1 2096 29 view .LVU1445
 4007 09bc F0E7     		b	.L266
 4008              	.L474:
 4009 09be 00BF     		.align	2
 4010              	.L473:
 4011 09c0 80C1FFFF 		.word	-16000
 4012 09c4 D34D6210 		.word	274877907
 4013 09c8 0080FFFF 		.word	-32768
 4014              	.L390:
ARM GAS  /tmp/cccGHnrd.s 			page 130


2109:Src/BLDC_controller.c ****       } else {
 4015              		.loc 1 2109 29 view .LVU1446
 4016 09cc 1346     		mov	r3, r2
 4017              	.L267:
 4018              	.LVL396:
2127:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo) << 15) / (int16_T)(rtP->r_fieldWeakHi -
 4019              		.loc 1 2127 7 is_stmt 1 view .LVU1447
2128:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo));
 4020              		.loc 1 2128 12 is_stmt 0 view .LVU1448
 4021 09ce B5F8E210 		ldrh	r1, [r5, #226]
2127:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo) << 15) / (int16_T)(rtP->r_fieldWeakHi -
 4022              		.loc 1 2127 66 view .LVU1449
 4023 09d2 5B1A     		subs	r3, r3, r1
 4024              	.LVL397:
2127:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo) << 15) / (int16_T)(rtP->r_fieldWeakHi -
 4025              		.loc 1 2127 36 view .LVU1450
 4026 09d4 1BB2     		sxth	r3, r3
2128:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo));
 4027              		.loc 1 2128 29 view .LVU1451
 4028 09d6 DB03     		lsls	r3, r3, #15
2128:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo));
 4029              		.loc 1 2128 51 view .LVU1452
 4030 09d8 92B2     		uxth	r2, r2
2128:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo));
 4031              		.loc 1 2128 67 view .LVU1453
 4032 09da 521A     		subs	r2, r2, r1
2128:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo));
 4033              		.loc 1 2128 38 view .LVU1454
 4034 09dc 12B2     		sxth	r2, r2
2128:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo));
 4035              		.loc 1 2128 36 view .LVU1455
 4036 09de 93FBF2F3 		sdiv	r3, r3, r2
2127:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo) << 15) / (int16_T)(rtP->r_fieldWeakHi -
 4037              		.loc 1 2127 22 view .LVU1456
 4038 09e2 9BB2     		uxth	r3, r3
 4039              	.LVL398:
2138:Src/BLDC_controller.c ****         rtb_Saturation = rtP->n_fieldWeakAuthHi;
 4040              		.loc 1 2138 7 is_stmt 1 view .LVU1457
2138:Src/BLDC_controller.c ****         rtb_Saturation = rtP->n_fieldWeakAuthHi;
 4041              		.loc 1 2138 21 is_stmt 0 view .LVU1458
 4042 09e4 B5F9D620 		ldrsh	r2, [r5, #214]
2138:Src/BLDC_controller.c ****         rtb_Saturation = rtP->n_fieldWeakAuthHi;
 4043              		.loc 1 2138 10 view .LVU1459
 4044 09e8 0698     		ldr	r0, [sp, #24]
 4045 09ea 8242     		cmp	r2, r0
 4046 09ec 05DB     		blt	.L391
2140:Src/BLDC_controller.c ****         /* Switch: '<S43>/Switch' incorporates:
 4047              		.loc 1 2140 14 is_stmt 1 view .LVU1460
2140:Src/BLDC_controller.c ****         /* Switch: '<S43>/Switch' incorporates:
 4048              		.loc 1 2140 28 is_stmt 0 view .LVU1461
 4049 09ee B5F9D810 		ldrsh	r1, [r5, #216]
2140:Src/BLDC_controller.c ****         /* Switch: '<S43>/Switch' incorporates:
 4050              		.loc 1 2140 17 view .LVU1462
 4051 09f2 8142     		cmp	r1, r0
 4052 09f4 02DC     		bgt	.L268
2146:Src/BLDC_controller.c ****       }
 4053              		.loc 1 2146 24 view .LVU1463
ARM GAS  /tmp/cccGHnrd.s 			page 131


 4054 09f6 0146     		mov	r1, r0
 4055 09f8 00E0     		b	.L268
 4056              	.L391:
2139:Src/BLDC_controller.c ****       } else if (Abs5 < rtP->n_fieldWeakAuthLo) {
 4057              		.loc 1 2139 24 view .LVU1464
 4058 09fa 1146     		mov	r1, r2
 4059              	.L268:
 4060              	.LVL399:
2157:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo) << 15) / (int16_T)(rtP->n_fieldWeakAuthHi -
 4061              		.loc 1 2157 7 is_stmt 1 view .LVU1465
2158:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo));
 4062              		.loc 1 2158 12 is_stmt 0 view .LVU1466
 4063 09fc B5F8D800 		ldrh	r0, [r5, #216]
2157:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo) << 15) / (int16_T)(rtP->n_fieldWeakAuthHi -
 4064              		.loc 1 2157 60 view .LVU1467
 4065 0a00 091A     		subs	r1, r1, r0
 4066              	.LVL400:
2157:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo) << 15) / (int16_T)(rtP->n_fieldWeakAuthHi -
 4067              		.loc 1 2157 35 view .LVU1468
 4068 0a02 09B2     		sxth	r1, r1
2158:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo));
 4069              		.loc 1 2158 33 view .LVU1469
 4070 0a04 C903     		lsls	r1, r1, #15
2158:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo));
 4071              		.loc 1 2158 55 view .LVU1470
 4072 0a06 92B2     		uxth	r2, r2
2158:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo));
 4073              		.loc 1 2158 75 view .LVU1471
 4074 0a08 121A     		subs	r2, r2, r0
2158:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo));
 4075              		.loc 1 2158 42 view .LVU1472
 4076 0a0a 12B2     		sxth	r2, r2
2158:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo));
 4077              		.loc 1 2158 40 view .LVU1473
 4078 0a0c 91FBF2F2 		sdiv	r2, r1, r2
2157:Src/BLDC_controller.c ****         rtP->n_fieldWeakAuthLo) << 15) / (int16_T)(rtP->n_fieldWeakAuthHi -
 4079              		.loc 1 2157 21 view .LVU1474
 4080 0a10 92B2     		uxth	r2, r2
 4081              	.LVL401:
2165:Src/BLDC_controller.c ****         /* MinMax: '<S42>/MinMax' */
 4082              		.loc 1 2165 7 is_stmt 1 view .LVU1475
2165:Src/BLDC_controller.c ****         /* MinMax: '<S42>/MinMax' */
 4083              		.loc 1 2165 10 is_stmt 0 view .LVU1476
 4084 0a12 9342     		cmp	r3, r2
 4085 0a14 01D3     		bcc	.L269
2173:Src/BLDC_controller.c ****           /* MinMax: '<S42>/MinMax1' */
 4086              		.loc 1 2173 9 is_stmt 1 view .LVU1477
2173:Src/BLDC_controller.c ****           /* MinMax: '<S42>/MinMax1' */
 4087              		.loc 1 2173 12 is_stmt 0 view .LVU1478
 4088 0a16 00D8     		bhi	.L269
2127:Src/BLDC_controller.c ****         rtP->r_fieldWeakLo) << 15) / (int16_T)(rtP->r_fieldWeakHi -
 4089              		.loc 1 2127 22 view .LVU1479
 4090 0a18 1A46     		mov	r2, r3
 4091              	.LVL402:
 4092              	.L269:
2188:Src/BLDC_controller.c ****         rtb_Saturation1 = rtP->id_fieldWeakMax;
 4093              		.loc 1 2188 7 is_stmt 1 view .LVU1480
ARM GAS  /tmp/cccGHnrd.s 			page 132


2188:Src/BLDC_controller.c ****         rtb_Saturation1 = rtP->id_fieldWeakMax;
 4094              		.loc 1 2188 14 is_stmt 0 view .LVU1481
 4095 0a1a 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
2188:Src/BLDC_controller.c ****         rtb_Saturation1 = rtP->id_fieldWeakMax;
 4096              		.loc 1 2188 10 view .LVU1482
 4097 0a1e 022B     		cmp	r3, #2
 4098 0a20 4FD0     		beq	.L457
2191:Src/BLDC_controller.c ****       }
 4099              		.loc 1 2191 9 is_stmt 1 view .LVU1483
2191:Src/BLDC_controller.c ****       }
 4100              		.loc 1 2191 25 is_stmt 0 view .LVU1484
 4101 0a22 B5F9CC30 		ldrsh	r3, [r5, #204]
 4102              	.LVL403:
 4103              	.L271:
2197:Src/BLDC_controller.c **** 
 4104              		.loc 1 2197 7 is_stmt 1 view .LVU1485
2197:Src/BLDC_controller.c **** 
 4105              		.loc 1 2197 50 is_stmt 0 view .LVU1486
 4106 0a26 02FB03F3 		mul	r3, r2, r3
 4107              	.LVL404:
2197:Src/BLDC_controller.c **** 
 4108              		.loc 1 2197 23 view .LVU1487
 4109 0a2a 43F3CF33 		sbfx	r3, r3, #15, #16
2197:Src/BLDC_controller.c **** 
 4110              		.loc 1 2197 21 view .LVU1488
 4111 0a2e A4F87230 		strh	r3, [r4, #114]	@ movhi
 4112              	.LVL405:
 4113              	.L265:
2211:Src/BLDC_controller.c ****     UnitDelay3 = -1;
 4114              		.loc 1 2211 5 is_stmt 1 view .LVU1489
2211:Src/BLDC_controller.c ****     UnitDelay3 = -1;
 4115              		.loc 1 2211 16 is_stmt 0 view .LVU1490
 4116 0a32 94F99520 		ldrsb	r2, [r4, #149]
 4117              	.LVL406:
2212:Src/BLDC_controller.c ****     if (rtP->z_ctrlTypSel == 2) {
 4118              		.loc 1 2212 5 is_stmt 1 view .LVU1491
2213:Src/BLDC_controller.c ****       UnitDelay3 = 0;
 4119              		.loc 1 2213 5 view .LVU1492
2213:Src/BLDC_controller.c ****       UnitDelay3 = 0;
 4120              		.loc 1 2213 12 is_stmt 0 view .LVU1493
 4121 0a36 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
2213:Src/BLDC_controller.c ****       UnitDelay3 = 0;
 4122              		.loc 1 2213 8 view .LVU1494
 4123 0a3a 022B     		cmp	r3, #2
 4124 0a3c 44D0     		beq	.L392
2212:Src/BLDC_controller.c ****     if (rtP->z_ctrlTypSel == 2) {
 4125              		.loc 1 2212 16 view .LVU1495
 4126 0a3e 4FF0FF33 		mov	r3, #-1
 4127              	.L272:
 4128              	.LVL407:
2217:Src/BLDC_controller.c ****     if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 4129              		.loc 1 2217 5 is_stmt 1 view .LVU1496
2217:Src/BLDC_controller.c ****     if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 4130              		.loc 1 2217 33 is_stmt 0 view .LVU1497
 4131 0a42 84F89530 		strb	r3, [r4, #149]
2218:Src/BLDC_controller.c ****       /* Disable for SwitchCase: '<S80>/Switch Case' */
 4132              		.loc 1 2218 5 is_stmt 1 view .LVU1498
ARM GAS  /tmp/cccGHnrd.s 			page 133


2218:Src/BLDC_controller.c ****       /* Disable for SwitchCase: '<S80>/Switch Case' */
 4133              		.loc 1 2218 8 is_stmt 0 view .LVU1499
 4134 0a46 9342     		cmp	r3, r2
 4135 0a48 03D0     		beq	.L273
2218:Src/BLDC_controller.c ****       /* Disable for SwitchCase: '<S80>/Switch Case' */
 4136              		.loc 1 2218 36 discriminator 1 view .LVU1500
 4137 0a4a 12B9     		cbnz	r2, .L273
2220:Src/BLDC_controller.c ****     }
 4138              		.loc 1 2220 7 is_stmt 1 view .LVU1501
2220:Src/BLDC_controller.c ****     }
 4139              		.loc 1 2220 42 is_stmt 0 view .LVU1502
 4140 0a4c FF22     		movs	r2, #255
 4141              	.LVL408:
2220:Src/BLDC_controller.c ****     }
 4142              		.loc 1 2220 42 view .LVU1503
 4143 0a4e 84F89620 		strb	r2, [r4, #150]
 4144              	.L273:
2223:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S48>/Motor_Limitations_Enabled' incorporates:
 4145              		.loc 1 2223 5 is_stmt 1 view .LVU1504
2223:Src/BLDC_controller.c ****       /* Outputs for IfAction SubSystem: '<S48>/Motor_Limitations_Enabled' incorporates:
 4146              		.loc 1 2223 8 is_stmt 0 view .LVU1505
 4147 0a52 002B     		cmp	r3, #0
 4148 0a54 7FF44EAF 		bne	.L263
2227:Src/BLDC_controller.c **** 
 4149              		.loc 1 2227 7 is_stmt 1 view .LVU1506
2227:Src/BLDC_controller.c **** 
 4150              		.loc 1 2227 26 is_stmt 0 view .LVU1507
 4151 0a58 B5F91230 		ldrsh	r3, [r5, #18]
 4152              	.LVL409:
2227:Src/BLDC_controller.c **** 
 4153              		.loc 1 2227 21 view .LVU1508
 4154 0a5c A4F85C30 		strh	r3, [r4, #92]	@ movhi
2232:Src/BLDC_controller.c **** 
 4155              		.loc 1 2232 7 is_stmt 1 view .LVU1509
2232:Src/BLDC_controller.c **** 
 4156              		.loc 1 2232 35 is_stmt 0 view .LVU1510
 4157 0a60 9BB2     		uxth	r3, r3
2232:Src/BLDC_controller.c **** 
 4158              		.loc 1 2232 21 view .LVU1511
 4159 0a62 5B42     		rsbs	r3, r3, #0
2232:Src/BLDC_controller.c **** 
 4160              		.loc 1 2232 19 view .LVU1512
 4161 0a64 A4F85E30 		strh	r3, [r4, #94]	@ movhi
2239:Src/BLDC_controller.c ****         rtb_Saturation1 = (int16_T)-rtDW->Switch1;
 4162              		.loc 1 2239 7 is_stmt 1 view .LVU1513
2239:Src/BLDC_controller.c ****         rtb_Saturation1 = (int16_T)-rtDW->Switch1;
 4163              		.loc 1 2239 15 is_stmt 0 view .LVU1514
 4164 0a68 B4F95A00 		ldrsh	r0, [r4, #90]
2239:Src/BLDC_controller.c ****         rtb_Saturation1 = (int16_T)-rtDW->Switch1;
 4165              		.loc 1 2239 10 view .LVU1515
 4166 0a6c 0028     		cmp	r0, #0
 4167 0a6e 2DDB     		blt	.L458
 4168              	.L274:
 4169              	.LVL410:
2245:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
 4170              		.loc 1 2245 7 is_stmt 1 view .LVU1516
2245:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
ARM GAS  /tmp/cccGHnrd.s 			page 134


 4171              		.loc 1 2245 40 is_stmt 0 view .LVU1517
 4172 0a70 B5F97010 		ldrsh	r1, [r5, #112]
2246:Src/BLDC_controller.c ****         45U)];
 4173              		.loc 1 2246 53 view .LVU1518
 4174 0a74 B5F87220 		ldrh	r2, [r5, #114]
2246:Src/BLDC_controller.c ****         45U)];
 4175              		.loc 1 2246 73 view .LVU1519
 4176 0a78 8BB2     		uxth	r3, r1
2245:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
 4177              		.loc 1 2245 40 view .LVU1520
 4178 0a7a D21A     		subs	r2, r2, r3
 4179 0a7c 2D23     		movs	r3, #45
 4180 0a7e 92B2     		uxth	r2, r2
 4181 0a80 FFF7FEFF 		bl	plook_u8s16_evencka
 4182              	.LVL411:
2245:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
 4183              		.loc 1 2245 39 discriminator 1 view .LVU1521
 4184 0a84 0830     		adds	r0, r0, #8
 4185 0a86 05EB4000 		add	r0, r5, r0, lsl #1
 4186 0a8a B0F90430 		ldrsh	r3, [r0, #4]
2245:Src/BLDC_controller.c ****         rtP->Vq_max_XA[0], (uint16_T)(rtP->Vq_max_XA[1] - rtP->Vq_max_XA[0]),
 4187              		.loc 1 2245 23 discriminator 1 view .LVU1522
 4188 0a8e A4F86030 		strh	r3, [r4, #96]	@ movhi
2252:Src/BLDC_controller.c ****       rtDW->i_max = rtP->i_max;
 4189              		.loc 1 2252 7 is_stmt 1 view .LVU1523
2252:Src/BLDC_controller.c ****       rtDW->i_max = rtP->i_max;
 4190              		.loc 1 2252 35 is_stmt 0 view .LVU1524
 4191 0a92 9BB2     		uxth	r3, r3
2252:Src/BLDC_controller.c ****       rtDW->i_max = rtP->i_max;
 4192              		.loc 1 2252 21 view .LVU1525
 4193 0a94 5B42     		rsbs	r3, r3, #0
2252:Src/BLDC_controller.c ****       rtDW->i_max = rtP->i_max;
 4194              		.loc 1 2252 19 view .LVU1526
 4195 0a96 A4F86230 		strh	r3, [r4, #98]	@ movhi
2253:Src/BLDC_controller.c **** 
 4196              		.loc 1 2253 7 is_stmt 1 view .LVU1527
2253:Src/BLDC_controller.c **** 
 4197              		.loc 1 2253 24 is_stmt 0 view .LVU1528
 4198 0a9a B5F9CE80 		ldrsh	r8, [r5, #206]
2253:Src/BLDC_controller.c **** 
 4199              		.loc 1 2253 19 view .LVU1529
 4200 0a9e A4F86480 		strh	r8, [r4, #100]	@ movhi
2259:Src/BLDC_controller.c ****       rtb_Gain3 = (rtb_Gain3 == MIN_int32_T) && (rtDW->i_max == -1) ?
 4201              		.loc 1 2259 7 is_stmt 1 view .LVU1530
2259:Src/BLDC_controller.c ****       rtb_Gain3 = (rtb_Gain3 == MIN_int32_T) && (rtDW->i_max == -1) ?
 4202              		.loc 1 2259 23 is_stmt 0 view .LVU1531
 4203 0aa2 B4F97200 		ldrsh	r0, [r4, #114]
2259:Src/BLDC_controller.c ****       rtb_Gain3 = (rtb_Gain3 == MIN_int32_T) && (rtDW->i_max == -1) ?
 4204              		.loc 1 2259 17 view .LVU1532
 4205 0aa6 0004     		lsls	r0, r0, #16
 4206              	.LVL412:
2260:Src/BLDC_controller.c ****         MAX_int32_T : rtb_Gain3 / rtDW->i_max;
 4207              		.loc 1 2260 7 is_stmt 1 view .LVU1533
2261:Src/BLDC_controller.c ****       if (rtb_Gain3 < 0) {
 4208              		.loc 1 2261 21 is_stmt 0 view .LVU1534
 4209 0aa8 B0F1004F 		cmp	r0, #-2147483648
 4210 0aac 12D0     		beq	.L459
ARM GAS  /tmp/cccGHnrd.s 			page 135


 4211              	.L275:
2261:Src/BLDC_controller.c ****       if (rtb_Gain3 < 0) {
 4212              		.loc 1 2261 21 discriminator 1 view .LVU1535
 4213 0aae 90FBF8F0 		sdiv	r0, r0, r8
 4214              	.LVL413:
2262:Src/BLDC_controller.c ****         rtb_Gain3 = 0;
 4215              		.loc 1 2262 7 is_stmt 1 view .LVU1536
2262:Src/BLDC_controller.c ****         rtb_Gain3 = 0;
 4216              		.loc 1 2262 10 is_stmt 0 view .LVU1537
 4217 0ab2 0028     		cmp	r0, #0
 4218 0ab4 14DB     		blt	.L460
 4219              	.LVL414:
 4220              	.L276:
2265:Src/BLDC_controller.c ****           rtb_Gain3 = 65535;
 4221              		.loc 1 2265 9 is_stmt 1 view .LVU1538
2265:Src/BLDC_controller.c ****           rtb_Gain3 = 65535;
 4222              		.loc 1 2265 12 is_stmt 0 view .LVU1539
 4223 0ab6 B0F5803F 		cmp	r0, #65536
 4224 0aba 12DB     		blt	.L277
2266:Src/BLDC_controller.c ****         }
 4225              		.loc 1 2266 21 view .LVU1540
 4226 0abc 4FF6FF70 		movw	r0, #65535
 4227 0ac0 0FE0     		b	.L277
 4228              	.LVL415:
 4229              	.L457:
2189:Src/BLDC_controller.c ****       } else {
 4230              		.loc 1 2189 9 is_stmt 1 view .LVU1541
2189:Src/BLDC_controller.c ****       } else {
 4231              		.loc 1 2189 25 is_stmt 0 view .LVU1542
 4232 0ac2 B5F9D030 		ldrsh	r3, [r5, #208]
 4233              	.LVL416:
2189:Src/BLDC_controller.c ****       } else {
 4234              		.loc 1 2189 25 view .LVU1543
 4235 0ac6 AEE7     		b	.L271
 4236              	.LVL417:
 4237              	.L392:
2214:Src/BLDC_controller.c ****     }
 4238              		.loc 1 2214 18 view .LVU1544
 4239 0ac8 0023     		movs	r3, #0
 4240 0aca BAE7     		b	.L272
 4241              	.LVL418:
 4242              	.L458:
2240:Src/BLDC_controller.c ****       } else {
 4243              		.loc 1 2240 9 is_stmt 1 view .LVU1545
2240:Src/BLDC_controller.c ****       } else {
 4244              		.loc 1 2240 41 is_stmt 0 view .LVU1546
 4245 0acc 80B2     		uxth	r0, r0
2240:Src/BLDC_controller.c ****       } else {
 4246              		.loc 1 2240 27 view .LVU1547
 4247 0ace 4042     		rsbs	r0, r0, #0
2240:Src/BLDC_controller.c ****       } else {
 4248              		.loc 1 2240 25 view .LVU1548
 4249 0ad0 00B2     		sxth	r0, r0
 4250              	.LVL419:
2240:Src/BLDC_controller.c ****       } else {
 4251              		.loc 1 2240 25 view .LVU1549
 4252 0ad2 CDE7     		b	.L274
ARM GAS  /tmp/cccGHnrd.s 			page 136


 4253              	.LVL420:
 4254              	.L459:
2260:Src/BLDC_controller.c ****         MAX_int32_T : rtb_Gain3 / rtDW->i_max;
 4255              		.loc 1 2260 46 view .LVU1550
 4256 0ad4 B8F1FF3F 		cmp	r8, #-1
 4257 0ad8 E9D1     		bne	.L275
2261:Src/BLDC_controller.c ****       if (rtb_Gain3 < 0) {
 4258              		.loc 1 2261 21 view .LVU1551
 4259 0ada 6FF00040 		mvn	r0, #-2147483648
 4260              	.LVL421:
2261:Src/BLDC_controller.c ****       if (rtb_Gain3 < 0) {
 4261              		.loc 1 2261 21 view .LVU1552
 4262 0ade EAE7     		b	.L276
 4263              	.LVL422:
 4264              	.L460:
2263:Src/BLDC_controller.c ****       } else {
 4265              		.loc 1 2263 19 view .LVU1553
 4266 0ae0 0020     		movs	r0, #0
 4267              	.LVL423:
 4268              	.L277:
2275:Src/BLDC_controller.c ****         ((rtConstP.iq_maxSca_M1_Table[plook_u8u16_evencka((uint16_T)rtb_Gain3,
 4269              		.loc 1 2275 7 is_stmt 1 view .LVU1554
2276:Src/BLDC_controller.c ****            0U, 1311U, 49U)] * rtDW->i_max) >> 16);
 4270              		.loc 1 2276 39 is_stmt 0 view .LVU1555
 4271 0ae2 3123     		movs	r3, #49
 4272 0ae4 40F21F52 		movw	r2, #1311
 4273 0ae8 0021     		movs	r1, #0
 4274 0aea 80B2     		uxth	r0, r0
 4275              	.LVL424:
2276:Src/BLDC_controller.c ****            0U, 1311U, 49U)] * rtDW->i_max) >> 16);
 4276              		.loc 1 2276 39 view .LVU1556
 4277 0aec FFF7FEFF 		bl	plook_u8u16_evencka
 4278              	.LVL425:
2276:Src/BLDC_controller.c ****            0U, 1311U, 49U)] * rtDW->i_max) >> 16);
 4279              		.loc 1 2276 38 discriminator 1 view .LVU1557
 4280 0af0 00F56270 		add	r0, r0, #904
 4281 0af4 BB4B     		ldr	r3, .L475
 4282 0af6 03EB4003 		add	r3, r3, r0, lsl #1
 4283 0afa 5B88     		ldrh	r3, [r3, #2]
2277:Src/BLDC_controller.c **** 
 4284              		.loc 1 2277 29 view .LVU1558
 4285 0afc 08FB03F3 		mul	r3, r8, r3
2275:Src/BLDC_controller.c ****         ((rtConstP.iq_maxSca_M1_Table[plook_u8u16_evencka((uint16_T)rtb_Gain3,
 4286              		.loc 1 2275 25 view .LVU1559
 4287 0b00 1A14     		asrs	r2, r3, #16
2275:Src/BLDC_controller.c ****         ((rtConstP.iq_maxSca_M1_Table[plook_u8u16_evencka((uint16_T)rtb_Gain3,
 4288              		.loc 1 2275 23 view .LVU1560
 4289 0b02 A4F86620 		strh	r2, [r4, #102]	@ movhi
2280:Src/BLDC_controller.c **** 
 4290              		.loc 1 2280 7 is_stmt 1 view .LVU1561
2280:Src/BLDC_controller.c **** 
 4291              		.loc 1 2280 35 is_stmt 0 view .LVU1562
 4292 0b06 1B0C     		lsrs	r3, r3, #16
2280:Src/BLDC_controller.c **** 
 4293              		.loc 1 2280 21 view .LVU1563
 4294 0b08 5B42     		rsbs	r3, r3, #0
 4295 0b0a 1BB2     		sxth	r3, r3
ARM GAS  /tmp/cccGHnrd.s 			page 137


2280:Src/BLDC_controller.c **** 
 4296              		.loc 1 2280 19 view .LVU1564
 4297 0b0c A4F86830 		strh	r3, [r4, #104]	@ movhi
2296:Src/BLDC_controller.c ****       UnitDelay3 = -1;
 4298              		.loc 1 2296 7 is_stmt 1 view .LVU1565
2296:Src/BLDC_controller.c ****       UnitDelay3 = -1;
 4299              		.loc 1 2296 18 is_stmt 0 view .LVU1566
 4300 0b10 94F99600 		ldrsb	r0, [r4, #150]
 4301              	.LVL426:
2297:Src/BLDC_controller.c ****       switch (rtDW->z_ctrlMod) {
 4302              		.loc 1 2297 7 is_stmt 1 view .LVU1567
2298:Src/BLDC_controller.c ****        case 1:
 4303              		.loc 1 2298 7 view .LVU1568
2298:Src/BLDC_controller.c ****        case 1:
 4304              		.loc 1 2298 19 is_stmt 0 view .LVU1569
 4305 0b14 94F89910 		ldrb	r1, [r4, #153]	@ zero_extendqisi2
2298:Src/BLDC_controller.c ****        case 1:
 4306              		.loc 1 2298 7 view .LVU1570
 4307 0b18 0229     		cmp	r1, #2
 4308 0b1a 2BD0     		beq	.L278
 4309 0b1c 0329     		cmp	r1, #3
 4310 0b1e 0AD0     		beq	.L279
 4311 0b20 0129     		cmp	r1, #1
 4312 0b22 3AD0     		beq	.L280
2312:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4313              		.loc 1 2312 7 is_stmt 1 view .LVU1571
2312:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4314              		.loc 1 2312 42 is_stmt 0 view .LVU1572
 4315 0b24 FF23     		movs	r3, #255
 4316 0b26 84F89630 		strb	r3, [r4, #150]
2313:Src/BLDC_controller.c ****        case 0:
 4317              		.loc 1 2313 7 is_stmt 1 view .LVU1573
 4318              	.LVL427:
 4319              	.L288:
2420:Src/BLDC_controller.c **** 
 4320              		.loc 1 2420 7 view .LVU1574
2420:Src/BLDC_controller.c **** 
 4321              		.loc 1 2420 35 is_stmt 0 view .LVU1575
 4322 0b2a B4F86430 		ldrh	r3, [r4, #100]
2420:Src/BLDC_controller.c **** 
 4323              		.loc 1 2420 21 view .LVU1576
 4324 0b2e 5B42     		rsbs	r3, r3, #0
2420:Src/BLDC_controller.c **** 
 4325              		.loc 1 2420 19 view .LVU1577
 4326 0b30 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 4327 0b34 DEE6     		b	.L263
 4328              	.LVL428:
 4329              	.L279:
2308:Src/BLDC_controller.c ****         break;
 4330              		.loc 1 2308 9 is_stmt 1 view .LVU1578
2309:Src/BLDC_controller.c ****       }
 4331              		.loc 1 2309 9 view .LVU1579
2312:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4332              		.loc 1 2312 7 view .LVU1580
2312:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4333              		.loc 1 2312 42 is_stmt 0 view .LVU1581
 4334 0b36 0223     		movs	r3, #2
ARM GAS  /tmp/cccGHnrd.s 			page 138


 4335 0b38 84F89630 		strb	r3, [r4, #150]
2313:Src/BLDC_controller.c ****        case 0:
 4336              		.loc 1 2313 7 is_stmt 1 view .LVU1582
2387:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Torque_Mode_Protection' incorporates:
 4337              		.loc 1 2387 9 view .LVU1583
2387:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Torque_Mode_Protection' incorporates:
 4338              		.loc 1 2387 12 is_stmt 0 view .LVU1584
 4339 0b3c 9842     		cmp	r0, r3
 4340 0b3e 71D1     		bne	.L461
 4341              	.LVL429:
 4342              	.L283:
2407:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Vq_max_M1, 0, &rtDW->Switch2_i,
 4343              		.loc 1 2407 9 is_stmt 1 view .LVU1585
2407:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Vq_max_M1, 0, &rtDW->Switch2_i,
 4344              		.loc 1 2407 39 is_stmt 0 view .LVU1586
 4345 0b40 B5F8DA00 		ldrh	r0, [r5, #218]
2407:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Vq_max_M1, 0, &rtDW->Switch2_i,
 4346              		.loc 1 2407 47 view .LVU1587
 4347 0b44 069B     		ldr	r3, [sp, #24]
 4348 0b46 C01A     		subs	r0, r0, r3
2407:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Vq_max_M1, 0, &rtDW->Switch2_i,
 4349              		.loc 1 2407 9 view .LVU1588
 4350 0b48 B4F96030 		ldrsh	r3, [r4, #96]
 4351 0b4c B5F8E420 		ldrh	r2, [r5, #228]
 4352 0b50 B5F8F610 		ldrh	r1, [r5, #246]
 4353 0b54 04F1140C 		add	ip, r4, #20
 4354 0b58 CDF808C0 		str	ip, [sp, #8]
 4355 0b5c 04F16C0C 		add	ip, r4, #108
 4356 0b60 CDF804C0 		str	ip, [sp, #4]
 4357 0b64 4FF0000C 		mov	ip, #0
 4358 0b68 CDF800C0 		str	ip, [sp]
 4359 0b6c 00B2     		sxth	r0, r0
 4360 0b6e FFF7FEFF 		bl	I_backCalc_fixdt
 4361              	.LVL430:
2414:Src/BLDC_controller.c ****       }
 4362              		.loc 1 2414 9 is_stmt 1 view .LVU1589
 4363 0b72 DAE7     		b	.L288
 4364              	.LVL431:
 4365              	.L278:
2304:Src/BLDC_controller.c ****         break;
 4366              		.loc 1 2304 9 view .LVU1590
2305:Src/BLDC_controller.c **** 
 4367              		.loc 1 2305 9 view .LVU1591
2312:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4368              		.loc 1 2312 7 view .LVU1592
2312:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4369              		.loc 1 2312 42 is_stmt 0 view .LVU1593
 4370 0b74 0121     		movs	r1, #1
 4371 0b76 84F89610 		strb	r1, [r4, #150]
2313:Src/BLDC_controller.c ****        case 0:
 4372              		.loc 1 2313 7 is_stmt 1 view .LVU1594
2365:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->Divide1_n;
 4373              		.loc 1 2365 9 view .LVU1595
2365:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->Divide1_n;
 4374              		.loc 1 2365 37 is_stmt 0 view .LVU1596
 4375 0b7a B4F95210 		ldrsh	r1, [r4, #82]
2365:Src/BLDC_controller.c ****           rtb_Saturation1 = rtDW->Divide1_n;
ARM GAS  /tmp/cccGHnrd.s 			page 139


 4376              		.loc 1 2365 12 view .LVU1597
 4377 0b7e 8A42     		cmp	r2, r1
 4378 0b80 02DB     		blt	.L284
2367:Src/BLDC_controller.c ****           /* Switch: '<S84>/Switch' */
 4379              		.loc 1 2367 16 is_stmt 1 view .LVU1598
2367:Src/BLDC_controller.c ****           /* Switch: '<S84>/Switch' */
 4380              		.loc 1 2367 19 is_stmt 0 view .LVU1599
 4381 0b82 8B42     		cmp	r3, r1
 4382 0b84 4CDD     		ble	.L396
2369:Src/BLDC_controller.c ****         } else {
 4383              		.loc 1 2369 27 view .LVU1600
 4384 0b86 1A46     		mov	r2, r3
 4385              	.L284:
 4386              	.LVL432:
2380:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
 4387              		.loc 1 2380 9 is_stmt 1 view .LVU1601
2380:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
 4388              		.loc 1 2380 77 is_stmt 0 view .LVU1602
 4389 0b88 89B2     		uxth	r1, r1
2380:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
 4390              		.loc 1 2380 51 view .LVU1603
 4391 0b8a 531A     		subs	r3, r2, r1
2380:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
 4392              		.loc 1 2380 25 view .LVU1604
 4393 0b8c 1BB2     		sxth	r3, r3
2381:Src/BLDC_controller.c **** 
 4394              		.loc 1 2381 16 view .LVU1605
 4395 0b8e B5F8F220 		ldrh	r2, [r5, #242]
 4396              	.LVL433:
2381:Src/BLDC_controller.c **** 
 4397              		.loc 1 2381 11 view .LVU1606
 4398 0b92 02FB03F3 		mul	r3, r2, r3
2380:Src/BLDC_controller.c ****           * rtP->cf_iqKiLimProt;
 4399              		.loc 1 2380 23 view .LVU1607
 4400 0b96 6364     		str	r3, [r4, #68]
2384:Src/BLDC_controller.c **** 
 4401              		.loc 1 2384 9 is_stmt 1 view .LVU1608
 4402 0b98 C7E7     		b	.L288
 4403              	.LVL434:
 4404              	.L280:
2300:Src/BLDC_controller.c ****         break;
 4405              		.loc 1 2300 9 view .LVU1609
2301:Src/BLDC_controller.c **** 
 4406              		.loc 1 2301 9 view .LVU1610
2312:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4407              		.loc 1 2312 7 view .LVU1611
2312:Src/BLDC_controller.c ****       switch (UnitDelay3) {
 4408              		.loc 1 2312 42 is_stmt 0 view .LVU1612
 4409 0b9a 0023     		movs	r3, #0
 4410 0b9c 84F89630 		strb	r3, [r4, #150]
2313:Src/BLDC_controller.c ****        case 0:
 4411              		.loc 1 2313 7 is_stmt 1 view .LVU1613
2315:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Voltage_Mode_Protection' incorporates:
 4412              		.loc 1 2315 9 view .LVU1614
2315:Src/BLDC_controller.c ****           /* SystemReset for IfAction SubSystem: '<S80>/Voltage_Mode_Protection' incorporates:
 4413              		.loc 1 2315 12 is_stmt 0 view .LVU1615
 4414 0ba0 88BB     		cbnz	r0, .L462
ARM GAS  /tmp/cccGHnrd.s 			page 140


 4415              	.LVL435:
 4416              	.L287:
2340:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
 4417              		.loc 1 2340 9 is_stmt 1 view .LVU1616
2340:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
 4418              		.loc 1 2340 40 is_stmt 0 view .LVU1617
 4419 0ba2 B4F86600 		ldrh	r0, [r4, #102]
2340:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
 4420              		.loc 1 2340 58 view .LVU1618
 4421 0ba6 B4F87830 		ldrh	r3, [r4, #120]
2340:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
 4422              		.loc 1 2340 52 view .LVU1619
 4423 0baa C01A     		subs	r0, r0, r3
2340:Src/BLDC_controller.c ****                          rtP->cf_iqKiLimProt, rtP->cf_KbLimProt, rtDW->Abs1, 0,
 4424              		.loc 1 2340 9 view .LVU1620
 4425 0bac B4F97630 		ldrsh	r3, [r4, #118]
 4426 0bb0 B5F8E420 		ldrh	r2, [r5, #228]
 4427 0bb4 B5F8F210 		ldrh	r1, [r5, #242]
 4428 0bb8 04F1240C 		add	ip, r4, #36
 4429 0bbc CDF808C0 		str	ip, [sp, #8]
 4430 0bc0 04F1700C 		add	ip, r4, #112
 4431 0bc4 CDF804C0 		str	ip, [sp, #4]
 4432 0bc8 4FF00008 		mov	r8, #0
 4433 0bcc CDF80080 		str	r8, [sp]
 4434 0bd0 00B2     		sxth	r0, r0
 4435 0bd2 FFF7FEFF 		bl	I_backCalc_fixdt
 4436              	.LVL436:
2347:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Abs1, 0, &rtDW->Switch2_o,
 4437              		.loc 1 2347 9 is_stmt 1 view .LVU1621
2347:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Abs1, 0, &rtDW->Switch2_o,
 4438              		.loc 1 2347 39 is_stmt 0 view .LVU1622
 4439 0bd6 B5F8DA00 		ldrh	r0, [r5, #218]
2347:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Abs1, 0, &rtDW->Switch2_o,
 4440              		.loc 1 2347 47 view .LVU1623
 4441 0bda 069B     		ldr	r3, [sp, #24]
 4442 0bdc C01A     		subs	r0, r0, r3
2347:Src/BLDC_controller.c ****                          rtP->cf_KbLimProt, rtDW->Abs1, 0, &rtDW->Switch2_o,
 4443              		.loc 1 2347 9 view .LVU1624
 4444 0bde B4F97630 		ldrsh	r3, [r4, #118]
 4445 0be2 B5F8E420 		ldrh	r2, [r5, #228]
 4446 0be6 B5F8F610 		ldrh	r1, [r5, #246]
 4447 0bea 04F11C0C 		add	ip, r4, #28
 4448 0bee CDF808C0 		str	ip, [sp, #8]
 4449 0bf2 04F16E0C 		add	ip, r4, #110
 4450 0bf6 CDF804C0 		str	ip, [sp, #4]
 4451 0bfa CDF80080 		str	r8, [sp]
 4452 0bfe 00B2     		sxth	r0, r0
 4453 0c00 FFF7FEFF 		bl	I_backCalc_fixdt
 4454              	.LVL437:
2354:Src/BLDC_controller.c **** 
 4455              		.loc 1 2354 9 is_stmt 1 view .LVU1625
 4456 0c04 91E7     		b	.L288
 4457              	.LVL438:
 4458              	.L462:
2323:Src/BLDC_controller.c **** 
 4459              		.loc 1 2323 11 view .LVU1626
 4460 0c06 4FF07A71 		mov	r1, #65536000
ARM GAS  /tmp/cccGHnrd.s 			page 141


 4461 0c0a 04F12400 		add	r0, r4, #36
 4462              	.LVL439:
2323:Src/BLDC_controller.c **** 
 4463              		.loc 1 2323 11 is_stmt 0 view .LVU1627
 4464 0c0e FFF7FEFF 		bl	I_backCalc_fixdt_Reset
 4465              	.LVL440:
2328:Src/BLDC_controller.c **** 
 4466              		.loc 1 2328 11 is_stmt 1 view .LVU1628
 4467 0c12 4FF07A71 		mov	r1, #65536000
 4468 0c16 04F11C00 		add	r0, r4, #28
 4469 0c1a FFF7FEFF 		bl	I_backCalc_fixdt_Reset
 4470              	.LVL441:
 4471 0c1e C0E7     		b	.L287
 4472              	.LVL442:
 4473              	.L396:
2371:Src/BLDC_controller.c ****         }
 4474              		.loc 1 2371 27 is_stmt 0 view .LVU1629
 4475 0c20 0A46     		mov	r2, r1
 4476 0c22 B1E7     		b	.L284
 4477              	.LVL443:
 4478              	.L461:
2395:Src/BLDC_controller.c **** 
 4479              		.loc 1 2395 11 is_stmt 1 view .LVU1630
 4480 0c24 4FF06171 		mov	r1, #58982400
 4481 0c28 04F11400 		add	r0, r4, #20
 4482              	.LVL444:
2395:Src/BLDC_controller.c **** 
 4483              		.loc 1 2395 11 is_stmt 0 view .LVU1631
 4484 0c2c FFF7FEFF 		bl	I_backCalc_fixdt_Reset
 4485              	.LVL445:
 4486 0c30 86E7     		b	.L283
 4487              	.LVL446:
 4488              	.L264:
2428:Src/BLDC_controller.c ****       /* Outputs for Function Call SubSystem: '<S7>/FOC' */
 4489              		.loc 1 2428 5 is_stmt 1 view .LVU1632
2428:Src/BLDC_controller.c ****       /* Outputs for Function Call SubSystem: '<S7>/FOC' */
 4490              		.loc 1 2428 13 is_stmt 0 view .LVU1633
 4491 0c32 94F8A530 		ldrb	r3, [r4, #165]	@ zero_extendqisi2
2428:Src/BLDC_controller.c ****       /* Outputs for Function Call SubSystem: '<S7>/FOC' */
 4492              		.loc 1 2428 8 view .LVU1634
 4493 0c36 002B     		cmp	r3, #0
 4494 0c38 3FF45CAE 		beq	.L263
2433:Src/BLDC_controller.c ****       UnitDelay3 = -1;
 4495              		.loc 1 2433 7 is_stmt 1 view .LVU1635
2433:Src/BLDC_controller.c ****       UnitDelay3 = -1;
 4496              		.loc 1 2433 18 is_stmt 0 view .LVU1636
 4497 0c3c 94F99220 		ldrsb	r2, [r4, #146]
 4498              	.LVL447:
2434:Src/BLDC_controller.c ****       if (rtP->z_ctrlTypSel == 2) {
 4499              		.loc 1 2434 7 is_stmt 1 view .LVU1637
2435:Src/BLDC_controller.c ****         UnitDelay3 = 0;
 4500              		.loc 1 2435 7 view .LVU1638
2435:Src/BLDC_controller.c ****         UnitDelay3 = 0;
 4501              		.loc 1 2435 14 is_stmt 0 view .LVU1639
 4502 0c40 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
2435:Src/BLDC_controller.c ****         UnitDelay3 = 0;
 4503              		.loc 1 2435 10 view .LVU1640
ARM GAS  /tmp/cccGHnrd.s 			page 142


 4504 0c44 022B     		cmp	r3, #2
 4505 0c46 20D0     		beq	.L397
2434:Src/BLDC_controller.c ****       if (rtP->z_ctrlTypSel == 2) {
 4506              		.loc 1 2434 18 view .LVU1641
 4507 0c48 4FF0FF33 		mov	r3, #-1
 4508              	.L289:
 4509              	.LVL448:
2439:Src/BLDC_controller.c ****       if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 4510              		.loc 1 2439 7 is_stmt 1 view .LVU1642
2439:Src/BLDC_controller.c ****       if ((rtb_Sum2_h != UnitDelay3) && (rtb_Sum2_h == 0)) {
 4511              		.loc 1 2439 35 is_stmt 0 view .LVU1643
 4512 0c4c 84F89230 		strb	r3, [r4, #146]
2440:Src/BLDC_controller.c ****         /* Disable for SwitchCase: '<S59>/Switch Case' */
 4513              		.loc 1 2440 7 is_stmt 1 view .LVU1644
2440:Src/BLDC_controller.c ****         /* Disable for SwitchCase: '<S59>/Switch Case' */
 4514              		.loc 1 2440 10 is_stmt 0 view .LVU1645
 4515 0c50 9342     		cmp	r3, r2
 4516 0c52 05D0     		beq	.L290
2440:Src/BLDC_controller.c ****         /* Disable for SwitchCase: '<S59>/Switch Case' */
 4517              		.loc 1 2440 38 discriminator 1 view .LVU1646
 4518 0c54 22B9     		cbnz	r2, .L290
2442:Src/BLDC_controller.c **** 
 4519              		.loc 1 2442 9 is_stmt 1 view .LVU1647
2442:Src/BLDC_controller.c **** 
 4520              		.loc 1 2442 42 is_stmt 0 view .LVU1648
 4521 0c56 FF22     		movs	r2, #255
 4522              	.LVL449:
2442:Src/BLDC_controller.c **** 
 4523              		.loc 1 2442 42 view .LVU1649
 4524 0c58 84F89320 		strb	r2, [r4, #147]
2445:Src/BLDC_controller.c ****       }
 4525              		.loc 1 2445 9 is_stmt 1 view .LVU1650
2445:Src/BLDC_controller.c ****       }
 4526              		.loc 1 2445 37 is_stmt 0 view .LVU1651
 4527 0c5c 84F89420 		strb	r2, [r4, #148]
 4528              	.L290:
2448:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S47>/FOC_Enabled' incorporates:
 4529              		.loc 1 2448 7 is_stmt 1 view .LVU1652
2448:Src/BLDC_controller.c ****         /* Outputs for IfAction SubSystem: '<S47>/FOC_Enabled' incorporates:
 4530              		.loc 1 2448 10 is_stmt 0 view .LVU1653
 4531 0c60 002B     		cmp	r3, #0
 4532 0c62 7FF447AE 		bne	.L263
2459:Src/BLDC_controller.c ****         switch (rtDW->z_ctrlMod) {
 4533              		.loc 1 2459 9 is_stmt 1 view .LVU1654
2459:Src/BLDC_controller.c ****         switch (rtDW->z_ctrlMod) {
 4534              		.loc 1 2459 20 is_stmt 0 view .LVU1655
 4535 0c66 94F99310 		ldrsb	r1, [r4, #147]
 4536              	.LVL450:
2460:Src/BLDC_controller.c ****          case 1:
 4537              		.loc 1 2460 9 is_stmt 1 view .LVU1656
2460:Src/BLDC_controller.c ****          case 1:
 4538              		.loc 1 2460 21 is_stmt 0 view .LVU1657
 4539 0c6a 94F89920 		ldrb	r2, [r4, #153]	@ zero_extendqisi2
2460:Src/BLDC_controller.c ****          case 1:
 4540              		.loc 1 2460 9 view .LVU1658
 4541 0c6e 022A     		cmp	r2, #2
 4542 0c70 31D0     		beq	.L291
ARM GAS  /tmp/cccGHnrd.s 			page 143


 4543 0c72 032A     		cmp	r2, #3
 4544 0c74 0BD0     		beq	.L292
 4545 0c76 012A     		cmp	r2, #1
 4546 0c78 4BD0     		beq	.L293
2473:Src/BLDC_controller.c ****           break;
 4547              		.loc 1 2473 11 is_stmt 1 view .LVU1659
 4548              	.LVL451:
2474:Src/BLDC_controller.c ****         }
 4549              		.loc 1 2474 11 view .LVU1660
2477:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4550              		.loc 1 2477 9 view .LVU1661
2477:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4551              		.loc 1 2477 42 is_stmt 0 view .LVU1662
 4552 0c7a 0323     		movs	r3, #3
 4553 0c7c 84F89330 		strb	r3, [r4, #147]
2478:Src/BLDC_controller.c ****          case 0:
 4554              		.loc 1 2478 9 is_stmt 1 view .LVU1663
 4555              	.LVL452:
 4556              	.L294:
2713:Src/BLDC_controller.c **** 
 4557              		.loc 1 2713 11 view .LVU1664
2713:Src/BLDC_controller.c **** 
 4558              		.loc 1 2713 29 is_stmt 0 view .LVU1665
 4559 0c80 B4F97430 		ldrsh	r3, [r4, #116]
2713:Src/BLDC_controller.c **** 
 4560              		.loc 1 2713 23 view .LVU1666
 4561 0c84 A4F85830 		strh	r3, [r4, #88]	@ movhi
2716:Src/BLDC_controller.c ****         }
 4562              		.loc 1 2716 11 is_stmt 1 view .LVU1667
 4563 0c88 CFE0     		b	.L297
 4564              	.LVL453:
 4565              	.L397:
2436:Src/BLDC_controller.c ****       }
 4566              		.loc 1 2436 20 is_stmt 0 view .LVU1668
 4567 0c8a 0023     		movs	r3, #0
 4568 0c8c DEE7     		b	.L289
 4569              	.LVL454:
 4570              	.L292:
2469:Src/BLDC_controller.c ****           break;
 4571              		.loc 1 2469 11 is_stmt 1 view .LVU1669
2470:Src/BLDC_controller.c **** 
 4572              		.loc 1 2470 11 view .LVU1670
2477:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4573              		.loc 1 2477 9 view .LVU1671
2477:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4574              		.loc 1 2477 42 is_stmt 0 view .LVU1672
 4575 0c8e 0223     		movs	r3, #2
 4576 0c90 84F89330 		strb	r3, [r4, #147]
2478:Src/BLDC_controller.c ****          case 0:
 4577              		.loc 1 2478 9 is_stmt 1 view .LVU1673
 4578              	.LVL455:
 4579              	.L295:
2627:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Torque_Mode' incorporates:
 4580              		.loc 1 2627 11 view .LVU1674
2627:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Torque_Mode' incorporates:
 4581              		.loc 1 2627 14 is_stmt 0 view .LVU1675
 4582 0c94 8B42     		cmp	r3, r1
ARM GAS  /tmp/cccGHnrd.s 			page 144


 4583 0c96 40F0EA80 		bne	.L463
 4584              	.LVL456:
 4585              	.L314:
2646:Src/BLDC_controller.c **** 
 4586              		.loc 1 2646 11 is_stmt 1 view .LVU1676
2646:Src/BLDC_controller.c **** 
 4587              		.loc 1 2646 42 is_stmt 0 view .LVU1677
 4588 0c9a B4F96C80 		ldrsh	r8, [r4, #108]
 4589 0c9e 1FFA88F3 		uxth	r3, r8
2646:Src/BLDC_controller.c **** 
 4590              		.loc 1 2646 28 view .LVU1678
 4591 0ca2 5B42     		rsbs	r3, r3, #0
2646:Src/BLDC_controller.c **** 
 4592              		.loc 1 2646 26 view .LVU1679
 4593 0ca4 1BB2     		sxth	r3, r3
 4594              	.LVL457:
2653:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Divide1_n;
 4595              		.loc 1 2653 11 is_stmt 1 view .LVU1680
2653:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Divide1_n;
 4596              		.loc 1 2653 19 is_stmt 0 view .LVU1681
 4597 0ca6 B4F97420 		ldrsh	r2, [r4, #116]
2653:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Divide1_n;
 4598              		.loc 1 2653 34 view .LVU1682
 4599 0caa B4F96600 		ldrsh	r0, [r4, #102]
2653:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Divide1_n;
 4600              		.loc 1 2653 14 view .LVU1683
 4601 0cae 8242     		cmp	r2, r0
 4602 0cb0 04DC     		bgt	.L315
2655:Src/BLDC_controller.c ****             /* Switch: '<S70>/Switch' */
 4603              		.loc 1 2655 18 is_stmt 1 view .LVU1684
2655:Src/BLDC_controller.c ****             /* Switch: '<S70>/Switch' */
 4604              		.loc 1 2655 41 is_stmt 0 view .LVU1685
 4605 0cb2 B4F96800 		ldrsh	r0, [r4, #104]
2655:Src/BLDC_controller.c ****             /* Switch: '<S70>/Switch' */
 4606              		.loc 1 2655 21 view .LVU1686
 4607 0cb6 8242     		cmp	r2, r0
 4608 0cb8 00DB     		blt	.L315
2659:Src/BLDC_controller.c ****           }
 4609              		.loc 1 2659 29 view .LVU1687
 4610 0cba 1046     		mov	r0, r2
 4611              	.L315:
 4612              	.LVL458:
2665:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4613              		.loc 1 2665 11 is_stmt 1 view .LVU1688
2665:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4614              		.loc 1 2665 65 is_stmt 0 view .LVU1689
 4615 0cbc B4F95220 		ldrsh	r2, [r4, #82]
2665:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4616              		.loc 1 2665 21 view .LVU1690
 4617 0cc0 801A     		subs	r0, r0, r2
 4618              	.LVL459:
2666:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4619              		.loc 1 2666 11 is_stmt 1 view .LVU1691
2666:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4620              		.loc 1 2666 14 is_stmt 0 view .LVU1692
 4621 0cc2 B0F5004F 		cmp	r0, #32768
 4622 0cc6 80F2D680 		bge	.L402
ARM GAS  /tmp/cccGHnrd.s 			page 145


2669:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4623              		.loc 1 2669 13 is_stmt 1 view .LVU1693
2669:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4624              		.loc 1 2669 16 is_stmt 0 view .LVU1694
 4625 0cca 10F5004F 		cmn	r0, #32768
 4626 0cce 80F2D480 		bge	.L316
2670:Src/BLDC_controller.c ****             }
 4627              		.loc 1 2670 25 view .LVU1695
 4628 0cd2 4548     		ldr	r0, .L475+4
 4629              	.LVL460:
2670:Src/BLDC_controller.c ****             }
 4630              		.loc 1 2670 25 view .LVU1696
 4631 0cd4 D1E0     		b	.L316
 4632              	.LVL461:
 4633              	.L291:
2465:Src/BLDC_controller.c ****           break;
 4634              		.loc 1 2465 11 is_stmt 1 view .LVU1697
2466:Src/BLDC_controller.c **** 
 4635              		.loc 1 2466 11 view .LVU1698
2477:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4636              		.loc 1 2477 9 view .LVU1699
2477:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4637              		.loc 1 2477 42 is_stmt 0 view .LVU1700
 4638 0cd6 0123     		movs	r3, #1
 4639 0cd8 84F89330 		strb	r3, [r4, #147]
2478:Src/BLDC_controller.c ****          case 0:
 4640              		.loc 1 2478 9 is_stmt 1 view .LVU1701
 4641              	.LVL462:
 4642              	.L296:
2533:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Speed_Mode' incorporates:
 4643              		.loc 1 2533 11 view .LVU1702
2533:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Speed_Mode' incorporates:
 4644              		.loc 1 2533 14 is_stmt 0 view .LVU1703
 4645 0cdc 8B42     		cmp	r3, r1
 4646 0cde 54D1     		bne	.L464
 4647              	.LVL463:
 4648              	.L305:
2554:Src/BLDC_controller.c **** 
 4649              		.loc 1 2554 11 is_stmt 1 view .LVU1704
2554:Src/BLDC_controller.c **** 
 4650              		.loc 1 2554 41 is_stmt 0 view .LVU1705
 4651 0ce0 B5F90800 		ldrsh	r0, [r5, #8]
2554:Src/BLDC_controller.c **** 
 4652              		.loc 1 2554 26 view .LVU1706
 4653 0ce4 0001     		lsls	r0, r0, #4
 4654 0ce6 00B2     		sxth	r0, r0
 4655              	.LVL464:
2561:Src/BLDC_controller.c ****             /* Switch: '<S61>/Switch3' incorporates:
 4656              		.loc 1 2561 11 is_stmt 1 view .LVU1707
2561:Src/BLDC_controller.c ****             /* Switch: '<S61>/Switch3' incorporates:
 4657              		.loc 1 2561 18 is_stmt 0 view .LVU1708
 4658 0ce8 95F8FC30 		ldrb	r3, [r5, #252]	@ zero_extendqisi2
2561:Src/BLDC_controller.c ****             /* Switch: '<S61>/Switch3' incorporates:
 4659              		.loc 1 2561 14 view .LVU1709
 4660 0cec 002B     		cmp	r3, #0
 4661 0cee 63D0     		beq	.L306
2561:Src/BLDC_controller.c ****             /* Switch: '<S61>/Switch3' incorporates:
ARM GAS  /tmp/cccGHnrd.s 			page 146


 4662              		.loc 1 2561 36 discriminator 1 view .LVU1710
 4663 0cf0 0028     		cmp	r0, #0
 4664 0cf2 61D0     		beq	.L306
2565:Src/BLDC_controller.c ****               rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Vq_max_M1;
 4665              		.loc 1 2565 13 is_stmt 1 view .LVU1711
2565:Src/BLDC_controller.c ****               rtb_TmpSignalConversionAtLow_Pa[0] = rtDW->Vq_max_M1;
 4666              		.loc 1 2565 16 is_stmt 0 view .LVU1712
 4667 0cf4 0028     		cmp	r0, #0
 4668 0cf6 4FDD     		ble	.L307
2566:Src/BLDC_controller.c **** 
 4669              		.loc 1 2566 15 is_stmt 1 view .LVU1713
2566:Src/BLDC_controller.c **** 
 4670              		.loc 1 2566 56 is_stmt 0 view .LVU1714
 4671 0cf8 B4F96020 		ldrsh	r2, [r4, #96]
2566:Src/BLDC_controller.c **** 
 4672              		.loc 1 2566 50 view .LVU1715
 4673 0cfc ADF84020 		strh	r2, [sp, #64]	@ movhi
2569:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Merge1;
 4674              		.loc 1 2569 15 is_stmt 1 view .LVU1716
2569:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Merge1;
 4675              		.loc 1 2569 23 is_stmt 0 view .LVU1717
 4676 0d00 B4F97410 		ldrsh	r1, [r4, #116]
2569:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Merge1;
 4677              		.loc 1 2569 38 view .LVU1718
 4678 0d04 B4F96220 		ldrsh	r2, [r4, #98]
2569:Src/BLDC_controller.c ****                 rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Merge1;
 4679              		.loc 1 2569 18 view .LVU1719
 4680 0d08 9142     		cmp	r1, r2
 4681 0d0a 42DD     		ble	.L308
2570:Src/BLDC_controller.c ****               } else {
 4682              		.loc 1 2570 17 is_stmt 1 view .LVU1720
2570:Src/BLDC_controller.c ****               } else {
 4683              		.loc 1 2570 52 is_stmt 0 view .LVU1721
 4684 0d0c ADF84210 		strh	r1, [sp, #66]	@ movhi
 4685 0d10 5AE0     		b	.L309
 4686              	.LVL465:
 4687              	.L293:
2477:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4688              		.loc 1 2477 9 is_stmt 1 view .LVU1722
2477:Src/BLDC_controller.c ****         switch (UnitDelay3) {
 4689              		.loc 1 2477 42 is_stmt 0 view .LVU1723
 4690 0d12 84F89330 		strb	r3, [r4, #147]
2478:Src/BLDC_controller.c ****          case 0:
 4691              		.loc 1 2478 9 is_stmt 1 view .LVU1724
 4692 0d16 032B     		cmp	r3, #3
 4693 0d18 00F28780 		bhi	.L297
 4694 0d1c 01A2     		adr	r2, .L298
 4695 0d1e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4696 0d22 00BF     		.p2align 2
 4697              	.L298:
 4698 0d24 350D0000 		.word	.L299+1
 4699 0d28 DD0C0000 		.word	.L296+1
 4700 0d2c 950C0000 		.word	.L295+1
 4701 0d30 810C0000 		.word	.L294+1
 4702              		.p2align 1
 4703              	.L299:
2484:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Abs1;
ARM GAS  /tmp/cccGHnrd.s 			page 147


 4704              		.loc 1 2484 11 view .LVU1725
2484:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Abs1;
 4705              		.loc 1 2484 19 is_stmt 0 view .LVU1726
 4706 0d34 B4F97620 		ldrsh	r2, [r4, #118]
2484:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Abs1;
 4707              		.loc 1 2484 32 view .LVU1727
 4708 0d38 B4F97030 		ldrsh	r3, [r4, #112]
 4709              	.LVL466:
2484:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Abs1;
 4710              		.loc 1 2484 14 view .LVU1728
 4711 0d3c 9A42     		cmp	r2, r3
 4712 0d3e 00DA     		bge	.L300
2485:Src/BLDC_controller.c ****           } else {
 4713              		.loc 1 2485 33 view .LVU1729
 4714 0d40 1346     		mov	r3, r2
 4715              	.L300:
 4716              	.LVL467:
2490:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Switch2_o;
 4717              		.loc 1 2490 11 is_stmt 1 view .LVU1730
2490:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Switch2_o;
 4718              		.loc 1 2490 43 is_stmt 0 view .LVU1731
 4719 0d42 B4F96E20 		ldrsh	r2, [r4, #110]
2490:Src/BLDC_controller.c ****             DataTypeConversion2 = rtDW->Switch2_o;
 4720              		.loc 1 2490 14 view .LVU1732
 4721 0d46 9A42     		cmp	r2, r3
 4722 0d48 00DD     		ble	.L301
 4723 0d4a 1A46     		mov	r2, r3
 4724              	.L301:
 4725              	.LVL468:
2497:Src/BLDC_controller.c ****             rtb_Saturation1 = -1;
 4726              		.loc 1 2497 11 is_stmt 1 view .LVU1733
2497:Src/BLDC_controller.c ****             rtb_Saturation1 = -1;
 4727              		.loc 1 2497 19 is_stmt 0 view .LVU1734
 4728 0d4c B4F97430 		ldrsh	r3, [r4, #116]
2497:Src/BLDC_controller.c ****             rtb_Saturation1 = -1;
 4729              		.loc 1 2497 14 view .LVU1735
 4730 0d50 002B     		cmp	r3, #0
 4731 0d52 0DDB     		blt	.L398
2500:Src/BLDC_controller.c ****           }
 4732              		.loc 1 2500 13 is_stmt 1 view .LVU1736
2500:Src/BLDC_controller.c ****           }
 4733              		.loc 1 2500 29 is_stmt 0 view .LVU1737
 4734 0d54 002B     		cmp	r3, #0
 4735 0d56 D4BF     		ite	le
 4736 0d58 0023     		movle	r3, #0
 4737 0d5a 0123     		movgt	r3, #1
 4738              	.LVL469:
 4739              	.L302:
2506:Src/BLDC_controller.c **** 
 4740              		.loc 1 2506 11 is_stmt 1 view .LVU1738
2506:Src/BLDC_controller.c **** 
 4741              		.loc 1 2506 58 is_stmt 0 view .LVU1739
 4742 0d5c 02FB03F3 		mul	r3, r2, r3
 4743              	.LVL470:
2506:Src/BLDC_controller.c **** 
 4744              		.loc 1 2506 26 view .LVU1740
 4745 0d60 1BB2     		sxth	r3, r3
ARM GAS  /tmp/cccGHnrd.s 			page 148


 4746              	.LVL471:
2513:Src/BLDC_controller.c ****             /* SignalConversion: '<S64>/Signal Conversion2' */
 4747              		.loc 1 2513 11 is_stmt 1 view .LVU1741
2513:Src/BLDC_controller.c ****             /* SignalConversion: '<S64>/Signal Conversion2' */
 4748              		.loc 1 2513 36 is_stmt 0 view .LVU1742
 4749 0d62 B4F96020 		ldrsh	r2, [r4, #96]
 4750              	.LVL472:
2513:Src/BLDC_controller.c ****             /* SignalConversion: '<S64>/Signal Conversion2' */
 4751              		.loc 1 2513 14 view .LVU1743
 4752 0d66 9A42     		cmp	r2, r3
 4753 0d68 05DA     		bge	.L303
2515:Src/BLDC_controller.c ****           } else if (rtb_Saturation < rtDW->Gain5) {
 4754              		.loc 1 2515 13 is_stmt 1 view .LVU1744
2515:Src/BLDC_controller.c ****           } else if (rtb_Saturation < rtDW->Gain5) {
 4755              		.loc 1 2515 25 is_stmt 0 view .LVU1745
 4756 0d6a A4F85820 		strh	r2, [r4, #88]	@ movhi
 4757 0d6e 5CE0     		b	.L297
 4758              	.LVL473:
 4759              	.L398:
2498:Src/BLDC_controller.c ****           } else {
 4760              		.loc 1 2498 29 view .LVU1746
 4761 0d70 4FF0FF33 		mov	r3, #-1
 4762 0d74 F2E7     		b	.L302
 4763              	.LVL474:
 4764              	.L303:
2516:Src/BLDC_controller.c ****             /* Switch: '<S79>/Switch' incorporates:
 4765              		.loc 1 2516 18 is_stmt 1 view .LVU1747
2516:Src/BLDC_controller.c ****             /* Switch: '<S79>/Switch' incorporates:
 4766              		.loc 1 2516 43 is_stmt 0 view .LVU1748
 4767 0d76 B4F96220 		ldrsh	r2, [r4, #98]
2516:Src/BLDC_controller.c ****             /* Switch: '<S79>/Switch' incorporates:
 4768              		.loc 1 2516 21 view .LVU1749
 4769 0d7a 9A42     		cmp	r2, r3
 4770 0d7c 02DD     		ble	.L304
2520:Src/BLDC_controller.c ****           } else {
 4771              		.loc 1 2520 13 is_stmt 1 view .LVU1750
2520:Src/BLDC_controller.c ****           } else {
 4772              		.loc 1 2520 25 is_stmt 0 view .LVU1751
 4773 0d7e A4F85820 		strh	r2, [r4, #88]	@ movhi
 4774 0d82 52E0     		b	.L297
 4775              	.L304:
2525:Src/BLDC_controller.c ****           }
 4776              		.loc 1 2525 13 is_stmt 1 view .LVU1752
2525:Src/BLDC_controller.c ****           }
 4777              		.loc 1 2525 25 is_stmt 0 view .LVU1753
 4778 0d84 A4F85830 		strh	r3, [r4, #88]	@ movhi
 4779 0d88 4FE0     		b	.L297
 4780              	.LVL475:
 4781              	.L464:
2541:Src/BLDC_controller.c **** 
 4782              		.loc 1 2541 13 is_stmt 1 view .LVU1754
 4783 0d8a 201D     		adds	r0, r4, #4
 4784 0d8c FFF7FEFF 		bl	PI_clamp_fixdt_b_Reset
 4785              	.LVL476:
2541:Src/BLDC_controller.c **** 
 4786              		.loc 1 2541 13 is_stmt 0 view .LVU1755
 4787 0d90 A6E7     		b	.L305
ARM GAS  /tmp/cccGHnrd.s 			page 149


 4788              	.LVL477:
 4789              	.L308:
2572:Src/BLDC_controller.c ****               }
 4790              		.loc 1 2572 17 is_stmt 1 view .LVU1756
2572:Src/BLDC_controller.c ****               }
 4791              		.loc 1 2572 52 is_stmt 0 view .LVU1757
 4792 0d92 ADF84220 		strh	r2, [sp, #66]	@ movhi
 4793 0d96 17E0     		b	.L309
 4794              	.L307:
2577:Src/BLDC_controller.c ****                 /* MinMax: '<S61>/MinMax4' */
 4795              		.loc 1 2577 15 is_stmt 1 view .LVU1758
2577:Src/BLDC_controller.c ****                 /* MinMax: '<S61>/MinMax4' */
 4796              		.loc 1 2577 23 is_stmt 0 view .LVU1759
 4797 0d98 B4F96010 		ldrsh	r1, [r4, #96]
2577:Src/BLDC_controller.c ****                 /* MinMax: '<S61>/MinMax4' */
 4798              		.loc 1 2577 41 view .LVU1760
 4799 0d9c B4F97420 		ldrsh	r2, [r4, #116]
2577:Src/BLDC_controller.c ****                 /* MinMax: '<S61>/MinMax4' */
 4800              		.loc 1 2577 18 view .LVU1761
 4801 0da0 9142     		cmp	r1, r2
 4802 0da2 06DA     		bge	.L310
2579:Src/BLDC_controller.c ****               } else {
 4803              		.loc 1 2579 17 is_stmt 1 view .LVU1762
2579:Src/BLDC_controller.c ****               } else {
 4804              		.loc 1 2579 52 is_stmt 0 view .LVU1763
 4805 0da4 ADF84010 		strh	r1, [sp, #64]	@ movhi
 4806              	.L311:
2584:Src/BLDC_controller.c ****             }
 4807              		.loc 1 2584 15 is_stmt 1 view .LVU1764
2584:Src/BLDC_controller.c ****             }
 4808              		.loc 1 2584 56 is_stmt 0 view .LVU1765
 4809 0da8 B4F96220 		ldrsh	r2, [r4, #98]
2584:Src/BLDC_controller.c ****             }
 4810              		.loc 1 2584 50 view .LVU1766
 4811 0dac ADF84220 		strh	r2, [sp, #66]	@ movhi
 4812 0db0 0AE0     		b	.L309
 4813              	.L310:
2581:Src/BLDC_controller.c ****               }
 4814              		.loc 1 2581 17 is_stmt 1 view .LVU1767
2581:Src/BLDC_controller.c ****               }
 4815              		.loc 1 2581 52 is_stmt 0 view .LVU1768
 4816 0db2 ADF84020 		strh	r2, [sp, #64]	@ movhi
 4817 0db6 F7E7     		b	.L311
 4818              	.L306:
2589:Src/BLDC_controller.c ****             rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
 4819              		.loc 1 2589 13 is_stmt 1 view .LVU1769
2589:Src/BLDC_controller.c ****             rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
 4820              		.loc 1 2589 54 is_stmt 0 view .LVU1770
 4821 0db8 B4F96020 		ldrsh	r2, [r4, #96]
2589:Src/BLDC_controller.c ****             rtb_TmpSignalConversionAtLow_Pa[1] = rtDW->Gain5;
 4822              		.loc 1 2589 48 view .LVU1771
 4823 0dbc ADF84020 		strh	r2, [sp, #64]	@ movhi
2590:Src/BLDC_controller.c ****           }
 4824              		.loc 1 2590 13 is_stmt 1 view .LVU1772
2590:Src/BLDC_controller.c ****           }
 4825              		.loc 1 2590 54 is_stmt 0 view .LVU1773
 4826 0dc0 B4F96220 		ldrsh	r2, [r4, #98]
ARM GAS  /tmp/cccGHnrd.s 			page 150


2590:Src/BLDC_controller.c ****           }
 4827              		.loc 1 2590 48 view .LVU1774
 4828 0dc4 ADF84220 		strh	r2, [sp, #66]	@ movhi
 4829              	.L309:
2598:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Merge1;
 4830              		.loc 1 2598 11 is_stmt 1 view .LVU1775
2598:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Merge1;
 4831              		.loc 1 2598 14 is_stmt 0 view .LVU1776
 4832 0dc8 0BB9     		cbnz	r3, .L312
2599:Src/BLDC_controller.c ****           }
 4833              		.loc 1 2599 13 is_stmt 1 view .LVU1777
2599:Src/BLDC_controller.c ****           }
 4834              		.loc 1 2599 28 is_stmt 0 view .LVU1778
 4835 0dca B4F97400 		ldrsh	r0, [r4, #116]
 4836              	.LVL478:
 4837              	.L312:
2605:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4838              		.loc 1 2605 11 is_stmt 1 view .LVU1779
2605:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4839              		.loc 1 2605 21 is_stmt 0 view .LVU1780
 4840 0dce 0A9B     		ldr	r3, [sp, #40]
 4841 0dd0 C01A     		subs	r0, r0, r3
 4842              	.LVL479:
2606:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4843              		.loc 1 2606 11 is_stmt 1 view .LVU1781
2606:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4844              		.loc 1 2606 14 is_stmt 0 view .LVU1782
 4845 0dd2 B0F5004F 		cmp	r0, #32768
 4846 0dd6 09DA     		bge	.L399
2609:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4847              		.loc 1 2609 13 is_stmt 1 view .LVU1783
2609:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4848              		.loc 1 2609 16 is_stmt 0 view .LVU1784
 4849 0dd8 10F5004F 		cmn	r0, #32768
 4850 0ddc 08DA     		bge	.L313
2610:Src/BLDC_controller.c ****             }
 4851              		.loc 1 2610 25 view .LVU1785
 4852 0dde 0248     		ldr	r0, .L475+4
 4853              	.LVL480:
2610:Src/BLDC_controller.c ****             }
 4854              		.loc 1 2610 25 view .LVU1786
 4855 0de0 06E0     		b	.L313
 4856              	.L476:
 4857 0de2 00BF     		.align	2
 4858              	.L475:
 4859 0de4 00000000 		.word	rtConstP
 4860 0de8 0080FFFF 		.word	-32768
 4861              	.LVL481:
 4862              	.L399:
2607:Src/BLDC_controller.c ****           } else {
 4863              		.loc 1 2607 23 view .LVU1787
 4864 0dec 47F6FF70 		movw	r0, #32767
 4865              	.LVL482:
 4866              	.L313:
2615:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu,
 4867              		.loc 1 2615 11 is_stmt 1 view .LVU1788
 4868 0df0 B4F98C30 		ldrsh	r3, [r4, #140]
ARM GAS  /tmp/cccGHnrd.s 			page 151


 4869 0df4 B5F8F420 		ldrh	r2, [r5, #244]
 4870 0df8 B5F8EA10 		ldrh	r1, [r5, #234]
 4871 0dfc 04F1040C 		add	ip, r4, #4
 4872 0e00 CDF810C0 		str	ip, [sp, #16]
 4873 0e04 04F1580C 		add	ip, r4, #88
 4874 0e08 CDF80CC0 		str	ip, [sp, #12]
 4875 0e0c D4F844C0 		ldr	ip, [r4, #68]
 4876 0e10 CDF808C0 		str	ip, [sp, #8]
 4877 0e14 BDF942C0 		ldrsh	ip, [sp, #66]
 4878 0e18 CDF804C0 		str	ip, [sp, #4]
 4879 0e1c BDF940C0 		ldrsh	ip, [sp, #64]
 4880 0e20 CDF800C0 		str	ip, [sp]
 4881 0e24 00B2     		sxth	r0, r0
 4882              	.LVL483:
2615:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu,
 4883              		.loc 1 2615 11 is_stmt 0 view .LVU1789
 4884 0e26 FFF7FEFF 		bl	PI_clamp_fixdt_l
 4885              	.LVL484:
2624:Src/BLDC_controller.c **** 
 4886              		.loc 1 2624 11 is_stmt 1 view .LVU1790
 4887              	.L297:
2728:Src/BLDC_controller.c ****         UnitDelay3 = -1;
 4888              		.loc 1 2728 9 view .LVU1791
2728:Src/BLDC_controller.c ****         UnitDelay3 = -1;
 4889              		.loc 1 2728 20 is_stmt 0 view .LVU1792
 4890 0e2a 94F99430 		ldrsb	r3, [r4, #148]
 4891              	.LVL485:
2729:Src/BLDC_controller.c ****         if (rtb_LogicalOperator) {
 4892              		.loc 1 2729 9 is_stmt 1 view .LVU1793
2730:Src/BLDC_controller.c ****           UnitDelay3 = 0;
 4893              		.loc 1 2730 9 view .LVU1794
2730:Src/BLDC_controller.c ****           UnitDelay3 = 0;
 4894              		.loc 1 2730 12 is_stmt 0 view .LVU1795
 4895 0e2e 099A     		ldr	r2, [sp, #36]
 4896 0e30 002A     		cmp	r2, #0
 4897 0e32 43D0     		beq	.L319
2731:Src/BLDC_controller.c ****         }
 4898              		.loc 1 2731 11 is_stmt 1 view .LVU1796
 4899              	.LVL486:
2734:Src/BLDC_controller.c ****         if (UnitDelay3 == 0) {
 4900              		.loc 1 2734 9 view .LVU1797
2734:Src/BLDC_controller.c ****         if (UnitDelay3 == 0) {
 4901              		.loc 1 2734 37 is_stmt 0 view .LVU1798
 4902 0e34 0022     		movs	r2, #0
 4903 0e36 84F89420 		strb	r2, [r4, #148]
 4904              	.LVL487:
2735:Src/BLDC_controller.c ****           if (0 != rtb_Sum2_h) {
 4905              		.loc 1 2735 9 is_stmt 1 view .LVU1799
2736:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Vd_Calculation' incorporates:
 4906              		.loc 1 2736 11 view .LVU1800
2736:Src/BLDC_controller.c ****             /* SystemReset for IfAction SubSystem: '<S59>/Vd_Calculation' incorporates:
 4907              		.loc 1 2736 14 is_stmt 0 view .LVU1801
 4908 0e3a 002B     		cmp	r3, #0
 4909 0e3c 42D1     		bne	.L465
 4910              	.LVL488:
 4911              	.L321:
2755:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 152


 4912              		.loc 1 2755 11 is_stmt 1 view .LVU1802
2755:Src/BLDC_controller.c **** 
 4913              		.loc 1 2755 42 is_stmt 0 view .LVU1803
 4914 0e3e B4F87230 		ldrh	r3, [r4, #114]
2755:Src/BLDC_controller.c **** 
 4915              		.loc 1 2755 28 view .LVU1804
 4916 0e42 5B42     		rsbs	r3, r3, #0
2755:Src/BLDC_controller.c **** 
 4917              		.loc 1 2755 26 view .LVU1805
 4918 0e44 1BB2     		sxth	r3, r3
 4919              	.LVL489:
2762:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->i_max;
 4920              		.loc 1 2762 11 is_stmt 1 view .LVU1806
2762:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->i_max;
 4921              		.loc 1 2762 36 is_stmt 0 view .LVU1807
 4922 0e46 B4F96400 		ldrsh	r0, [r4, #100]
2762:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->i_max;
 4923              		.loc 1 2762 14 view .LVU1808
 4924 0e4a 9842     		cmp	r0, r3
 4925 0e4c 04DB     		blt	.L322
2765:Src/BLDC_controller.c ****               /* Switch: '<S75>/Switch' */
 4926              		.loc 1 2765 13 is_stmt 1 view .LVU1809
2765:Src/BLDC_controller.c ****               /* Switch: '<S75>/Switch' */
 4927              		.loc 1 2765 38 is_stmt 0 view .LVU1810
 4928 0e4e B4F96A00 		ldrsh	r0, [r4, #106]
2765:Src/BLDC_controller.c ****               /* Switch: '<S75>/Switch' */
 4929              		.loc 1 2765 16 view .LVU1811
 4930 0e52 9842     		cmp	r0, r3
 4931 0e54 00DC     		bgt	.L322
2755:Src/BLDC_controller.c **** 
 4932              		.loc 1 2755 26 view .LVU1812
 4933 0e56 1846     		mov	r0, r3
 4934              	.L322:
 4935              	.LVL490:
2774:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4936              		.loc 1 2774 11 is_stmt 1 view .LVU1813
2774:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4937              		.loc 1 2774 64 is_stmt 0 view .LVU1814
 4938 0e58 B4F95430 		ldrsh	r3, [r4, #84]
2774:Src/BLDC_controller.c ****           if (rtb_Gain3 > 32767) {
 4939              		.loc 1 2774 21 view .LVU1815
 4940 0e5c C01A     		subs	r0, r0, r3
 4941              	.LVL491:
2775:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4942              		.loc 1 2775 11 is_stmt 1 view .LVU1816
2775:Src/BLDC_controller.c ****             rtb_Gain3 = 32767;
 4943              		.loc 1 2775 14 is_stmt 0 view .LVU1817
 4944 0e5e B0F5004F 		cmp	r0, #32768
 4945 0e62 34DA     		bge	.L404
2778:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4946              		.loc 1 2778 13 is_stmt 1 view .LVU1818
2778:Src/BLDC_controller.c ****               rtb_Gain3 = -32768;
 4947              		.loc 1 2778 16 is_stmt 0 view .LVU1819
 4948 0e64 10F5004F 		cmn	r0, #32768
 4949 0e68 33DA     		bge	.L323
2779:Src/BLDC_controller.c ****             }
 4950              		.loc 1 2779 25 view .LVU1820
ARM GAS  /tmp/cccGHnrd.s 			page 153


 4951 0e6a A448     		ldr	r0, .L477
 4952              	.LVL492:
2779:Src/BLDC_controller.c ****             }
 4953              		.loc 1 2779 25 view .LVU1821
 4954 0e6c 31E0     		b	.L323
 4955              	.LVL493:
 4956              	.L463:
2635:Src/BLDC_controller.c **** 
 4957              		.loc 1 2635 13 is_stmt 1 view .LVU1822
 4958 0e6e 2046     		mov	r0, r4
 4959 0e70 FFF7FEFF 		bl	PI_clamp_fixdt_g_Reset
 4960              	.LVL494:
2635:Src/BLDC_controller.c **** 
 4961              		.loc 1 2635 13 is_stmt 0 view .LVU1823
 4962 0e74 11E7     		b	.L314
 4963              	.LVL495:
 4964              	.L402:
2667:Src/BLDC_controller.c ****           } else {
 4965              		.loc 1 2667 23 view .LVU1824
 4966 0e76 47F6FF70 		movw	r0, #32767
 4967              	.LVL496:
 4968              	.L316:
2675:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Vq_max_M1;
 4969              		.loc 1 2675 11 is_stmt 1 view .LVU1825
2675:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Vq_max_M1;
 4970              		.loc 1 2675 19 is_stmt 0 view .LVU1826
 4971 0e7a B4F96020 		ldrsh	r2, [r4, #96]
2675:Src/BLDC_controller.c ****             rtb_Saturation1 = rtDW->Vq_max_M1;
 4972              		.loc 1 2675 14 view .LVU1827
 4973 0e7e 9045     		cmp	r8, r2
 4974 0e80 00DD     		ble	.L317
2676:Src/BLDC_controller.c ****           } else {
 4975              		.loc 1 2676 29 view .LVU1828
 4976 0e82 9046     		mov	r8, r2
 4977              	.L317:
 4978              	.LVL497:
2684:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Gain5;
 4979              		.loc 1 2684 11 is_stmt 1 view .LVU1829
2684:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Gain5;
 4980              		.loc 1 2684 38 is_stmt 0 view .LVU1830
 4981 0e84 B4F962C0 		ldrsh	ip, [r4, #98]
2684:Src/BLDC_controller.c ****             rtb_Saturation = rtDW->Gain5;
 4982              		.loc 1 2684 14 view .LVU1831
 4983 0e88 9C45     		cmp	ip, r3
 4984 0e8a 00DA     		bge	.L318
2646:Src/BLDC_controller.c **** 
 4985              		.loc 1 2646 26 view .LVU1832
 4986 0e8c 9C46     		mov	ip, r3
 4987              	.L318:
 4988              	.LVL498:
2699:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu, rtb_Saturation1,
 4989              		.loc 1 2699 11 is_stmt 1 view .LVU1833
 4990 0e8e B4F98C30 		ldrsh	r3, [r4, #140]
 4991 0e92 B5F8F020 		ldrh	r2, [r5, #240]
 4992 0e96 B5F8E810 		ldrh	r1, [r5, #232]
 4993 0e9a 0494     		str	r4, [sp, #16]
 4994 0e9c 04F1580E 		add	lr, r4, #88
ARM GAS  /tmp/cccGHnrd.s 			page 154


 4995 0ea0 CDF80CE0 		str	lr, [sp, #12]
 4996 0ea4 4FF0000E 		mov	lr, #0
 4997 0ea8 CDF808E0 		str	lr, [sp, #8]
 4998 0eac CDF804C0 		str	ip, [sp, #4]
 4999 0eb0 CDF80080 		str	r8, [sp]
 5000 0eb4 00B2     		sxth	r0, r0
 5001              	.LVL499:
2699:Src/BLDC_controller.c ****                            rtDW->UnitDelay4_DSTATE_eu, rtb_Saturation1,
 5002              		.loc 1 2699 11 is_stmt 0 view .LVU1834
 5003 0eb6 FFF7FEFF 		bl	PI_clamp_fixdt_k
 5004              	.LVL500:
2707:Src/BLDC_controller.c **** 
 5005              		.loc 1 2707 11 is_stmt 1 view .LVU1835
 5006 0eba B6E7     		b	.L297
 5007              	.LVL501:
 5008              	.L319:
2734:Src/BLDC_controller.c ****         if (UnitDelay3 == 0) {
 5009              		.loc 1 2734 9 view .LVU1836
2734:Src/BLDC_controller.c ****         if (UnitDelay3 == 0) {
 5010              		.loc 1 2734 37 is_stmt 0 view .LVU1837
 5011 0ebc FF23     		movs	r3, #255
 5012 0ebe 84F89430 		strb	r3, [r4, #148]
 5013              	.LVL502:
2735:Src/BLDC_controller.c ****           if (0 != rtb_Sum2_h) {
 5014              		.loc 1 2735 9 is_stmt 1 view .LVU1838
 5015 0ec2 17E5     		b	.L263
 5016              	.LVL503:
 5017              	.L465:
2744:Src/BLDC_controller.c **** 
 5018              		.loc 1 2744 13 view .LVU1839
 5019 0ec4 04F10C00 		add	r0, r4, #12
 5020 0ec8 FFF7FEFF 		bl	PI_clamp_fixdt_Reset
 5021              	.LVL504:
2744:Src/BLDC_controller.c **** 
 5022              		.loc 1 2744 13 is_stmt 0 view .LVU1840
 5023 0ecc B7E7     		b	.L321
 5024              	.LVL505:
 5025              	.L404:
2776:Src/BLDC_controller.c ****           } else {
 5026              		.loc 1 2776 23 view .LVU1841
 5027 0ece 47F6FF70 		movw	r0, #32767
 5028              	.LVL506:
 5029              	.L323:
2784:Src/BLDC_controller.c ****                          rtDW->Vd_max1, rtDW->Gain3, 0, &rtDW->Switch1,
 5030              		.loc 1 2784 11 is_stmt 1 view .LVU1842
 5031 0ed2 B5F8EE20 		ldrh	r2, [r5, #238]
 5032 0ed6 B5F8E610 		ldrh	r1, [r5, #230]
 5033 0eda 04F10C03 		add	r3, r4, #12
 5034 0ede 0493     		str	r3, [sp, #16]
 5035 0ee0 04F15A03 		add	r3, r4, #90
 5036 0ee4 0393     		str	r3, [sp, #12]
 5037 0ee6 0023     		movs	r3, #0
 5038 0ee8 0293     		str	r3, [sp, #8]
 5039 0eea B4F95EC0 		ldrsh	ip, [r4, #94]
 5040 0eee CDF804C0 		str	ip, [sp, #4]
 5041 0ef2 B4F95CC0 		ldrsh	ip, [r4, #92]
 5042 0ef6 CDF800C0 		str	ip, [sp]
ARM GAS  /tmp/cccGHnrd.s 			page 155


 5043 0efa 00B2     		sxth	r0, r0
 5044              	.LVL507:
2784:Src/BLDC_controller.c ****                          rtDW->Vd_max1, rtDW->Gain3, 0, &rtDW->Switch1,
 5045              		.loc 1 2784 11 is_stmt 0 view .LVU1843
 5046 0efc FFF7FEFF 		bl	PI_clamp_fixdt
 5047              	.LVL508:
 5048 0f00 F8E4     		b	.L263
 5049              	.LVL509:
 5050              	.L455:
2813:Src/BLDC_controller.c ****     UnitDelay3 = 0;
 5051              		.loc 1 2813 5 is_stmt 1 view .LVU1844
2813:Src/BLDC_controller.c ****     UnitDelay3 = 0;
 5052              		.loc 1 2813 20 is_stmt 0 view .LVU1845
 5053 0f02 B4F95880 		ldrsh	r8, [r4, #88]
 5054              	.LVL510:
2814:Src/BLDC_controller.c ****   } else {
 5055              		.loc 1 2814 5 is_stmt 1 view .LVU1846
2814:Src/BLDC_controller.c ****   } else {
 5056              		.loc 1 2814 16 is_stmt 0 view .LVU1847
 5057 0f06 0023     		movs	r3, #0
 5058 0f08 FFE4     		b	.L325
 5059              	.LVL511:
 5060              	.L406:
2838:Src/BLDC_controller.c ****     } else {
 5061              		.loc 1 2838 17 view .LVU1848
 5062 0f0a 47F6FF73 		movw	r3, #32767
 5063              	.LVL512:
 5064              	.L328:
2842:Src/BLDC_controller.c ****       }
2843:Src/BLDC_controller.c ****     }
2844:Src/BLDC_controller.c **** 
2845:Src/BLDC_controller.c ****     /* Sum: '<S58>/Sum1' incorporates:
2846:Src/BLDC_controller.c ****      *  Product: '<S58>/Divide2'
2847:Src/BLDC_controller.c ****      *  Product: '<S58>/Divide3'
2848:Src/BLDC_controller.c ****      */
2849:Src/BLDC_controller.c ****     rtb_Sum1_jt = (int16_T)((rtDW->Switch1 * rtDW->r_sin_M1) >> 14) + (int16_T)
 5065              		.loc 1 2849 5 is_stmt 1 view .LVU1849
 5066              		.loc 1 2849 44 is_stmt 0 view .LVU1850
 5067 0f0e 0EFB02F2 		mul	r2, lr, r2
 5068              		.loc 1 2849 19 view .LVU1851
 5069 0f12 42F38F32 		sbfx	r2, r2, #14, #16
2850:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_cos_M1) >> 14);
 5070              		.loc 1 2850 21 view .LVU1852
 5071 0f16 00FB01F1 		mul	r1, r0, r1
2849:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_cos_M1) >> 14);
 5072              		.loc 1 2849 71 view .LVU1853
 5073 0f1a 41F38F31 		sbfx	r1, r1, #14, #16
2849:Src/BLDC_controller.c ****       ((rtDW->Merge * rtDW->r_cos_M1) >> 14);
 5074              		.loc 1 2849 17 view .LVU1854
 5075 0f1e 0A44     		add	r2, r2, r1
 5076              	.LVL513:
2851:Src/BLDC_controller.c ****     if (rtb_Sum1_jt > 32767) {
 5077              		.loc 1 2851 5 is_stmt 1 view .LVU1855
 5078              		.loc 1 2851 8 is_stmt 0 view .LVU1856
 5079 0f20 B2F5004F 		cmp	r2, #32768
 5080 0f24 0DDA     		bge	.L408
2852:Src/BLDC_controller.c ****       rtb_Sum1_jt = 32767;
ARM GAS  /tmp/cccGHnrd.s 			page 156


2853:Src/BLDC_controller.c ****     } else {
2854:Src/BLDC_controller.c ****       if (rtb_Sum1_jt < -32768) {
 5081              		.loc 1 2854 7 is_stmt 1 view .LVU1857
 5082              		.loc 1 2854 10 is_stmt 0 view .LVU1858
 5083 0f26 12F5004F 		cmn	r2, #32768
 5084 0f2a 1EDB     		blt	.L409
2855:Src/BLDC_controller.c ****         rtb_Sum1_jt = -32768;
2856:Src/BLDC_controller.c ****       }
2857:Src/BLDC_controller.c ****     }
2858:Src/BLDC_controller.c **** 
2859:Src/BLDC_controller.c ****     /* Gain: '<S57>/Gain1' incorporates:
2860:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum1'
2861:Src/BLDC_controller.c ****      */
2862:Src/BLDC_controller.c ****     rtb_Sum1_jt *= 14189;
 5085              		.loc 1 2862 5 is_stmt 1 view .LVU1859
 5086              		.loc 1 2862 17 is_stmt 0 view .LVU1860
 5087 0f2c 43F26D71 		movw	r1, #14189
 5088 0f30 01FB02F2 		mul	r2, r1, r2
 5089              	.LVL514:
2863:Src/BLDC_controller.c **** 
2864:Src/BLDC_controller.c ****     /* Sum: '<S57>/Sum6' incorporates:
2865:Src/BLDC_controller.c ****      *  Gain: '<S57>/Gain1'
2866:Src/BLDC_controller.c ****      *  Gain: '<S57>/Gain3'
2867:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum6'
2868:Src/BLDC_controller.c ****      */
2869:Src/BLDC_controller.c ****     rtb_Sum1_jt = (((rtb_Sum1_jt < 0 ? 16383 : 0) + rtb_Sum1_jt) >> 14) -
 5090              		.loc 1 2869 5 is_stmt 1 view .LVU1861
 5091              		.loc 1 2869 46 is_stmt 0 view .LVU1862
 5092 0f34 002A     		cmp	r2, #0
 5093 0f36 01DB     		blt	.L466
 5094              		.loc 1 2869 46 discriminator 2 view .LVU1863
 5095 0f38 0020     		movs	r0, #0
 5096 0f3a 04E0     		b	.L329
 5097              	.L466:
 5098              		.loc 1 2869 46 discriminator 1 view .LVU1864
 5099 0f3c 43F6FF70 		movw	r0, #16383
 5100 0f40 01E0     		b	.L329
 5101              	.L408:
2862:Src/BLDC_controller.c **** 
 5102              		.loc 1 2862 17 view .LVU1865
 5103 0f42 6F4A     		ldr	r2, .L477+4
 5104              	.LVL515:
 5105              		.loc 1 2869 46 discriminator 2 view .LVU1866
 5106 0f44 0020     		movs	r0, #0
 5107              	.LVL516:
 5108              	.L329:
 5109              		.loc 1 2869 51 discriminator 4 view .LVU1867
 5110 0f46 1044     		add	r0, r0, r2
2870:Src/BLDC_controller.c ****       ((int16_T)(((int16_T)rtb_Gain3 < 0) + (int16_T)rtb_Gain3) >> 1);
 5111              		.loc 1 2870 19 view .LVU1868
 5112 0f48 19B2     		sxth	r1, r3
 5113              		.loc 1 2870 38 view .LVU1869
 5114 0f4a C3F3C032 		ubfx	r2, r3, #15, #1
 5115              		.loc 1 2870 45 view .LVU1870
 5116 0f4e 9BB2     		uxth	r3, r3
 5117              	.LVL517:
 5118              		.loc 1 2870 43 view .LVU1871
ARM GAS  /tmp/cccGHnrd.s 			page 157


 5119 0f50 1A44     		add	r2, r2, r3
 5120              		.loc 1 2870 65 view .LVU1872
 5121 0f52 42F34E02 		sbfx	r2, r2, #1, #15
2869:Src/BLDC_controller.c ****       ((int16_T)(((int16_T)rtb_Gain3 < 0) + (int16_T)rtb_Gain3) >> 1);
 5122              		.loc 1 2869 17 discriminator 4 view .LVU1873
 5123 0f56 C2EBA032 		rsb	r2, r2, r0, asr #14
 5124              	.LVL518:
2871:Src/BLDC_controller.c ****     if (rtb_Sum1_jt > 32767) {
 5125              		.loc 1 2871 5 is_stmt 1 view .LVU1874
 5126              		.loc 1 2871 8 is_stmt 0 view .LVU1875
 5127 0f5a B2F5004F 		cmp	r2, #32768
 5128 0f5e 08DA     		bge	.L411
2872:Src/BLDC_controller.c ****       rtb_Sum1_jt = 32767;
2873:Src/BLDC_controller.c ****     } else {
2874:Src/BLDC_controller.c ****       if (rtb_Sum1_jt < -32768) {
 5129              		.loc 1 2874 7 is_stmt 1 view .LVU1876
 5130              		.loc 1 2874 10 is_stmt 0 view .LVU1877
 5131 0f60 12F5004F 		cmn	r2, #32768
 5132 0f64 07DA     		bge	.L330
2875:Src/BLDC_controller.c ****         rtb_Sum1_jt = -32768;
 5133              		.loc 1 2875 21 view .LVU1878
 5134 0f66 654A     		ldr	r2, .L477
 5135              	.LVL519:
 5136              		.loc 1 2875 21 view .LVU1879
 5137 0f68 05E0     		b	.L330
 5138              	.LVL520:
 5139              	.L409:
2862:Src/BLDC_controller.c **** 
 5140              		.loc 1 2862 17 view .LVU1880
 5141 0f6a 664A     		ldr	r2, .L477+8
 5142              	.LVL521:
2869:Src/BLDC_controller.c ****       ((int16_T)(((int16_T)rtb_Gain3 < 0) + (int16_T)rtb_Gain3) >> 1);
 5143              		.loc 1 2869 46 discriminator 1 view .LVU1881
 5144 0f6c 43F6FF70 		movw	r0, #16383
 5145 0f70 E9E7     		b	.L329
 5146              	.LVL522:
 5147              	.L411:
2872:Src/BLDC_controller.c ****     } else {
 5148              		.loc 1 2872 19 view .LVU1882
 5149 0f72 47F6FF72 		movw	r2, #32767
 5150              	.LVL523:
 5151              	.L330:
2876:Src/BLDC_controller.c ****       }
2877:Src/BLDC_controller.c ****     }
2878:Src/BLDC_controller.c **** 
2879:Src/BLDC_controller.c ****     /* Sum: '<S57>/Sum2' incorporates:
2880:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum6'
2881:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum6'
2882:Src/BLDC_controller.c ****      */
2883:Src/BLDC_controller.c ****     rtb_Switch1 = -(int16_T)rtb_Gain3 - (int16_T)rtb_Sum1_jt;
 5152              		.loc 1 2883 5 is_stmt 1 view .LVU1883
 5153              		.loc 1 2883 19 is_stmt 0 view .LVU1884
 5154 0f76 4B42     		rsbs	r3, r1, #0
 5155              		.loc 1 2883 41 view .LVU1885
 5156 0f78 12B2     		sxth	r2, r2
 5157              	.LVL524:
 5158              		.loc 1 2883 41 view .LVU1886
ARM GAS  /tmp/cccGHnrd.s 			page 158


 5159 0f7a 1046     		mov	r0, r2
 5160              		.loc 1 2883 17 view .LVU1887
 5161 0f7c 9B1A     		subs	r3, r3, r2
 5162              	.LVL525:
2884:Src/BLDC_controller.c ****     if (rtb_Switch1 > 32767) {
 5163              		.loc 1 2884 5 is_stmt 1 view .LVU1888
 5164              		.loc 1 2884 8 is_stmt 0 view .LVU1889
 5165 0f7e B3F5004F 		cmp	r3, #32768
 5166 0f82 04DA     		bge	.L413
2885:Src/BLDC_controller.c ****       rtb_Switch1 = 32767;
2886:Src/BLDC_controller.c ****     } else {
2887:Src/BLDC_controller.c ****       if (rtb_Switch1 < -32768) {
 5167              		.loc 1 2887 7 is_stmt 1 view .LVU1890
 5168              		.loc 1 2887 10 is_stmt 0 view .LVU1891
 5169 0f84 13F5004F 		cmn	r3, #32768
 5170 0f88 03DA     		bge	.L331
2888:Src/BLDC_controller.c ****         rtb_Switch1 = -32768;
 5171              		.loc 1 2888 21 view .LVU1892
 5172 0f8a 5C4B     		ldr	r3, .L477
 5173              	.LVL526:
 5174              		.loc 1 2888 21 view .LVU1893
 5175 0f8c 01E0     		b	.L331
 5176              	.LVL527:
 5177              	.L413:
2885:Src/BLDC_controller.c ****       rtb_Switch1 = 32767;
 5178              		.loc 1 2885 19 view .LVU1894
 5179 0f8e 47F6FF73 		movw	r3, #32767
 5180              	.LVL528:
 5181              	.L331:
2889:Src/BLDC_controller.c ****       }
2890:Src/BLDC_controller.c ****     }
2891:Src/BLDC_controller.c **** 
2892:Src/BLDC_controller.c ****     /* MinMax: '<S57>/MinMax1' incorporates:
2893:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum2'
2894:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum6'
2895:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum6'
2896:Src/BLDC_controller.c ****      */
2897:Src/BLDC_controller.c ****     DataTypeConversion2 = (int16_T)rtb_Gain3;
 5182              		.loc 1 2897 5 is_stmt 1 view .LVU1895
2898:Src/BLDC_controller.c ****     if (!((int16_T)rtb_Gain3 < (int16_T)rtb_Sum1_jt)) {
 5183              		.loc 1 2898 5 view .LVU1896
 5184              		.loc 1 2898 8 is_stmt 0 view .LVU1897
 5185 0f92 9142     		cmp	r1, r2
 5186 0f94 13DA     		bge	.L415
2897:Src/BLDC_controller.c ****     if (!((int16_T)rtb_Gain3 < (int16_T)rtb_Sum1_jt)) {
 5187              		.loc 1 2897 25 view .LVU1898
 5188 0f96 8C46     		mov	ip, r1
 5189              	.L332:
 5190              	.LVL529:
2899:Src/BLDC_controller.c ****       DataTypeConversion2 = (int16_T)rtb_Sum1_jt;
2900:Src/BLDC_controller.c ****     }
2901:Src/BLDC_controller.c **** 
2902:Src/BLDC_controller.c ****     if (!(DataTypeConversion2 < (int16_T)rtb_Switch1)) {
 5191              		.loc 1 2902 5 is_stmt 1 view .LVU1899
 5192              		.loc 1 2902 33 is_stmt 0 view .LVU1900
 5193 0f98 1BB2     		sxth	r3, r3
 5194              	.LVL530:
ARM GAS  /tmp/cccGHnrd.s 			page 159


 5195              		.loc 1 2902 8 view .LVU1901
 5196 0f9a 6345     		cmp	r3, ip
 5197 0f9c 00DC     		bgt	.L333
2903:Src/BLDC_controller.c ****       DataTypeConversion2 = (int16_T)rtb_Switch1;
 5198              		.loc 1 2903 27 view .LVU1902
 5199 0f9e 9C46     		mov	ip, r3
 5200              	.LVL531:
 5201              	.L333:
2904:Src/BLDC_controller.c ****     }
2905:Src/BLDC_controller.c **** 
2906:Src/BLDC_controller.c ****     /* MinMax: '<S57>/MinMax2' incorporates:
2907:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum2'
2908:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum6'
2909:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum6'
2910:Src/BLDC_controller.c ****      */
2911:Src/BLDC_controller.c ****     rtb_Saturation1 = (int16_T)rtb_Gain3;
 5202              		.loc 1 2911 5 is_stmt 1 view .LVU1903
2912:Src/BLDC_controller.c ****     if (!((int16_T)rtb_Gain3 > (int16_T)rtb_Sum1_jt)) {
 5203              		.loc 1 2912 5 view .LVU1904
 5204              		.loc 1 2912 8 is_stmt 0 view .LVU1905
 5205 0fa0 9142     		cmp	r1, r2
 5206 0fa2 00DD     		ble	.L334
2911:Src/BLDC_controller.c ****     if (!((int16_T)rtb_Gain3 > (int16_T)rtb_Sum1_jt)) {
 5207              		.loc 1 2911 21 view .LVU1906
 5208 0fa4 0A46     		mov	r2, r1
 5209              	.L334:
 5210              	.LVL532:
2913:Src/BLDC_controller.c ****       rtb_Saturation1 = (int16_T)rtb_Sum1_jt;
2914:Src/BLDC_controller.c ****     }
2915:Src/BLDC_controller.c **** 
2916:Src/BLDC_controller.c ****     if (!(rtb_Saturation1 > (int16_T)rtb_Switch1)) {
 5211              		.loc 1 2916 5 is_stmt 1 view .LVU1907
 5212              		.loc 1 2916 8 is_stmt 0 view .LVU1908
 5213 0fa6 9342     		cmp	r3, r2
 5214 0fa8 00DB     		blt	.L335
2917:Src/BLDC_controller.c ****       rtb_Saturation1 = (int16_T)rtb_Switch1;
 5215              		.loc 1 2917 23 view .LVU1909
 5216 0faa 1A46     		mov	r2, r3
 5217              	.LVL533:
 5218              	.L335:
2918:Src/BLDC_controller.c ****     }
2919:Src/BLDC_controller.c **** 
2920:Src/BLDC_controller.c ****     /* Sum: '<S57>/Add' incorporates:
2921:Src/BLDC_controller.c ****      *  MinMax: '<S57>/MinMax1'
2922:Src/BLDC_controller.c ****      *  MinMax: '<S57>/MinMax2'
2923:Src/BLDC_controller.c ****      */
2924:Src/BLDC_controller.c ****     rtb_Sum1 = DataTypeConversion2 + rtb_Saturation1;
 5219              		.loc 1 2924 5 is_stmt 1 view .LVU1910
 5220              		.loc 1 2924 14 is_stmt 0 view .LVU1911
 5221 0fac 6244     		add	r2, r2, ip
 5222              	.LVL534:
2925:Src/BLDC_controller.c ****     if (rtb_Sum1 > 32767) {
 5223              		.loc 1 2925 5 is_stmt 1 view .LVU1912
 5224              		.loc 1 2925 8 is_stmt 0 view .LVU1913
 5225 0fae B2F5004F 		cmp	r2, #32768
 5226 0fb2 06DA     		bge	.L418
2926:Src/BLDC_controller.c ****       rtb_Sum1 = 32767;
ARM GAS  /tmp/cccGHnrd.s 			page 160


2927:Src/BLDC_controller.c ****     } else {
2928:Src/BLDC_controller.c ****       if (rtb_Sum1 < -32768) {
 5227              		.loc 1 2928 7 is_stmt 1 view .LVU1914
 5228              		.loc 1 2928 10 is_stmt 0 view .LVU1915
 5229 0fb4 12F5004F 		cmn	r2, #32768
 5230 0fb8 05DA     		bge	.L336
2929:Src/BLDC_controller.c ****         rtb_Sum1 = -32768;
 5231              		.loc 1 2929 18 view .LVU1916
 5232 0fba 504A     		ldr	r2, .L477
 5233              	.LVL535:
 5234              		.loc 1 2929 18 view .LVU1917
 5235 0fbc 03E0     		b	.L336
 5236              	.LVL536:
 5237              	.L415:
2899:Src/BLDC_controller.c ****     }
 5238              		.loc 1 2899 27 view .LVU1918
 5239 0fbe 9446     		mov	ip, r2
 5240 0fc0 EAE7     		b	.L332
 5241              	.LVL537:
 5242              	.L418:
2926:Src/BLDC_controller.c ****       rtb_Sum1 = 32767;
 5243              		.loc 1 2926 16 view .LVU1919
 5244 0fc2 47F6FF72 		movw	r2, #32767
 5245              	.LVL538:
 5246              	.L336:
2930:Src/BLDC_controller.c ****       }
2931:Src/BLDC_controller.c ****     }
2932:Src/BLDC_controller.c **** 
2933:Src/BLDC_controller.c ****     /* Gain: '<S57>/Gain2' incorporates:
2934:Src/BLDC_controller.c ****      *  Sum: '<S57>/Add'
2935:Src/BLDC_controller.c ****      */
2936:Src/BLDC_controller.c ****     rtb_Merge1 = (int16_T)(rtb_Sum1 >> 1);
 5247              		.loc 1 2936 5 is_stmt 1 view .LVU1920
 5248              		.loc 1 2936 16 is_stmt 0 view .LVU1921
 5249 0fc6 42F34F02 		sbfx	r2, r2, #1, #16
 5250              	.LVL539:
2937:Src/BLDC_controller.c **** 
2938:Src/BLDC_controller.c ****     /* Sum: '<S57>/Add1' incorporates:
2939:Src/BLDC_controller.c ****      *  Sum: '<S58>/Sum6'
2940:Src/BLDC_controller.c ****      */
2941:Src/BLDC_controller.c ****     rtb_Gain3 = (int16_T)rtb_Gain3 - rtb_Merge1;
 5251              		.loc 1 2941 5 is_stmt 1 view .LVU1922
 5252              		.loc 1 2941 15 is_stmt 0 view .LVU1923
 5253 0fca 891A     		subs	r1, r1, r2
 5254              	.LVL540:
2942:Src/BLDC_controller.c ****     if (rtb_Gain3 > 32767) {
 5255              		.loc 1 2942 5 is_stmt 1 view .LVU1924
 5256              		.loc 1 2942 8 is_stmt 0 view .LVU1925
 5257 0fcc B1F5004F 		cmp	r1, #32768
 5258 0fd0 04DA     		bge	.L420
2943:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
2944:Src/BLDC_controller.c ****     } else {
2945:Src/BLDC_controller.c ****       if (rtb_Gain3 < -32768) {
 5259              		.loc 1 2945 7 is_stmt 1 view .LVU1926
 5260              		.loc 1 2945 10 is_stmt 0 view .LVU1927
 5261 0fd2 11F5004F 		cmn	r1, #32768
 5262 0fd6 03DA     		bge	.L337
ARM GAS  /tmp/cccGHnrd.s 			page 161


2946:Src/BLDC_controller.c ****         rtb_Gain3 = -32768;
 5263              		.loc 1 2946 19 view .LVU1928
 5264 0fd8 4849     		ldr	r1, .L477
 5265              	.LVL541:
 5266              		.loc 1 2946 19 view .LVU1929
 5267 0fda 01E0     		b	.L337
 5268              	.LVL542:
 5269              	.L420:
2943:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
 5270              		.loc 1 2943 17 view .LVU1930
 5271 0fdc 47F6FF71 		movw	r1, #32767
 5272              	.LVL543:
 5273              	.L337:
2947:Src/BLDC_controller.c ****       }
2948:Src/BLDC_controller.c ****     }
2949:Src/BLDC_controller.c **** 
2950:Src/BLDC_controller.c ****     /* Gain: '<S57>/Gain4' incorporates:
2951:Src/BLDC_controller.c ****      *  Sum: '<S57>/Add1'
2952:Src/BLDC_controller.c ****      */
2953:Src/BLDC_controller.c ****     rtDW->Gain4_e[0] = (int16_T)((18919 * rtb_Gain3) >> 14);
 5274              		.loc 1 2953 5 is_stmt 1 view .LVU1931
 5275              		.loc 1 2953 41 is_stmt 0 view .LVU1932
 5276 0fe0 44F6E71C 		movw	ip, #18919
 5277              	.LVL544:
 5278              		.loc 1 2953 41 view .LVU1933
 5279 0fe4 0CFB01F1 		mul	r1, ip, r1
 5280              	.LVL545:
 5281              		.loc 1 2953 24 view .LVU1934
 5282 0fe8 41F38F31 		sbfx	r1, r1, #14, #16
 5283              		.loc 1 2953 22 view .LVU1935
 5284 0fec A4F84C10 		strh	r1, [r4, #76]	@ movhi
2954:Src/BLDC_controller.c **** 
2955:Src/BLDC_controller.c ****     /* Sum: '<S57>/Add1' incorporates:
2956:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum6'
2957:Src/BLDC_controller.c ****      */
2958:Src/BLDC_controller.c ****     rtb_Gain3 = (int16_T)rtb_Sum1_jt - rtb_Merge1;
 5285              		.loc 1 2958 5 is_stmt 1 view .LVU1936
 5286              		.loc 1 2958 15 is_stmt 0 view .LVU1937
 5287 0ff0 801A     		subs	r0, r0, r2
 5288              	.LVL546:
2959:Src/BLDC_controller.c ****     if (rtb_Gain3 > 32767) {
 5289              		.loc 1 2959 5 is_stmt 1 view .LVU1938
 5290              		.loc 1 2959 8 is_stmt 0 view .LVU1939
 5291 0ff2 B0F5004F 		cmp	r0, #32768
 5292 0ff6 04DA     		bge	.L422
2960:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
2961:Src/BLDC_controller.c ****     } else {
2962:Src/BLDC_controller.c ****       if (rtb_Gain3 < -32768) {
 5293              		.loc 1 2962 7 is_stmt 1 view .LVU1940
 5294              		.loc 1 2962 10 is_stmt 0 view .LVU1941
 5295 0ff8 10F5004F 		cmn	r0, #32768
 5296 0ffc 03DA     		bge	.L338
2963:Src/BLDC_controller.c ****         rtb_Gain3 = -32768;
 5297              		.loc 1 2963 19 view .LVU1942
 5298 0ffe 3F48     		ldr	r0, .L477
 5299              	.LVL547:
 5300              		.loc 1 2963 19 view .LVU1943
ARM GAS  /tmp/cccGHnrd.s 			page 162


 5301 1000 01E0     		b	.L338
 5302              	.LVL548:
 5303              	.L422:
2960:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
 5304              		.loc 1 2960 17 view .LVU1944
 5305 1002 47F6FF70 		movw	r0, #32767
 5306              	.LVL549:
 5307              	.L338:
2964:Src/BLDC_controller.c ****       }
2965:Src/BLDC_controller.c ****     }
2966:Src/BLDC_controller.c **** 
2967:Src/BLDC_controller.c ****     /* Gain: '<S57>/Gain4' incorporates:
2968:Src/BLDC_controller.c ****      *  Sum: '<S57>/Add1'
2969:Src/BLDC_controller.c ****      */
2970:Src/BLDC_controller.c ****     rtDW->Gain4_e[1] = (int16_T)((18919 * rtb_Gain3) >> 14);
 5308              		.loc 1 2970 5 is_stmt 1 view .LVU1945
 5309              		.loc 1 2970 41 is_stmt 0 view .LVU1946
 5310 1006 44F6E711 		movw	r1, #18919
 5311 100a 01FB00F0 		mul	r0, r1, r0
 5312              	.LVL550:
 5313              		.loc 1 2970 24 view .LVU1947
 5314 100e 40F38F30 		sbfx	r0, r0, #14, #16
 5315              		.loc 1 2970 22 view .LVU1948
 5316 1012 A4F84E00 		strh	r0, [r4, #78]	@ movhi
2971:Src/BLDC_controller.c **** 
2972:Src/BLDC_controller.c ****     /* Sum: '<S57>/Add1' incorporates:
2973:Src/BLDC_controller.c ****      *  Sum: '<S57>/Sum2'
2974:Src/BLDC_controller.c ****      */
2975:Src/BLDC_controller.c ****     rtb_Gain3 = (int16_T)rtb_Switch1 - rtb_Merge1;
 5317              		.loc 1 2975 5 is_stmt 1 view .LVU1949
 5318              		.loc 1 2975 15 is_stmt 0 view .LVU1950
 5319 1016 9B1A     		subs	r3, r3, r2
 5320              	.LVL551:
2976:Src/BLDC_controller.c ****     if (rtb_Gain3 > 32767) {
 5321              		.loc 1 2976 5 is_stmt 1 view .LVU1951
 5322              		.loc 1 2976 8 is_stmt 0 view .LVU1952
 5323 1018 B3F5004F 		cmp	r3, #32768
 5324 101c 04DA     		bge	.L424
2977:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
2978:Src/BLDC_controller.c ****     } else {
2979:Src/BLDC_controller.c ****       if (rtb_Gain3 < -32768) {
 5325              		.loc 1 2979 7 is_stmt 1 view .LVU1953
 5326              		.loc 1 2979 10 is_stmt 0 view .LVU1954
 5327 101e 13F5004F 		cmn	r3, #32768
 5328 1022 03DA     		bge	.L339
2980:Src/BLDC_controller.c ****         rtb_Gain3 = -32768;
 5329              		.loc 1 2980 19 view .LVU1955
 5330 1024 354B     		ldr	r3, .L477
 5331              	.LVL552:
 5332              		.loc 1 2980 19 view .LVU1956
 5333 1026 01E0     		b	.L339
 5334              	.LVL553:
 5335              	.L424:
2977:Src/BLDC_controller.c ****       rtb_Gain3 = 32767;
 5336              		.loc 1 2977 17 view .LVU1957
 5337 1028 47F6FF73 		movw	r3, #32767
 5338              	.LVL554:
ARM GAS  /tmp/cccGHnrd.s 			page 163


 5339              	.L339:
2981:Src/BLDC_controller.c ****       }
2982:Src/BLDC_controller.c ****     }
2983:Src/BLDC_controller.c **** 
2984:Src/BLDC_controller.c ****     /* Gain: '<S57>/Gain4' incorporates:
2985:Src/BLDC_controller.c ****      *  Sum: '<S57>/Add1'
2986:Src/BLDC_controller.c ****      */
2987:Src/BLDC_controller.c ****     rtDW->Gain4_e[2] = (int16_T)((18919 * rtb_Gain3) >> 14);
 5340              		.loc 1 2987 5 is_stmt 1 view .LVU1958
 5341              		.loc 1 2987 41 is_stmt 0 view .LVU1959
 5342 102c 44F6E712 		movw	r2, #18919
 5343              	.LVL555:
 5344              		.loc 1 2987 41 view .LVU1960
 5345 1030 02FB03F3 		mul	r3, r2, r3
 5346              	.LVL556:
 5347              		.loc 1 2987 24 view .LVU1961
 5348 1034 43F38F33 		sbfx	r3, r3, #14, #16
 5349              		.loc 1 2987 22 view .LVU1962
 5350 1038 A4F85030 		strh	r3, [r4, #80]	@ movhi
 5351              	.LVL557:
 5352              	.L327:
2988:Src/BLDC_controller.c **** 
2989:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S7>/Clarke_Park_Transform_Inverse' */
2990:Src/BLDC_controller.c ****   }
2991:Src/BLDC_controller.c **** 
2992:Src/BLDC_controller.c ****   /* End of If: '<S7>/If2' */
2993:Src/BLDC_controller.c **** 
2994:Src/BLDC_controller.c ****   /* If: '<S8>/If' incorporates:
2995:Src/BLDC_controller.c ****    *  Constant: '<S11>/vec_hallToPos'
2996:Src/BLDC_controller.c ****    *  Constant: '<S1>/z_ctrlTypSel'
2997:Src/BLDC_controller.c ****    *  Constant: '<S8>/CTRL_COMM2'
2998:Src/BLDC_controller.c ****    *  Constant: '<S8>/CTRL_COMM3'
2999:Src/BLDC_controller.c ****    *  Inport: '<S95>/V_phaABC_FOC_in'
3000:Src/BLDC_controller.c ****    *  Logic: '<S8>/Logical Operator1'
3001:Src/BLDC_controller.c ****    *  Logic: '<S8>/Logical Operator2'
3002:Src/BLDC_controller.c ****    *  LookupNDDirect: '<S94>/z_commutMap_M1'
3003:Src/BLDC_controller.c ****    *  RelationalOperator: '<S8>/Relational Operator1'
3004:Src/BLDC_controller.c ****    *  RelationalOperator: '<S8>/Relational Operator2'
3005:Src/BLDC_controller.c ****    *  Selector: '<S11>/Selector'
3006:Src/BLDC_controller.c ****    *
3007:Src/BLDC_controller.c ****    * About '<S94>/z_commutMap_M1':
3008:Src/BLDC_controller.c ****    *  2-dimensional Direct Look-Up returning a Column
3009:Src/BLDC_controller.c ****    */
3010:Src/BLDC_controller.c ****   if (rtb_LogicalOperator && (rtP->z_ctrlTypSel == 2)) {
 5353              		.loc 1 3010 3 is_stmt 1 view .LVU1963
 5354              		.loc 1 3010 6 is_stmt 0 view .LVU1964
 5355 103c 099B     		ldr	r3, [sp, #36]
 5356 103e 2BB1     		cbz	r3, .L340
 5357              		.loc 1 3010 34 discriminator 1 view .LVU1965
 5358 1040 95F8F930 		ldrb	r3, [r5, #249]	@ zero_extendqisi2
 5359              		.loc 1 3010 27 discriminator 1 view .LVU1966
 5360 1044 022B     		cmp	r3, #2
 5361 1046 0CD0     		beq	.L467
3011:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S8>/FOC_Method' incorporates:
3012:Src/BLDC_controller.c ****      *  ActionPort: '<S95>/Action Port'
3013:Src/BLDC_controller.c ****      */
3014:Src/BLDC_controller.c ****     DataTypeConversion2 = rtDW->Gain4_e[0];
ARM GAS  /tmp/cccGHnrd.s 			page 164


3015:Src/BLDC_controller.c ****     rtb_Saturation1 = rtDW->Gain4_e[1];
3016:Src/BLDC_controller.c ****     rtb_Merge1 = rtDW->Gain4_e[2];
3017:Src/BLDC_controller.c **** 
3018:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S8>/FOC_Method' */
3019:Src/BLDC_controller.c ****   } else if (rtb_LogicalOperator && (rtP->z_ctrlTypSel == 1)) {
 5362              		.loc 1 3019 10 is_stmt 1 view .LVU1967
 5363              		.loc 1 3019 34 is_stmt 0 discriminator 1 view .LVU1968
 5364 1048 012B     		cmp	r3, #1
 5365 104a 11D0     		beq	.L468
 5366              	.L340:
3020:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S8>/SIN_Method' incorporates:
3021:Src/BLDC_controller.c ****      *  ActionPort: '<S96>/Action Port'
3022:Src/BLDC_controller.c ****      */
3023:Src/BLDC_controller.c ****     /* Switch: '<S97>/Switch_PhaAdv' incorporates:
3024:Src/BLDC_controller.c ****      *  Constant: '<S97>/b_fieldWeakEna'
3025:Src/BLDC_controller.c ****      *  Product: '<S98>/Divide2'
3026:Src/BLDC_controller.c ****      *  Product: '<S98>/Divide3'
3027:Src/BLDC_controller.c ****      *  Sum: '<S98>/Sum3'
3028:Src/BLDC_controller.c ****      */
3029:Src/BLDC_controller.c ****     if (rtP->b_fieldWeakEna) {
3030:Src/BLDC_controller.c ****       /* Sum: '<S97>/Sum3' incorporates:
3031:Src/BLDC_controller.c ****        *  Product: '<S97>/Product2'
3032:Src/BLDC_controller.c ****        */
3033:Src/BLDC_controller.c ****       DataTypeConversion2 = (int16_T)((int16_T)((int16_T)(rtDW->Divide3 *
3034:Src/BLDC_controller.c ****         rtDW->Switch2_e) << 2) + rtb_Merge_m);
3035:Src/BLDC_controller.c ****       DataTypeConversion2 -= (int16_T)((int16_T)((int16_T)div_nde_s32_floor
3036:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
3037:Src/BLDC_controller.c ****     } else {
3038:Src/BLDC_controller.c ****       DataTypeConversion2 = rtb_Merge_m;
3039:Src/BLDC_controller.c ****     }
3040:Src/BLDC_controller.c **** 
3041:Src/BLDC_controller.c ****     /* End of Switch: '<S97>/Switch_PhaAdv' */
3042:Src/BLDC_controller.c **** 
3043:Src/BLDC_controller.c ****     /* PreLookup: '<S96>/a_elecAngle_XA' */
3044:Src/BLDC_controller.c ****     Sum = plook_u8s16_evencka(DataTypeConversion2, 0, 128U, 180U);
3045:Src/BLDC_controller.c **** 
3046:Src/BLDC_controller.c ****     /* Product: '<S96>/Divide2' incorporates:
3047:Src/BLDC_controller.c ****      *  Interpolation_n-D: '<S96>/r_sin3PhaA_M1'
3048:Src/BLDC_controller.c ****      *  Interpolation_n-D: '<S96>/r_sin3PhaB_M1'
3049:Src/BLDC_controller.c ****      *  Interpolation_n-D: '<S96>/r_sin3PhaC_M1'
3050:Src/BLDC_controller.c ****      */
3051:Src/BLDC_controller.c ****     DataTypeConversion2 = (int16_T)((rtb_Saturation *
3052:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaA_M1_Table[Sum]) >> 14);
3053:Src/BLDC_controller.c ****     rtb_Saturation1 = (int16_T)((rtb_Saturation *
3054:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaB_M1_Table[Sum]) >> 14);
3055:Src/BLDC_controller.c ****     rtb_Merge1 = (int16_T)((rtb_Saturation * rtConstP.r_sin3PhaC_M1_Table[Sum]) >>
3056:Src/BLDC_controller.c ****       14);
3057:Src/BLDC_controller.c **** 
3058:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S8>/SIN_Method' */
3059:Src/BLDC_controller.c ****   } else {
3060:Src/BLDC_controller.c ****     /* Outputs for IfAction SubSystem: '<S8>/COM_Method' incorporates:
3061:Src/BLDC_controller.c ****      *  ActionPort: '<S94>/Action Port'
3062:Src/BLDC_controller.c ****      */
3063:Src/BLDC_controller.c ****     if (rtConstP.vec_hallToPos_Value[Sum] > 5) {
 5367              		.loc 1 3063 5 is_stmt 1 view .LVU1969
 5368              		.loc 1 3063 37 is_stmt 0 view .LVU1970
 5369 104c 2E4B     		ldr	r3, .L477+12
ARM GAS  /tmp/cccGHnrd.s 			page 165


 5370 104e 079A     		ldr	r2, [sp, #28]
 5371 1050 1344     		add	r3, r3, r2
 5372 1052 93F98807 		ldrsb	r0, [r3, #1928]
 5373              		.loc 1 3063 8 view .LVU1971
 5374 1056 0528     		cmp	r0, #5
 5375 1058 58DC     		bgt	.L427
3064:Src/BLDC_controller.c ****       /* LookupNDDirect: '<S94>/z_commutMap_M1'
3065:Src/BLDC_controller.c ****        *
3066:Src/BLDC_controller.c ****        * About '<S94>/z_commutMap_M1':
3067:Src/BLDC_controller.c ****        *  2-dimensional Direct Look-Up returning a Column
3068:Src/BLDC_controller.c ****        */
3069:Src/BLDC_controller.c ****       rtb_Sum2_h = 5;
3070:Src/BLDC_controller.c ****     } else if (rtConstP.vec_hallToPos_Value[Sum] < 0) {
 5376              		.loc 1 3070 12 is_stmt 1 view .LVU1972
 5377              		.loc 1 3070 15 is_stmt 0 view .LVU1973
 5378 105a 0028     		cmp	r0, #0
 5379 105c 57DA     		bge	.L344
3071:Src/BLDC_controller.c ****       /* LookupNDDirect: '<S94>/z_commutMap_M1'
3072:Src/BLDC_controller.c ****        *
3073:Src/BLDC_controller.c ****        * About '<S94>/z_commutMap_M1':
3074:Src/BLDC_controller.c ****        *  2-dimensional Direct Look-Up returning a Column
3075:Src/BLDC_controller.c ****        */
3076:Src/BLDC_controller.c ****       rtb_Sum2_h = 0;
 5380              		.loc 1 3076 18 view .LVU1974
 5381 105e 0020     		movs	r0, #0
 5382 1060 55E0     		b	.L344
 5383              	.L467:
3014:Src/BLDC_controller.c ****     rtb_Saturation1 = rtDW->Gain4_e[1];
 5384              		.loc 1 3014 5 is_stmt 1 view .LVU1975
3014:Src/BLDC_controller.c ****     rtb_Saturation1 = rtDW->Gain4_e[1];
 5385              		.loc 1 3014 25 is_stmt 0 view .LVU1976
 5386 1062 B4F94C10 		ldrsh	r1, [r4, #76]
 5387              	.LVL558:
3015:Src/BLDC_controller.c ****     rtb_Merge1 = rtDW->Gain4_e[2];
 5388              		.loc 1 3015 5 is_stmt 1 view .LVU1977
3015:Src/BLDC_controller.c ****     rtb_Merge1 = rtDW->Gain4_e[2];
 5389              		.loc 1 3015 21 is_stmt 0 view .LVU1978
 5390 1066 B4F94E20 		ldrsh	r2, [r4, #78]
 5391              	.LVL559:
3016:Src/BLDC_controller.c **** 
 5392              		.loc 1 3016 5 is_stmt 1 view .LVU1979
3016:Src/BLDC_controller.c **** 
 5393              		.loc 1 3016 16 is_stmt 0 view .LVU1980
 5394 106a B4F95030 		ldrsh	r3, [r4, #80]
 5395              	.LVL560:
3016:Src/BLDC_controller.c **** 
 5396              		.loc 1 3016 16 view .LVU1981
 5397 106e 6AE0     		b	.L342
 5398              	.LVL561:
 5399              	.L468:
3029:Src/BLDC_controller.c ****       /* Sum: '<S97>/Sum3' incorporates:
 5400              		.loc 1 3029 5 is_stmt 1 view .LVU1982
3029:Src/BLDC_controller.c ****       /* Sum: '<S97>/Sum3' incorporates:
 5401              		.loc 1 3029 12 is_stmt 0 view .LVU1983
 5402 1070 95F8FE30 		ldrb	r3, [r5, #254]	@ zero_extendqisi2
3029:Src/BLDC_controller.c ****       /* Sum: '<S97>/Sum3' incorporates:
 5403              		.loc 1 3029 8 view .LVU1984
ARM GAS  /tmp/cccGHnrd.s 			page 166


 5404 1074 002B     		cmp	r3, #0
 5405 1076 3FD0     		beq	.L426
3033:Src/BLDC_controller.c ****         rtDW->Switch2_e) << 2) + rtb_Merge_m);
 5406              		.loc 1 3033 7 is_stmt 1 view .LVU1985
3033:Src/BLDC_controller.c ****         rtDW->Switch2_e) << 2) + rtb_Merge_m);
 5407              		.loc 1 3033 63 is_stmt 0 view .LVU1986
 5408 1078 B4F87200 		ldrh	r0, [r4, #114]
3034:Src/BLDC_controller.c ****       DataTypeConversion2 -= (int16_T)((int16_T)((int16_T)div_nde_s32_floor
 5409              		.loc 1 3034 13 view .LVU1987
 5410 107c 94F98E30 		ldrsb	r3, [r4, #142]
 5411 1080 9BB2     		uxth	r3, r3
3033:Src/BLDC_controller.c ****         rtDW->Switch2_e) << 2) + rtb_Merge_m);
 5412              		.loc 1 3033 73 view .LVU1988
 5413 1082 03FB00F0 		mul	r0, r3, r0
 5414 1086 80B2     		uxth	r0, r0
3033:Src/BLDC_controller.c ****         rtDW->Switch2_e) << 2) + rtb_Merge_m);
 5415              		.loc 1 3033 39 view .LVU1989
 5416 1088 8000     		lsls	r0, r0, #2
 5417 108a 80B2     		uxth	r0, r0
3034:Src/BLDC_controller.c ****       DataTypeConversion2 -= (int16_T)((int16_T)((int16_T)div_nde_s32_floor
 5418              		.loc 1 3034 32 view .LVU1990
 5419 108c 089B     		ldr	r3, [sp, #32]
 5420 108e 1844     		add	r0, r0, r3
 5421 1090 85B2     		uxth	r5, r0
 5422              	.LVL562:
3035:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5423              		.loc 1 3035 7 is_stmt 1 view .LVU1991
3035:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5424              		.loc 1 3035 59 is_stmt 0 view .LVU1992
 5425 1092 4FF4B441 		mov	r1, #23040
 5426 1096 00B2     		sxth	r0, r0
3035:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5427              		.loc 1 3035 59 view .LVU1993
 5428 1098 FFF7FEFF 		bl	div_nde_s32_floor
 5429              	.LVL563:
3035:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5430              		.loc 1 3035 50 discriminator 1 view .LVU1994
 5431 109c 80B2     		uxth	r0, r0
3036:Src/BLDC_controller.c ****     } else {
 5432              		.loc 1 3036 38 view .LVU1995
 5433 109e 00EB4000 		add	r0, r0, r0, lsl #1
 5434 10a2 C0EB0013 		rsb	r3, r0, r0, lsl #4
 5435 10a6 DB00     		lsls	r3, r3, #3
 5436 10a8 9BB2     		uxth	r3, r3
3035:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5437              		.loc 1 3035 30 view .LVU1996
 5438 10aa 9B01     		lsls	r3, r3, #6
 5439 10ac 9BB2     		uxth	r3, r3
3035:Src/BLDC_controller.c ****         (DataTypeConversion2, 23040) * 360) << 6);
 5440              		.loc 1 3035 27 view .LVU1997
 5441 10ae E81A     		subs	r0, r5, r3
 5442 10b0 00B2     		sxth	r0, r0
 5443              	.LVL564:
 5444              	.L343:
3044:Src/BLDC_controller.c **** 
 5445              		.loc 1 3044 5 is_stmt 1 view .LVU1998
3044:Src/BLDC_controller.c **** 
ARM GAS  /tmp/cccGHnrd.s 			page 167


 5446              		.loc 1 3044 11 is_stmt 0 view .LVU1999
 5447 10b2 B423     		movs	r3, #180
 5448 10b4 8022     		movs	r2, #128
 5449 10b6 0021     		movs	r1, #0
 5450 10b8 FFF7FEFF 		bl	plook_u8s16_evencka
 5451              	.LVL565:
3051:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaA_M1_Table[Sum]) >> 14);
 5452              		.loc 1 3051 5 is_stmt 1 view .LVU2000
3052:Src/BLDC_controller.c ****     rtb_Saturation1 = (int16_T)((rtb_Saturation *
 5453              		.loc 1 3052 35 is_stmt 0 view .LVU2001
 5454 10bc 124B     		ldr	r3, .L477+12
 5455 10be 00F5B472 		add	r2, r0, #360
 5456 10c2 03EB4202 		add	r2, r3, r2, lsl #1
 5457 10c6 B2F90410 		ldrsh	r1, [r2, #4]
3051:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaA_M1_Table[Sum]) >> 14);
 5458              		.loc 1 3051 53 view .LVU2002
 5459 10ca 01FB08F1 		mul	r1, r1, r8
3051:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaA_M1_Table[Sum]) >> 14);
 5460              		.loc 1 3051 25 view .LVU2003
 5461 10ce 41F38F31 		sbfx	r1, r1, #14, #16
 5462              	.LVL566:
3053:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaB_M1_Table[Sum]) >> 14);
 5463              		.loc 1 3053 5 is_stmt 1 view .LVU2004
3054:Src/BLDC_controller.c ****     rtb_Merge1 = (int16_T)((rtb_Saturation * rtConstP.r_sin3PhaC_M1_Table[Sum]) >>
 5464              		.loc 1 3054 35 is_stmt 0 view .LVU2005
 5465 10d2 00F50772 		add	r2, r0, #540
 5466 10d6 03EB4202 		add	r2, r3, r2, lsl #1
 5467 10da B2F90620 		ldrsh	r2, [r2, #6]
3053:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaB_M1_Table[Sum]) >> 14);
 5468              		.loc 1 3053 49 view .LVU2006
 5469 10de 02FB08F2 		mul	r2, r2, r8
3053:Src/BLDC_controller.c ****       rtConstP.r_sin3PhaB_M1_Table[Sum]) >> 14);
 5470              		.loc 1 3053 21 view .LVU2007
 5471 10e2 42F38F32 		sbfx	r2, r2, #14, #16
 5472              	.LVL567:
3055:Src/BLDC_controller.c ****       14);
 5473              		.loc 1 3055 5 is_stmt 1 view .LVU2008
3055:Src/BLDC_controller.c ****       14);
 5474              		.loc 1 3055 74 is_stmt 0 view .LVU2009
 5475 10e6 00F53570 		add	r0, r0, #724
 5476              	.LVL568:
3055:Src/BLDC_controller.c ****       14);
 5477              		.loc 1 3055 74 view .LVU2010
 5478 10ea 33F91030 		ldrsh	r3, [r3, r0, lsl #1]
3055:Src/BLDC_controller.c ****       14);
 5479              		.loc 1 3055 44 view .LVU2011
 5480 10ee 03FB08F3 		mul	r3, r3, r8
3055:Src/BLDC_controller.c ****       14);
 5481              		.loc 1 3055 16 view .LVU2012
 5482 10f2 43F38F33 		sbfx	r3, r3, #14, #16
 5483              	.LVL569:
3055:Src/BLDC_controller.c ****       14);
 5484              		.loc 1 3055 16 view .LVU2013
 5485 10f6 26E0     		b	.L342
 5486              	.LVL570:
 5487              	.L426:
3038:Src/BLDC_controller.c ****     }
ARM GAS  /tmp/cccGHnrd.s 			page 168


 5488              		.loc 1 3038 27 view .LVU2014
 5489 10f8 0898     		ldr	r0, [sp, #32]
 5490 10fa DAE7     		b	.L343
 5491              	.L478:
 5492              		.align	2
 5493              	.L477:
 5494 10fc 0080FFFF 		.word	-32768
 5495 1100 9348B61B 		.word	464930963
 5496 1104 008049E4 		.word	-464945152
 5497 1108 00000000 		.word	rtConstP
 5498              	.L427:
3069:Src/BLDC_controller.c ****     } else if (rtConstP.vec_hallToPos_Value[Sum] < 0) {
 5499              		.loc 1 3069 18 view .LVU2015
 5500 110c 0520     		movs	r0, #5
 5501              	.L344:
 5502              	.LVL571:
3077:Src/BLDC_controller.c ****     } else {
3078:Src/BLDC_controller.c ****       /* LookupNDDirect: '<S94>/z_commutMap_M1' incorporates:
3079:Src/BLDC_controller.c ****        *  Constant: '<S11>/vec_hallToPos'
3080:Src/BLDC_controller.c ****        *  Selector: '<S11>/Selector'
3081:Src/BLDC_controller.c ****        *
3082:Src/BLDC_controller.c ****        * About '<S94>/z_commutMap_M1':
3083:Src/BLDC_controller.c ****        *  2-dimensional Direct Look-Up returning a Column
3084:Src/BLDC_controller.c ****        */
3085:Src/BLDC_controller.c ****       rtb_Sum2_h = rtConstP.vec_hallToPos_Value[Sum];
3086:Src/BLDC_controller.c ****     }
3087:Src/BLDC_controller.c **** 
3088:Src/BLDC_controller.c ****     /* LookupNDDirect: '<S94>/z_commutMap_M1' incorporates:
3089:Src/BLDC_controller.c ****      *  Constant: '<S11>/vec_hallToPos'
3090:Src/BLDC_controller.c ****      *  Selector: '<S11>/Selector'
3091:Src/BLDC_controller.c ****      *
3092:Src/BLDC_controller.c ****      * About '<S94>/z_commutMap_M1':
3093:Src/BLDC_controller.c ****      *  2-dimensional Direct Look-Up returning a Column
3094:Src/BLDC_controller.c ****      */
3095:Src/BLDC_controller.c ****     rtb_Sum1_jt = rtb_Sum2_h * 3;
 5503              		.loc 1 3095 5 is_stmt 1 view .LVU2016
 5504              		.loc 1 3095 17 is_stmt 0 view .LVU2017
 5505 110e 00EB4000 		add	r0, r0, r0, lsl #1
 5506              	.LVL572:
3096:Src/BLDC_controller.c **** 
3097:Src/BLDC_controller.c ****     /* Product: '<S94>/Divide2' incorporates:
3098:Src/BLDC_controller.c ****      *  LookupNDDirect: '<S94>/z_commutMap_M1'
3099:Src/BLDC_controller.c ****      *
3100:Src/BLDC_controller.c ****      * About '<S94>/z_commutMap_M1':
3101:Src/BLDC_controller.c ****      *  2-dimensional Direct Look-Up returning a Column
3102:Src/BLDC_controller.c ****      */
3103:Src/BLDC_controller.c ****     DataTypeConversion2 = (int16_T)(rtb_Saturation *
 5507              		.loc 1 3103 5 is_stmt 1 view .LVU2018
3104:Src/BLDC_controller.c ****       rtConstP.z_commutMap_M1_table[rtb_Sum1_jt]);
 5508              		.loc 1 3104 36 is_stmt 0 view .LVU2019
 5509 1112 254D     		ldr	r5, .L479
 5510              	.LVL573:
 5511              		.loc 1 3104 36 view .LVU2020
 5512 1114 2B18     		adds	r3, r5, r0
 5513 1116 93F97617 		ldrsb	r1, [r3, #1910]
 5514 111a 89B2     		uxth	r1, r1
3103:Src/BLDC_controller.c ****       rtConstP.z_commutMap_M1_table[rtb_Sum1_jt]);
ARM GAS  /tmp/cccGHnrd.s 			page 169


 5515              		.loc 1 3103 52 view .LVU2021
 5516 111c 1FFA88F3 		uxth	r3, r8
 5517 1120 03FB01F1 		mul	r1, r3, r1
3103:Src/BLDC_controller.c ****       rtConstP.z_commutMap_M1_table[rtb_Sum1_jt]);
 5518              		.loc 1 3103 25 view .LVU2022
 5519 1124 09B2     		sxth	r1, r1
 5520              	.LVL574:
3105:Src/BLDC_controller.c ****     rtb_Saturation1 = (int16_T)(rtConstP.z_commutMap_M1_table[1 + rtb_Sum1_jt] *
 5521              		.loc 1 3105 5 is_stmt 1 view .LVU2023
 5522              		.loc 1 3105 65 is_stmt 0 view .LVU2024
 5523 1126 421C     		adds	r2, r0, #1
 5524              		.loc 1 3105 62 view .LVU2025
 5525 1128 2A44     		add	r2, r2, r5
 5526 112a 92F97627 		ldrsb	r2, [r2, #1910]
 5527 112e 92B2     		uxth	r2, r2
 5528              		.loc 1 3105 80 view .LVU2026
 5529 1130 03FB02F2 		mul	r2, r3, r2
 5530              		.loc 1 3105 21 view .LVU2027
 5531 1134 12B2     		sxth	r2, r2
 5532              	.LVL575:
3106:Src/BLDC_controller.c ****       rtb_Saturation);
3107:Src/BLDC_controller.c ****     rtb_Merge1 = (int16_T)(rtConstP.z_commutMap_M1_table[2 + rtb_Sum1_jt] *
 5533              		.loc 1 3107 5 is_stmt 1 view .LVU2028
 5534              		.loc 1 3107 60 is_stmt 0 view .LVU2029
 5535 1136 0230     		adds	r0, r0, #2
 5536              	.LVL576:
 5537              		.loc 1 3107 57 view .LVU2030
 5538 1138 2844     		add	r0, r0, r5
 5539              	.LVL577:
 5540              		.loc 1 3107 57 view .LVU2031
 5541 113a 90F97607 		ldrsb	r0, [r0, #1910]
 5542              	.LVL578:
 5543              		.loc 1 3107 57 view .LVU2032
 5544 113e 80B2     		uxth	r0, r0
 5545              		.loc 1 3107 75 view .LVU2033
 5546 1140 00FB03F3 		mul	r3, r0, r3
 5547              		.loc 1 3107 16 view .LVU2034
 5548 1144 1BB2     		sxth	r3, r3
 5549              	.LVL579:
 5550              	.L342:
3108:Src/BLDC_controller.c ****       rtb_Saturation);
3109:Src/BLDC_controller.c **** 
3110:Src/BLDC_controller.c ****     /* End of Outputs for SubSystem: '<S8>/COM_Method' */
3111:Src/BLDC_controller.c ****   }
3112:Src/BLDC_controller.c **** 
3113:Src/BLDC_controller.c ****   /* End of If: '<S8>/If' */
3114:Src/BLDC_controller.c **** 
3115:Src/BLDC_controller.c ****   /* Outport: '<Root>/DC_phaA' incorporates:
3116:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S8>/Data Type Conversion6'
3117:Src/BLDC_controller.c ****    */
3118:Src/BLDC_controller.c ****   rtY->DC_phaA = (int16_T)(DataTypeConversion2 >> 4);
 5551              		.loc 1 3118 3 is_stmt 1 view .LVU2035
 5552              		.loc 1 3118 18 is_stmt 0 view .LVU2036
 5553 1146 0911     		asrs	r1, r1, #4
 5554              	.LVL580:
 5555              		.loc 1 3118 16 view .LVU2037
 5556 1148 3980     		strh	r1, [r7]	@ movhi
ARM GAS  /tmp/cccGHnrd.s 			page 170


3119:Src/BLDC_controller.c **** 
3120:Src/BLDC_controller.c ****   /* Outport: '<Root>/DC_phaB' incorporates:
3121:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S8>/Data Type Conversion6'
3122:Src/BLDC_controller.c ****    */
3123:Src/BLDC_controller.c ****   rtY->DC_phaB = (int16_T)(rtb_Saturation1 >> 4);
 5557              		.loc 1 3123 3 is_stmt 1 view .LVU2038
 5558              		.loc 1 3123 18 is_stmt 0 view .LVU2039
 5559 114a 1211     		asrs	r2, r2, #4
 5560              	.LVL581:
 5561              		.loc 1 3123 16 view .LVU2040
 5562 114c 7A80     		strh	r2, [r7, #2]	@ movhi
3124:Src/BLDC_controller.c **** 
3125:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S10>/UnitDelay3' incorporates:
3126:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallA '
3127:Src/BLDC_controller.c ****    */
3128:Src/BLDC_controller.c ****   rtDW->UnitDelay3_DSTATE_fy = rtU->b_hallA;
 5563              		.loc 1 3128 3 is_stmt 1 view .LVU2041
 5564              		.loc 1 3128 35 is_stmt 0 view .LVU2042
 5565 114e 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
 5566              		.loc 1 3128 30 view .LVU2043
 5567 1150 84F89A20 		strb	r2, [r4, #154]
3129:Src/BLDC_controller.c **** 
3130:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S10>/UnitDelay1' incorporates:
3131:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallB'
3132:Src/BLDC_controller.c ****    */
3133:Src/BLDC_controller.c ****   rtDW->UnitDelay1_DSTATE = rtU->b_hallB;
 5568              		.loc 1 3133 3 is_stmt 1 view .LVU2044
 5569              		.loc 1 3133 32 is_stmt 0 view .LVU2045
 5570 1154 7279     		ldrb	r2, [r6, #5]	@ zero_extendqisi2
 5571              		.loc 1 3133 27 view .LVU2046
 5572 1156 84F89B20 		strb	r2, [r4, #155]
3134:Src/BLDC_controller.c **** 
3135:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S10>/UnitDelay2' incorporates:
3136:Src/BLDC_controller.c ****    *  Inport: '<Root>/b_hallC'
3137:Src/BLDC_controller.c ****    */
3138:Src/BLDC_controller.c ****   rtDW->UnitDelay2_DSTATE_f = rtU->b_hallC;
 5573              		.loc 1 3138 3 is_stmt 1 view .LVU2047
 5574              		.loc 1 3138 34 is_stmt 0 view .LVU2048
 5575 115a B279     		ldrb	r2, [r6, #6]	@ zero_extendqisi2
 5576              		.loc 1 3138 29 view .LVU2049
 5577 115c 84F89C20 		strb	r2, [r4, #156]
3139:Src/BLDC_controller.c **** 
3140:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S13>/UnitDelay3' */
3141:Src/BLDC_controller.c ****   rtDW->UnitDelay3_DSTATE = rtb_Switch1_l;
 5578              		.loc 1 3141 3 is_stmt 1 view .LVU2050
 5579              		.loc 1 3141 27 is_stmt 0 view .LVU2051
 5580 1160 0B9A     		ldr	r2, [sp, #44]
 5581 1162 A4F88020 		strh	r2, [r4, #128]	@ movhi
3142:Src/BLDC_controller.c **** 
3143:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S13>/UnitDelay4' */
3144:Src/BLDC_controller.c ****   rtDW->UnitDelay4_DSTATE_e = Abs5;
 5582              		.loc 1 3144 3 is_stmt 1 view .LVU2052
 5583              		.loc 1 3144 29 is_stmt 0 view .LVU2053
 5584 1166 069A     		ldr	r2, [sp, #24]
 5585 1168 A4F88A20 		strh	r2, [r4, #138]	@ movhi
3145:Src/BLDC_controller.c **** 
3146:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S2>/UnitDelay2' incorporates:
ARM GAS  /tmp/cccGHnrd.s 			page 171


3147:Src/BLDC_controller.c ****    *  UnitDelay: '<S2>/UnitDelay6'
3148:Src/BLDC_controller.c ****    */
3149:Src/BLDC_controller.c ****   rtDW->UnitDelay2_DSTATE_c = rtDW->UnitDelay6_DSTATE;
 5586              		.loc 1 3149 3 is_stmt 1 view .LVU2054
 5587              		.loc 1 3149 35 is_stmt 0 view .LVU2055
 5588 116c 94F8A520 		ldrb	r2, [r4, #165]	@ zero_extendqisi2
 5589              		.loc 1 3149 29 view .LVU2056
 5590 1170 84F8A320 		strb	r2, [r4, #163]
3150:Src/BLDC_controller.c **** 
3151:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S2>/UnitDelay5' */
3152:Src/BLDC_controller.c ****   rtDW->UnitDelay5_DSTATE_m = rtb_RelationalOperator4_d;
 5591              		.loc 1 3152 3 is_stmt 1 view .LVU2057
 5592              		.loc 1 3152 29 is_stmt 0 view .LVU2058
 5593 1174 0C9A     		ldr	r2, [sp, #48]
 5594 1176 84F8A420 		strb	r2, [r4, #164]
3153:Src/BLDC_controller.c **** 
3154:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S2>/UnitDelay6' */
3155:Src/BLDC_controller.c ****   rtDW->UnitDelay6_DSTATE = rtb_UnitDelay5_e;
 5595              		.loc 1 3155 3 is_stmt 1 view .LVU2059
 5596              		.loc 1 3155 27 is_stmt 0 view .LVU2060
 5597 117a 0D9A     		ldr	r2, [sp, #52]
 5598 117c 84F8A520 		strb	r2, [r4, #165]
3156:Src/BLDC_controller.c **** 
3157:Src/BLDC_controller.c ****   /* Update for UnitDelay: '<S8>/UnitDelay4' */
3158:Src/BLDC_controller.c ****   rtDW->UnitDelay4_DSTATE_eu = rtb_Saturation;
 5599              		.loc 1 3158 3 is_stmt 1 view .LVU2061
 5600              		.loc 1 3158 30 is_stmt 0 view .LVU2062
 5601 1180 A4F88C80 		strh	r8, [r4, #140]	@ movhi
3159:Src/BLDC_controller.c **** 
3160:Src/BLDC_controller.c ****   /* Outport: '<Root>/DC_phaC' incorporates:
3161:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S8>/Data Type Conversion6'
3162:Src/BLDC_controller.c ****    */
3163:Src/BLDC_controller.c ****   rtY->DC_phaC = (int16_T)(rtb_Merge1 >> 4);
 5602              		.loc 1 3163 3 is_stmt 1 view .LVU2063
 5603              		.loc 1 3163 18 is_stmt 0 view .LVU2064
 5604 1184 1B11     		asrs	r3, r3, #4
 5605              	.LVL582:
 5606              		.loc 1 3163 16 view .LVU2065
 5607 1186 BB80     		strh	r3, [r7, #4]	@ movhi
3164:Src/BLDC_controller.c **** 
3165:Src/BLDC_controller.c ****   /* Outport: '<Root>/n_mot' incorporates:
3166:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S1>/Data Type Conversion1'
3167:Src/BLDC_controller.c ****    */
3168:Src/BLDC_controller.c ****   rtY->n_mot = (int16_T)(Switch2 >> 4);
 5608              		.loc 1 3168 3 is_stmt 1 view .LVU2066
 5609              		.loc 1 3168 16 is_stmt 0 view .LVU2067
 5610 1188 0A9B     		ldr	r3, [sp, #40]
 5611 118a 1B11     		asrs	r3, r3, #4
 5612              		.loc 1 3168 14 view .LVU2068
 5613 118c 3B81     		strh	r3, [r7, #8]	@ movhi
3169:Src/BLDC_controller.c **** 
3170:Src/BLDC_controller.c ****   /* Outport: '<Root>/a_elecAngle' incorporates:
3171:Src/BLDC_controller.c ****    *  DataTypeConversion: '<S1>/Data Type Conversion3'
3172:Src/BLDC_controller.c ****    */
3173:Src/BLDC_controller.c ****   rtY->a_elecAngle = (int16_T)(rtb_Merge_m >> 6);
 5614              		.loc 1 3173 3 is_stmt 1 view .LVU2069
 5615              		.loc 1 3173 22 is_stmt 0 view .LVU2070
ARM GAS  /tmp/cccGHnrd.s 			page 172


 5616 118e 089B     		ldr	r3, [sp, #32]
 5617 1190 9B11     		asrs	r3, r3, #6
 5618              		.loc 1 3173 20 view .LVU2071
 5619 1192 7B81     		strh	r3, [r7, #10]	@ movhi
3174:Src/BLDC_controller.c **** 
3175:Src/BLDC_controller.c ****   /* End of Outputs for SubSystem: '<Root>/BLDC_controller' */
3176:Src/BLDC_controller.c **** 
3177:Src/BLDC_controller.c ****   /* Outport: '<Root>/iq' */
3178:Src/BLDC_controller.c ****   rtY->iq = rtDW->DataTypeConversion[0];
 5620              		.loc 1 3178 3 is_stmt 1 view .LVU2072
 5621              		.loc 1 3178 37 is_stmt 0 view .LVU2073
 5622 1194 B4F95230 		ldrsh	r3, [r4, #82]
 5623              		.loc 1 3178 11 view .LVU2074
 5624 1198 BB81     		strh	r3, [r7, #12]	@ movhi
3179:Src/BLDC_controller.c **** 
3180:Src/BLDC_controller.c ****   /* Outport: '<Root>/id' */
3181:Src/BLDC_controller.c ****   rtY->id = rtDW->DataTypeConversion[1];
 5625              		.loc 1 3181 3 is_stmt 1 view .LVU2075
 5626              		.loc 1 3181 37 is_stmt 0 view .LVU2076
 5627 119a B4F95430 		ldrsh	r3, [r4, #84]
 5628              		.loc 1 3181 11 view .LVU2077
 5629 119e FB81     		strh	r3, [r7, #14]	@ movhi
3182:Src/BLDC_controller.c **** }
 5630              		.loc 1 3182 1 view .LVU2078
 5631 11a0 13B0     		add	sp, sp, #76
 5632              	.LCFI16:
 5633              		.cfi_def_cfa_offset 36
 5634              		@ sp needed
 5635 11a2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5636              	.LVL583:
 5637              	.L480:
 5638              		.loc 1 3182 1 view .LVU2079
 5639 11a6 00BF     		.align	2
 5640              	.L479:
 5641 11a8 00000000 		.word	rtConstP
 5642              		.cfi_endproc
 5643              	.LFE24:
 5645              		.section	.text.BLDC_controller_initialize,"ax",%progbits
 5646              		.align	1
 5647              		.global	BLDC_controller_initialize
 5648              		.syntax unified
 5649              		.thumb
 5650              		.thumb_func
 5652              	BLDC_controller_initialize:
 5653              	.LVL584:
 5654              	.LFB25:
3183:Src/BLDC_controller.c **** 
3184:Src/BLDC_controller.c **** /* Model initialize function */
3185:Src/BLDC_controller.c **** void BLDC_controller_initialize(RT_MODEL *const rtM)
3186:Src/BLDC_controller.c **** {
 5655              		.loc 1 3186 1 is_stmt 1 view -0
 5656              		.cfi_startproc
 5657              		@ args = 0, pretend = 0, frame = 0
 5658              		@ frame_needed = 0, uses_anonymous_args = 0
 5659              		.loc 1 3186 1 is_stmt 0 view .LVU2081
 5660 0000 38B5     		push	{r3, r4, r5, lr}
 5661              	.LCFI17:
ARM GAS  /tmp/cccGHnrd.s 			page 173


 5662              		.cfi_def_cfa_offset 16
 5663              		.cfi_offset 3, -16
 5664              		.cfi_offset 4, -12
 5665              		.cfi_offset 5, -8
 5666              		.cfi_offset 14, -4
3187:Src/BLDC_controller.c ****   P *rtP = ((P *) rtM->defaultParam);
 5667              		.loc 1 3187 3 is_stmt 1 view .LVU2082
 5668              		.loc 1 3187 6 is_stmt 0 view .LVU2083
 5669 0002 0268     		ldr	r2, [r0]
 5670              	.LVL585:
3188:Src/BLDC_controller.c ****   DW *rtDW = ((DW *) rtM->dwork);
 5671              		.loc 1 3188 3 is_stmt 1 view .LVU2084
 5672              		.loc 1 3188 7 is_stmt 0 view .LVU2085
 5673 0004 C468     		ldr	r4, [r0, #12]
 5674              	.LVL586:
3189:Src/BLDC_controller.c **** 
3190:Src/BLDC_controller.c ****   /* Start for Atomic SubSystem: '<Root>/BLDC_controller' */
3191:Src/BLDC_controller.c ****   /* Start for If: '<S7>/If1' */
3192:Src/BLDC_controller.c ****   rtDW->If1_ActiveSubsystem = -1;
 5675              		.loc 1 3192 3 is_stmt 1 view .LVU2086
 5676              		.loc 1 3192 29 is_stmt 0 view .LVU2087
 5677 0006 FF23     		movs	r3, #255
 5678 0008 84F89030 		strb	r3, [r4, #144]
3193:Src/BLDC_controller.c **** 
3194:Src/BLDC_controller.c ****   /* Start for IfAction SubSystem: '<S7>/Clarke_Park_Transform_Forward' */
3195:Src/BLDC_controller.c ****   /* Start for If: '<S45>/If2' */
3196:Src/BLDC_controller.c ****   rtDW->If2_ActiveSubsystem_a = -1;
 5679              		.loc 1 3196 3 is_stmt 1 view .LVU2088
 5680              		.loc 1 3196 31 is_stmt 0 view .LVU2089
 5681 000c 84F89830 		strb	r3, [r4, #152]
3197:Src/BLDC_controller.c **** 
3198:Src/BLDC_controller.c ****   /* End of Start for SubSystem: '<S7>/Clarke_Park_Transform_Forward' */
3199:Src/BLDC_controller.c **** 
3200:Src/BLDC_controller.c ****   /* Start for Chart: '<S1>/Task_Scheduler' incorporates:
3201:Src/BLDC_controller.c ****    *  SubSystem: '<S1>/F03_Control_Mode_Manager'
3202:Src/BLDC_controller.c ****    */
3203:Src/BLDC_controller.c ****   /* Start for If: '<S33>/If2' */
3204:Src/BLDC_controller.c ****   rtDW->If2_ActiveSubsystem_f = -1;
 5682              		.loc 1 3204 3 is_stmt 1 view .LVU2090
 5683              		.loc 1 3204 31 is_stmt 0 view .LVU2091
 5684 0010 84F89730 		strb	r3, [r4, #151]
3205:Src/BLDC_controller.c **** 
3206:Src/BLDC_controller.c ****   /* Start for Chart: '<S1>/Task_Scheduler' incorporates:
3207:Src/BLDC_controller.c ****    *  SubSystem: '<S7>/Motor_Limitations'
3208:Src/BLDC_controller.c ****    */
3209:Src/BLDC_controller.c ****   /* Start for If: '<S48>/If1' */
3210:Src/BLDC_controller.c ****   rtDW->If1_ActiveSubsystem_o = -1;
 5685              		.loc 1 3210 3 is_stmt 1 view .LVU2092
 5686              		.loc 1 3210 31 is_stmt 0 view .LVU2093
 5687 0014 84F89530 		strb	r3, [r4, #149]
3211:Src/BLDC_controller.c **** 
3212:Src/BLDC_controller.c ****   /* Start for IfAction SubSystem: '<S48>/Motor_Limitations_Enabled' */
3213:Src/BLDC_controller.c ****   /* Start for SwitchCase: '<S80>/Switch Case' */
3214:Src/BLDC_controller.c ****   rtDW->SwitchCase_ActiveSubsystem_d = -1;
 5688              		.loc 1 3214 3 is_stmt 1 view .LVU2094
 5689              		.loc 1 3214 38 is_stmt 0 view .LVU2095
 5690 0018 84F89630 		strb	r3, [r4, #150]
ARM GAS  /tmp/cccGHnrd.s 			page 174


3215:Src/BLDC_controller.c **** 
3216:Src/BLDC_controller.c ****   /* End of Start for SubSystem: '<S48>/Motor_Limitations_Enabled' */
3217:Src/BLDC_controller.c **** 
3218:Src/BLDC_controller.c ****   /* Start for Chart: '<S1>/Task_Scheduler' incorporates:
3219:Src/BLDC_controller.c ****    *  SubSystem: '<S7>/FOC'
3220:Src/BLDC_controller.c ****    */
3221:Src/BLDC_controller.c ****   /* Start for If: '<S47>/If1' */
3222:Src/BLDC_controller.c ****   rtDW->If1_ActiveSubsystem_j = -1;
 5691              		.loc 1 3222 3 is_stmt 1 view .LVU2096
 5692              		.loc 1 3222 31 is_stmt 0 view .LVU2097
 5693 001c 84F89230 		strb	r3, [r4, #146]
3223:Src/BLDC_controller.c **** 
3224:Src/BLDC_controller.c ****   /* Start for IfAction SubSystem: '<S47>/FOC_Enabled' */
3225:Src/BLDC_controller.c ****   /* Start for SwitchCase: '<S59>/Switch Case' */
3226:Src/BLDC_controller.c ****   rtDW->SwitchCase_ActiveSubsystem = -1;
 5694              		.loc 1 3226 3 is_stmt 1 view .LVU2098
 5695              		.loc 1 3226 36 is_stmt 0 view .LVU2099
 5696 0020 84F89330 		strb	r3, [r4, #147]
3227:Src/BLDC_controller.c **** 
3228:Src/BLDC_controller.c ****   /* Start for If: '<S59>/If1' */
3229:Src/BLDC_controller.c ****   rtDW->If1_ActiveSubsystem_a = -1;
 5697              		.loc 1 3229 3 is_stmt 1 view .LVU2100
 5698              		.loc 1 3229 31 is_stmt 0 view .LVU2101
 5699 0024 84F89430 		strb	r3, [r4, #148]
3230:Src/BLDC_controller.c **** 
3231:Src/BLDC_controller.c ****   /* End of Start for SubSystem: '<S47>/FOC_Enabled' */
3232:Src/BLDC_controller.c **** 
3233:Src/BLDC_controller.c ****   /* Start for If: '<S7>/If2' */
3234:Src/BLDC_controller.c ****   rtDW->If2_ActiveSubsystem = -1;
 5700              		.loc 1 3234 3 is_stmt 1 view .LVU2102
 5701              		.loc 1 3234 29 is_stmt 0 view .LVU2103
 5702 0028 84F89130 		strb	r3, [r4, #145]
3235:Src/BLDC_controller.c **** 
3236:Src/BLDC_controller.c ****   /* End of Start for SubSystem: '<Root>/BLDC_controller' */
3237:Src/BLDC_controller.c **** 
3238:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<Root>/BLDC_controller' */
3239:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S13>/UnitDelay3' */
3240:Src/BLDC_controller.c ****   rtDW->UnitDelay3_DSTATE = rtP->z_maxCntRst;
 5703              		.loc 1 3240 3 is_stmt 1 view .LVU2104
 5704              		.loc 1 3240 32 is_stmt 0 view .LVU2105
 5705 002c B2F90A30 		ldrsh	r3, [r2, #10]
 5706              		.loc 1 3240 27 view .LVU2106
 5707 0030 A4F88030 		strh	r3, [r4, #128]	@ movhi
3241:Src/BLDC_controller.c **** 
3242:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S2>/UnitDelay2' */
3243:Src/BLDC_controller.c ****   rtDW->UnitDelay2_DSTATE_c = true;
 5708              		.loc 1 3243 3 is_stmt 1 view .LVU2107
 5709              		.loc 1 3243 29 is_stmt 0 view .LVU2108
 5710 0034 0125     		movs	r5, #1
 5711 0036 84F8A350 		strb	r5, [r4, #163]
3244:Src/BLDC_controller.c **** 
3245:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S13>/Raw_Motor_Speed_Estimation' */
3246:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S17>/z_counter' */
3247:Src/BLDC_controller.c ****   rtDW->z_counterRawPrev = rtP->z_maxCntRst;
 5712              		.loc 1 3247 3 is_stmt 1 view .LVU2109
 5713              		.loc 1 3247 31 is_stmt 0 view .LVU2110
 5714 003a B2F90A10 		ldrsh	r1, [r2, #10]
ARM GAS  /tmp/cccGHnrd.s 			page 175


 5715              		.loc 1 3247 26 view .LVU2111
 5716 003e A4F85610 		strh	r1, [r4, #86]	@ movhi
3248:Src/BLDC_controller.c **** 
3249:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S13>/Raw_Motor_Speed_Estimation' */
3250:Src/BLDC_controller.c **** 
3251:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S13>/Counter' */
3252:Src/BLDC_controller.c ****   Counter_Init(&rtDW->Counter_e, rtP->z_maxCntRst);
 5717              		.loc 1 3252 3 is_stmt 1 view .LVU2112
 5718 0042 04F14000 		add	r0, r4, #64
 5719              	.LVL587:
 5720              		.loc 1 3252 3 is_stmt 0 view .LVU2113
 5721 0046 FFF7FEFF 		bl	Counter_Init
 5722              	.LVL588:
3253:Src/BLDC_controller.c **** 
3254:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S13>/Counter' */
3255:Src/BLDC_controller.c **** 
3256:Src/BLDC_controller.c ****   /* SystemInitialize for Chart: '<S1>/Task_Scheduler' incorporates:
3257:Src/BLDC_controller.c ****    *  SubSystem: '<S1>/F02_Diagnostics'
3258:Src/BLDC_controller.c ****    */
3259:Src/BLDC_controller.c **** 
3260:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S4>/Diagnostics_Enabled' */
3261:Src/BLDC_controller.c **** 
3262:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S20>/Debounce_Filter' */
3263:Src/BLDC_controller.c ****   Debounce_Filter_Init(&rtDW->Debounce_Filter_k);
 5723              		.loc 1 3263 3 is_stmt 1 view .LVU2114
 5724 004a 04F12E00 		add	r0, r4, #46
 5725 004e FFF7FEFF 		bl	Debounce_Filter_Init
 5726              	.LVL589:
3264:Src/BLDC_controller.c **** 
3265:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S20>/Debounce_Filter' */
3266:Src/BLDC_controller.c **** 
3267:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S4>/Diagnostics_Enabled' */
3268:Src/BLDC_controller.c **** 
3269:Src/BLDC_controller.c ****   /* SystemInitialize for Chart: '<S1>/Task_Scheduler' incorporates:
3270:Src/BLDC_controller.c ****    *  SubSystem: '<S1>/F03_Control_Mode_Manager'
3271:Src/BLDC_controller.c ****    */
3272:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S33>/Open_Mode' */
3273:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S37>/rising_edge_init' */
3274:Src/BLDC_controller.c ****   /* InitializeConditions for UnitDelay: '<S39>/UnitDelay' */
3275:Src/BLDC_controller.c ****   rtDW->UnitDelay_DSTATE_b = true;
 5727              		.loc 1 3275 3 view .LVU2115
 5728              		.loc 1 3275 28 is_stmt 0 view .LVU2116
 5729 0052 84F8A650 		strb	r5, [r4, #166]
3276:Src/BLDC_controller.c **** 
3277:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S37>/rising_edge_init' */
3278:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S33>/Open_Mode' */
3279:Src/BLDC_controller.c **** 
3280:Src/BLDC_controller.c ****   /* SystemInitialize for Chart: '<S1>/Task_Scheduler' incorporates:
3281:Src/BLDC_controller.c ****    *  SubSystem: '<S7>/Motor_Limitations'
3282:Src/BLDC_controller.c ****    */
3283:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S48>/Motor_Limitations_Enabled' */
3284:Src/BLDC_controller.c **** 
3285:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S80>/Voltage_Mode_Protection' */
3286:Src/BLDC_controller.c **** 
3287:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S83>/I_backCalc_fixdt' */
3288:Src/BLDC_controller.c ****   I_backCalc_fixdt_Init(&rtDW->I_backCalc_fixdt_i, 65536000);
 5730              		.loc 1 3288 3 is_stmt 1 view .LVU2117
ARM GAS  /tmp/cccGHnrd.s 			page 176


 5731 0056 4FF07A71 		mov	r1, #65536000
 5732 005a 04F12400 		add	r0, r4, #36
 5733 005e FFF7FEFF 		bl	I_backCalc_fixdt_Init
 5734              	.LVL590:
3289:Src/BLDC_controller.c **** 
3290:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S83>/I_backCalc_fixdt' */
3291:Src/BLDC_controller.c **** 
3292:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S83>/I_backCalc_fixdt1' */
3293:Src/BLDC_controller.c ****   I_backCalc_fixdt_Init(&rtDW->I_backCalc_fixdt1, 65536000);
 5735              		.loc 1 3293 3 view .LVU2118
 5736 0062 4FF07A71 		mov	r1, #65536000
 5737 0066 04F11C00 		add	r0, r4, #28
 5738 006a FFF7FEFF 		bl	I_backCalc_fixdt_Init
 5739              	.LVL591:
3294:Src/BLDC_controller.c **** 
3295:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S83>/I_backCalc_fixdt1' */
3296:Src/BLDC_controller.c **** 
3297:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S80>/Voltage_Mode_Protection' */
3298:Src/BLDC_controller.c **** 
3299:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S80>/Torque_Mode_Protection' */
3300:Src/BLDC_controller.c **** 
3301:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S82>/I_backCalc_fixdt' */
3302:Src/BLDC_controller.c ****   I_backCalc_fixdt_Init(&rtDW->I_backCalc_fixdt_j, 58982400);
 5740              		.loc 1 3302 3 view .LVU2119
 5741 006e 4FF06171 		mov	r1, #58982400
 5742 0072 04F11400 		add	r0, r4, #20
 5743 0076 FFF7FEFF 		bl	I_backCalc_fixdt_Init
 5744              	.LVL592:
3303:Src/BLDC_controller.c **** 
3304:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S82>/I_backCalc_fixdt' */
3305:Src/BLDC_controller.c **** 
3306:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S80>/Torque_Mode_Protection' */
3307:Src/BLDC_controller.c **** 
3308:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/Vd_max' */
3309:Src/BLDC_controller.c ****   rtDW->Vd_max1 = 14400;
 5745              		.loc 1 3309 3 view .LVU2120
 5746              		.loc 1 3309 17 is_stmt 0 view .LVU2121
 5747 007a 4FF46152 		mov	r2, #14400
 5748 007e A4F85C20 		strh	r2, [r4, #92]	@ movhi
3310:Src/BLDC_controller.c **** 
3311:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/Vd_min' */
3312:Src/BLDC_controller.c ****   rtDW->Gain3 = -14400;
 5749              		.loc 1 3312 3 is_stmt 1 view .LVU2122
 5750              		.loc 1 3312 15 is_stmt 0 view .LVU2123
 5751 0082 4CF2C073 		movw	r3, #51136
 5752 0086 A4F85E30 		strh	r3, [r4, #94]	@ movhi
3313:Src/BLDC_controller.c **** 
3314:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/Vq_max' */
3315:Src/BLDC_controller.c ****   rtDW->Vq_max_M1 = 14400;
 5753              		.loc 1 3315 3 is_stmt 1 view .LVU2124
 5754              		.loc 1 3315 19 is_stmt 0 view .LVU2125
 5755 008a A4F86020 		strh	r2, [r4, #96]	@ movhi
3316:Src/BLDC_controller.c **** 
3317:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/Vq_min' */
3318:Src/BLDC_controller.c ****   rtDW->Gain5 = -14400;
 5756              		.loc 1 3318 3 is_stmt 1 view .LVU2126
 5757              		.loc 1 3318 15 is_stmt 0 view .LVU2127
ARM GAS  /tmp/cccGHnrd.s 			page 177


 5758 008e A4F86230 		strh	r3, [r4, #98]	@ movhi
3319:Src/BLDC_controller.c **** 
3320:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/id_max' */
3321:Src/BLDC_controller.c ****   rtDW->i_max = 12000;
 5759              		.loc 1 3321 3 is_stmt 1 view .LVU2128
 5760              		.loc 1 3321 15 is_stmt 0 view .LVU2129
 5761 0092 42F6E062 		movw	r2, #12000
 5762 0096 A4F86420 		strh	r2, [r4, #100]	@ movhi
3322:Src/BLDC_controller.c **** 
3323:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/id_min' */
3324:Src/BLDC_controller.c ****   rtDW->Gain4 = -12000;
 5763              		.loc 1 3324 3 is_stmt 1 view .LVU2130
 5764              		.loc 1 3324 15 is_stmt 0 view .LVU2131
 5765 009a 4DF22013 		movw	r3, #53536
 5766 009e A4F86A30 		strh	r3, [r4, #106]	@ movhi
3325:Src/BLDC_controller.c **** 
3326:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/iq_max' */
3327:Src/BLDC_controller.c ****   rtDW->Divide1_n = 12000;
 5767              		.loc 1 3327 3 is_stmt 1 view .LVU2132
 5768              		.loc 1 3327 19 is_stmt 0 view .LVU2133
 5769 00a2 A4F86620 		strh	r2, [r4, #102]	@ movhi
3328:Src/BLDC_controller.c **** 
3329:Src/BLDC_controller.c ****   /* SystemInitialize for Outport: '<S80>/iq_min' */
3330:Src/BLDC_controller.c ****   rtDW->Gain1 = -12000;
 5770              		.loc 1 3330 3 is_stmt 1 view .LVU2134
 5771              		.loc 1 3330 15 is_stmt 0 view .LVU2135
 5772 00a6 A4F86830 		strh	r3, [r4, #104]	@ movhi
3331:Src/BLDC_controller.c **** 
3332:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S48>/Motor_Limitations_Enabled' */
3333:Src/BLDC_controller.c **** 
3334:Src/BLDC_controller.c ****   /* SystemInitialize for Chart: '<S1>/Task_Scheduler' incorporates:
3335:Src/BLDC_controller.c ****    *  SubSystem: '<S7>/FOC'
3336:Src/BLDC_controller.c ****    */
3337:Src/BLDC_controller.c **** 
3338:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S47>/FOC_Enabled' */
3339:Src/BLDC_controller.c **** 
3340:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S59>/Speed_Mode' */
3341:Src/BLDC_controller.c **** 
3342:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S61>/PI_clamp_fixdt' */
3343:Src/BLDC_controller.c ****   PI_clamp_fixdt_d_Init(&rtDW->PI_clamp_fixdt_l4);
 5773              		.loc 1 3343 3 is_stmt 1 view .LVU2136
 5774 00aa 201D     		adds	r0, r4, #4
 5775 00ac FFF7FEFF 		bl	PI_clamp_fixdt_d_Init
 5776              	.LVL593:
3344:Src/BLDC_controller.c **** 
3345:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S61>/PI_clamp_fixdt' */
3346:Src/BLDC_controller.c **** 
3347:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S59>/Speed_Mode' */
3348:Src/BLDC_controller.c **** 
3349:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S59>/Torque_Mode' */
3350:Src/BLDC_controller.c **** 
3351:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S62>/PI_clamp_fixdt' */
3352:Src/BLDC_controller.c ****   PI_clamp_fixdt_f_Init(&rtDW->PI_clamp_fixdt_kh);
 5777              		.loc 1 3352 3 view .LVU2137
 5778 00b0 2046     		mov	r0, r4
 5779 00b2 FFF7FEFF 		bl	PI_clamp_fixdt_f_Init
 5780              	.LVL594:
ARM GAS  /tmp/cccGHnrd.s 			page 178


3353:Src/BLDC_controller.c **** 
3354:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S62>/PI_clamp_fixdt' */
3355:Src/BLDC_controller.c **** 
3356:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S59>/Torque_Mode' */
3357:Src/BLDC_controller.c **** 
3358:Src/BLDC_controller.c ****   /* SystemInitialize for IfAction SubSystem: '<S59>/Vd_Calculation' */
3359:Src/BLDC_controller.c **** 
3360:Src/BLDC_controller.c ****   /* SystemInitialize for Atomic SubSystem: '<S63>/PI_clamp_fixdt' */
3361:Src/BLDC_controller.c ****   PI_clamp_fixdt_Init(&rtDW->PI_clamp_fixdt_i);
 5781              		.loc 1 3361 3 view .LVU2138
 5782 00b6 04F10C00 		add	r0, r4, #12
 5783 00ba FFF7FEFF 		bl	PI_clamp_fixdt_Init
 5784              	.LVL595:
3362:Src/BLDC_controller.c **** 
3363:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S63>/PI_clamp_fixdt' */
3364:Src/BLDC_controller.c **** 
3365:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S59>/Vd_Calculation' */
3366:Src/BLDC_controller.c **** 
3367:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<S47>/FOC_Enabled' */
3368:Src/BLDC_controller.c **** 
3369:Src/BLDC_controller.c ****   /* End of SystemInitialize for SubSystem: '<Root>/BLDC_controller' */
3370:Src/BLDC_controller.c **** }
 5785              		.loc 1 3370 1 is_stmt 0 view .LVU2139
 5786 00be 38BD     		pop	{r3, r4, r5, pc}
 5787              		.loc 1 3370 1 view .LVU2140
 5788              		.cfi_endproc
 5789              	.LFE25:
 5791              		.text
 5792              	.Letext0:
 5793              		.file 2 "Inc/rtwtypes.h"
 5794              		.file 3 "Inc/BLDC_controller.h"
ARM GAS  /tmp/cccGHnrd.s 			page 179


DEFINED SYMBOLS
                            *ABS*:00000000 BLDC_controller.c
     /tmp/cccGHnrd.s:19     .text.plook_u8s16_evencka:00000000 $t
     /tmp/cccGHnrd.s:25     .text.plook_u8s16_evencka:00000000 plook_u8s16_evencka
     /tmp/cccGHnrd.s:78     .text.plook_u8u16_evencka:00000000 $t
     /tmp/cccGHnrd.s:84     .text.plook_u8u16_evencka:00000000 plook_u8u16_evencka
     /tmp/cccGHnrd.s:137    .text.div_nde_s32_floor:00000000 $t
     /tmp/cccGHnrd.s:143    .text.div_nde_s32_floor:00000000 div_nde_s32_floor
     /tmp/cccGHnrd.s:179    .text.Counter_Init:00000000 $t
     /tmp/cccGHnrd.s:185    .text.Counter_Init:00000000 Counter_Init
     /tmp/cccGHnrd.s:202    .text.Counter:00000000 $t
     /tmp/cccGHnrd.s:208    .text.Counter:00000000 Counter
     /tmp/cccGHnrd.s:260    .text.Low_Pass_Filter_Reset:00000000 $t
     /tmp/cccGHnrd.s:266    .text.Low_Pass_Filter_Reset:00000000 Low_Pass_Filter_Reset
     /tmp/cccGHnrd.s:287    .text.Low_Pass_Filter:00000000 $t
     /tmp/cccGHnrd.s:293    .text.Low_Pass_Filter:00000000 Low_Pass_Filter
     /tmp/cccGHnrd.s:398    .text.Low_Pass_Filter:00000058 $d
     /tmp/cccGHnrd.s:403    .text.Counter_b_Init:00000000 $t
     /tmp/cccGHnrd.s:409    .text.Counter_b_Init:00000000 Counter_b_Init
     /tmp/cccGHnrd.s:426    .text.Counter_n:00000000 $t
     /tmp/cccGHnrd.s:432    .text.Counter_n:00000000 Counter_n
     /tmp/cccGHnrd.s:500    .text.either_edge:00000000 $t
     /tmp/cccGHnrd.s:506    .text.either_edge:00000000 either_edge
     /tmp/cccGHnrd.s:532    .text.Debounce_Filter_Init:00000000 $t
     /tmp/cccGHnrd.s:538    .text.Debounce_Filter_Init:00000000 Debounce_Filter_Init
     /tmp/cccGHnrd.s:571    .text.Debounce_Filter:00000000 $t
     /tmp/cccGHnrd.s:577    .text.Debounce_Filter:00000000 Debounce_Filter
     /tmp/cccGHnrd.s:716    .text.I_backCalc_fixdt_Init:00000000 $t
     /tmp/cccGHnrd.s:722    .text.I_backCalc_fixdt_Init:00000000 I_backCalc_fixdt_Init
     /tmp/cccGHnrd.s:739    .text.I_backCalc_fixdt_Reset:00000000 $t
     /tmp/cccGHnrd.s:745    .text.I_backCalc_fixdt_Reset:00000000 I_backCalc_fixdt_Reset
     /tmp/cccGHnrd.s:766    .text.I_backCalc_fixdt:00000000 $t
     /tmp/cccGHnrd.s:772    .text.I_backCalc_fixdt:00000000 I_backCalc_fixdt
     /tmp/cccGHnrd.s:900    .text.PI_clamp_fixdt_Init:00000000 $t
     /tmp/cccGHnrd.s:906    .text.PI_clamp_fixdt_Init:00000000 PI_clamp_fixdt_Init
     /tmp/cccGHnrd.s:924    .text.PI_clamp_fixdt_Reset:00000000 $t
     /tmp/cccGHnrd.s:930    .text.PI_clamp_fixdt_Reset:00000000 PI_clamp_fixdt_Reset
     /tmp/cccGHnrd.s:952    .text.PI_clamp_fixdt:00000000 $t
     /tmp/cccGHnrd.s:958    .text.PI_clamp_fixdt:00000000 PI_clamp_fixdt
     /tmp/cccGHnrd.s:1217   .text.PI_clamp_fixdt:000000f0 $d
     /tmp/cccGHnrd.s:1222   .text.PI_clamp_fixdt_d_Init:00000000 $t
     /tmp/cccGHnrd.s:1228   .text.PI_clamp_fixdt_d_Init:00000000 PI_clamp_fixdt_d_Init
     /tmp/cccGHnrd.s:1246   .text.PI_clamp_fixdt_b_Reset:00000000 $t
     /tmp/cccGHnrd.s:1252   .text.PI_clamp_fixdt_b_Reset:00000000 PI_clamp_fixdt_b_Reset
     /tmp/cccGHnrd.s:1274   .text.PI_clamp_fixdt_l:00000000 $t
     /tmp/cccGHnrd.s:1280   .text.PI_clamp_fixdt_l:00000000 PI_clamp_fixdt_l
     /tmp/cccGHnrd.s:1541   .text.PI_clamp_fixdt_l:000000f4 $d
     /tmp/cccGHnrd.s:1546   .text.PI_clamp_fixdt_f_Init:00000000 $t
     /tmp/cccGHnrd.s:1552   .text.PI_clamp_fixdt_f_Init:00000000 PI_clamp_fixdt_f_Init
     /tmp/cccGHnrd.s:1570   .text.PI_clamp_fixdt_g_Reset:00000000 $t
     /tmp/cccGHnrd.s:1576   .text.PI_clamp_fixdt_g_Reset:00000000 PI_clamp_fixdt_g_Reset
     /tmp/cccGHnrd.s:1598   .text.PI_clamp_fixdt_k:00000000 $t
     /tmp/cccGHnrd.s:1604   .text.PI_clamp_fixdt_k:00000000 PI_clamp_fixdt_k
     /tmp/cccGHnrd.s:1882   .text.PI_clamp_fixdt_k:00000104 $d
     /tmp/cccGHnrd.s:1887   .text.BLDC_controller_step:00000000 $t
     /tmp/cccGHnrd.s:1893   .text.BLDC_controller_step:00000000 BLDC_controller_step
     /tmp/cccGHnrd.s:2644   .text.BLDC_controller_step:00000358 $d
ARM GAS  /tmp/cccGHnrd.s 			page 180


     /tmp/cccGHnrd.s:2652   .text.BLDC_controller_step:00000368 $t
     /tmp/cccGHnrd.s:3295   .text.BLDC_controller_step:00000664 $d
     /tmp/cccGHnrd.s:3303   .text.BLDC_controller_step:00000674 $t
     /tmp/cccGHnrd.s:4011   .text.BLDC_controller_step:000009c0 $d
     /tmp/cccGHnrd.s:4016   .text.BLDC_controller_step:000009cc $t
     /tmp/cccGHnrd.s:4698   .text.BLDC_controller_step:00000d24 $d
     /tmp/cccGHnrd.s:4702   .text.BLDC_controller_step:00000d34 $t
     /tmp/cccGHnrd.s:4859   .text.BLDC_controller_step:00000de4 $d
     /tmp/cccGHnrd.s:4864   .text.BLDC_controller_step:00000dec $t
     /tmp/cccGHnrd.s:5494   .text.BLDC_controller_step:000010fc $d
     /tmp/cccGHnrd.s:5500   .text.BLDC_controller_step:0000110c $t
     /tmp/cccGHnrd.s:5641   .text.BLDC_controller_step:000011a8 $d
     /tmp/cccGHnrd.s:5646   .text.BLDC_controller_initialize:00000000 $t
     /tmp/cccGHnrd.s:5652   .text.BLDC_controller_initialize:00000000 BLDC_controller_initialize

UNDEFINED SYMBOLS
rtConstP
